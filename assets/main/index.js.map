{"version":3,"sources":["../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BalanceLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostsController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostType.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ButtonFeedbacks.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/CollectedItemShower.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/CopyInviteLink.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/FadePopup.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/FriendItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/FriendsScrollViewer.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingHider.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingScreen.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingScreenHider.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/MainMiningLabels.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/MiningCollectController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/OpenLinkWithTelegram.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/PopupManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/RotatableUITransform.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ServerCommunicator.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ShareInviteLink.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SizePopup.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SlidePopup.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcaseCounter.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcaseItemsController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcasesDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TaskItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TasksDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TasksScrollViewer.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/telegram-web.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TestGetLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TimerLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UserDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UserInfoDisplay.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UsernameLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/VibrationManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/VibrationToggle.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Label","_descriptor","_applyDecoratedDescriptor","_class2","_Component","BalanceLabel","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_inheritsLoose","_proto","prototype","start","this","initWithUserData","_initWithUserData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","UserDataManager","instance","isInited","Promise","resolve","setTimeout","eventTarget","on","updateMe","myLabel","string","getUserBalance","toFixed","stop","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","BoostsController","_dec3","type","Enum","BoostType","_dec4","_dec5","RichText","_dec6","Color","_dec7","_dec8","_dec9","Node","_dec10","_dec11","_dec12","LoadingHider","BoostItem","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","isButtonActive","onLoad","loader","show","buyButtonNode","EventType","TOUCH_END","buyButtonPressed","colorToHex","color","componentToHex","r","g","b","c","hex","toString","level","currentValue","nextValue","priceForNext","levelLabel","levelPrefix","currentColorHex","currentValueTextColor","nextColorHex","nextValueTextColor","valuesRichText","valuesPostfix","priceLabel","pricePrefix","pricePostfix","buyButtonActivity","hide","updateMeLikeFull","actvivty","getComponent","Sprite","activeButtonColor","unactiveButtonColor","boostController","buyBoostByBoostType","myBoostType","tryingPurchase","purchaseSuccessful","VibrationManager","success","purchaseUnsuccessful","error","Duration","loadDataFromUserData","_loadDataFromUserData","setDurationBoostInfo","setSpeedBoostInfo","curMiningSpeedId","getUserSpeedId","curMiningSpeed","getUserCurrentSpeed","nextMiningSpeedId","getSpeedInfosCount","console","log","speedBoost","nextMiningSpeed","getMiningSpeedById","nextMiningSpeedPrice","getSpeedPriceById","curMiningDurationId","getUserDurationId","curMiningDuration","getUserCurrentDuration","nextMiningDurationId","getDurationInfosCount","durationBoost","nextMiningDuration","getMiningDurationById","nextMiningDurationPrice","getDurationPriceById","boostType","tryBuyNextDuration","Speed","tryBuyNextSpeed","_tryBuyNextDuration","_callee2","userId","response","_context2","getUserId","ServerCommunicator","sendGetRequest","sent","forceUpdateUserInfo","_tryBuyNextSpeed","_callee3","_context3","CCFloat","tooltip","ButtonFeedbacks","originalScale","Vec3","set","node","scale","MOUSE_ENTER","onMouseEnter","MOUSE_LEAVE","onMouseLeave","onClick","useHoverTween","tween","to","hoverDuration","hoverScale","useClickTween","soft","clickDuration","clickScale","clickScaleUp","FadePopup","SizePopup","CollectedItemShower","spriteFrame","itemSprite","fadePopup","sizePopup","sizeMode","SizeMode","RAW","originalSize","getOriginalSize","targetWidth","width","targetHeight","height","scaleFactor","spriteTransform","UITransform","setContentSize","Size","native","copyTextToClipboard","String","CopyInviteLink","_onClick","tgWebApp","user","urlForCopy","TelegramWebApp","Instance","init","getTelegramUser","baseLinkToShare","id","navigator","clipboard","writeText","t0","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","parent","Canvas","uiTransform","halfScreenWidth","halfScreenHeight","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","Toggle","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","update","deltaTime","PopupState","state","None","initOpacity","targetSprite","uiOpacity","getOrAddUIOpacity","isOpenAtStart","opacity","Shown","Hidden","_this2","Hiding","Showing","showDuration","easing","_this3","hideDuration","UIOpacity","addComponent","FriendItem","friendName","friendNameLabel","Prefab","FriendsScrollViewer","_init","referralNames","friendsCountLabel","isArray","every","updateReferralList","showNoReferralsMessage","contentNode","children","removeAllChildren","friendItemPrefab","newFriendItemPrefab","addChild","Mask","myNode","sprite","maskToUse","enabled","shownColor","initialColor","clone","targetColor","hidenColor","onUpdate","a","disactivateOnHide","ProgressBar","LoadingScreen","isMobileDevice","test","userAgent","loadMainScene","onMobileLabel","expand","preloadScene","onProgress","bind","onComplete","completedCount","totalCount","item","progress","progressBar","progressLabel","Math","floor","loadScene","SlidePopup","LoadingScreenHider","waitForHide","_waitForHide","slidePopup","medium","MainMiningLabels","isMiningActive","endDate","timeDifference","updateBalanceLabel","dt","updateCurrentMinedLabel","onDestroy","off","startDateStr","getUserMiningStartDate","startDate","Date","replace","DurationMs","getTimeDifference","getTime","currentTime","currentMinedLabel","minedAmount","abs","_updateBalanceLabel","balanceLabel","balancePrefix","TimerLabel","MiningCollectController","updateCollectNode","duration","miningSpeedLabel","miningSpeedPostfix","miningTimer","collectMiningNode","onClickCollectMiningNode","isTimerActive","tryCollectMinedToServer","_tryCollectMinedToServer","_updateMe","notReadyForCollectNodeColor","readyForCollectNodeColor","OpenLinkWithTelegram","openLink","openTelegramLink","url","_class3","PopupManager","destroy","getInstance","showPopup","index","popups","warn","popupComponent","hidePopup","switchPopup","currentIndex","nextIndex","RotationDirection","RotatableUITransform","_uiTransform","angle","rotationSpeed","direction","currentRotation","eulerAngles","newRotation","z","CLOCKWISE","_instance","_sendGetRequest","endpoint","fetch","method","headers","Content-Type","ok","Error","status","json","abrupt","_x","sendPostRequest","_sendPostRequest","_x2","_createClass","key","get","ShareInviteLink","urlForShare","share","initScale","SlideDirection","initPosition","startPos","getStartPosition","hideDirection","canvasSize","contentSize","Left","Right","Top","Bottom","showDirection","position","endPos","SuitcaseCounter","initWithSuitcaseCount","_initWithSuitcaseCount","SuitcasesDataManager","getCurrentSuitcaseFilledCount","SuitcaseItemData","SuitcaseItems","_class5","_class4","SuitcaseData","_class8","_class7","Suitcases","_class11","_class10","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_class14","SuitcaseItemsController","_descriptor16","_currentMiningItem","_currentUserMiningSuitcaseItemInfo","_currentSpriteFrame","EventTarget","setCurrentSuitcase","setItemsColors","currentMiningItemSprite","onClickCurrentMiningItemSprite","_onClickCurrentMiningItemSprite","miningItemTimerLabel","tryCollectCurrentMiningItem","grayscale","Animation","_tryCollectCurrentMiningItem","collectedItemShower","collectMinedItem","_setCurrentSuitcase","_callee4","withForceUpdate","currentSuitcaseIndex","_context4","loadingHiderSuitcase","loadingHiderCurrentItem","suitcases","suitcasesDatas","forEach","value","suitcaseNode","suitcaseId","getCurrentSuitcaseIndex","Number","isInteger","allSuitcasesPackedNode","_setItemsColors","_callee5","allItems","currentUserSuitcaseItems","currentMiningUserItems","_loop","_ret","_iterator","_step","_context6","items","itemDatas","notCollectedColor","itemName","getAllItems","getCurrentUserSuitcaseItems","getCurrentMiningUserSuitcaseItems","suitcaseItemDataName","suitcaseItemInfo","suitcaseUserItemInfo","currentUserMiningItem","_context5","v","find","itemId","collectedColor","updateCurrentMiningItem","_createForOfIteratorHelperLoose","done","delegateYield","userMiningItem","dataStartMiningItem","collectionDuration","_class13","currentAllItems","currentItems","currentMiningItems","currentSuitcases","forceUpdateData","_forceUpdateData","setAllItemsFromServer","setCurrentUserSuitcaseItemsFromServer","setCurrentMiningUserSuitcaseItemsFromServer","setCurrentSuitcasesFromServer","_setAllItemsFromServer","map","price","chance","suitcaseTypeId","emit","_setCurrentUserSuitcaseItemsFromServer","_setCurrentMiningUserSuitcaseItemsFromServer","miningItems","isFinished","_setCurrentSuitcasesFromServer","userSuitcases","isComplete","_getAllItems","_callee6","forceUpdate","_getCurrentUserSuitcaseItems","_callee7","_context7","_getCurrentMiningUserSuitcaseItems","_callee8","_context8","_x3","_getCurrentSuitcaseIndex","_callee9","incompleteSuitcase","_context9","suitcase","_x4","_getCurrentSuitcaseFilledCount","_callee10","filledSuitcases","_context10","filter","_x5","_collectMinedItem","_callee11","_context11","SpriteFrame","TaskItem","myTaskData","task","taskName","taskInfo","taskDetails","details","rewardLabel","reward","iconSprite","otherIcon","subscribeIcon","moneyIcon","friendsIcon","taskType","TaskType","GoTo","Other","Subscribe","MoneyCount","FriendsCount","nameLabel","sliced","slice","goButton","buttonIconSprite","userTaskInfo","isCompletedIcon","interactable","isNotCompletedIcon","onTaskButtonClicked","_onTaskButtonClicked","isNowCompleted","TasksDataManager","checkTaskCompleted","taskId","goToCompleteTask","_goToCompleteTask","goOtherComplete","goSubscribeComplete","goMoneyComplete","goFriendsComplete","_goOtherComplete","_goSubscribeComplete","forUrlSliced","link","currentTasks","currentUserTasks","setAllTasksFromServer","setCurrentUserTasksFromServer","_setAllTasksFromServer","allTasks","mapTaskType","_setCurrentUserTasksFromServer","userTasks","_checkTaskCompleted","taskCompleted","getAllTasks","_getAllTasks","getUserTasks","_getUserTasks","taskTypeString","TasksScrollViewer","userTasksInfos","allTasksInfos","taskInfoMap","taskDataArray","Map","updateTasksList","tasks","completedTask","uncompletedTask","taskItemPrefab","newOffsetPrefab","taskOffsetPrefab","tgLoadPromise","reject","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Telegram","WebApp","clearInterval","onerror","head","appendChild","_tgWebAppJS","text","shareUrl","URLSearchParams","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","isExpanded","getTelegramWebApp","getTelegramWebAppInitData","initDataUnsafe","getTelegramInitData","initData","doHapticImpact","style","HapticFeedback","impactOccurred","doHapticNotification","notificationOccurred","openInvoice","callback","alert","message","showAlert","TestGetLabel","getMetod","_getMetod","serverCommunicator","label","dateString","updateLabel","timeLeft","formatTimeLeft","seconds","minutes","hours","padZero","num","currentUserInfo","speedInfos","durationInfos","isTimeSyncWithServer","firstname","username","defaultName","syncTimeWithServer","setSpeedInfosFromServer","setDurationInfosFromServer","getUserName","getUserPhotoUrl","photoUrl","balance","dateStartMining","speedId","durationId","getUserInvitedBy","invitedBy","speedInfo","info","speed","durationInfo","_syncTimeWithServer","serverTime","getGoodUserName","isDebug","setUserInfoFromServer","_setUserInfoFromServer","userInfoItems","_response","_userInfoItems","debugId","debugName","debugStartParams","photo_url","date_start_mining","speed_id","duration_id","invited_by","first_name","start_param","_setSpeedInfosFromServer","allSpeeds","_setDurationInfosFromServer","allDurations","UserInfoDisplay","updateUserInfo","_updateUserInfo","userInfoLabel","avatarUrlLabel","userAvatar","loadAvatar","imgAsset","ImageAsset","img","Image","crossOrigin","reset","texture","Texture2D","image","setFilters","Filter","LINEAR","Type","SIMPLE","UsernameLabel","isVibrationSupported","toggleVibration","vibrationEnabled","isVibrationEnabled","light","heavy","rigid","warning","VibrationToggle","updateToggleState","vibrationToggle","onToggleVibration","isVibrationOn"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BalanceLabel')\nexport class BalanceLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    start() {\n        this.initWithUserData();\n    }\n\n    async initWithUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        \n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getUserBalance().toFixed(2);\n        }\n    }\n    \n    updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getUserBalance().toFixed(2);\n        }\n    }\n}\n\n","import { _decorator, Color, Component, Enum, Label, Node, RichText, Sprite } from 'cc';\nimport { LoadingHider } from './LoadingHider';\nimport { BoostsController } from './BoostsController';\nimport { BoostType } from './BoostType';\nimport VibrationManager from './VibrationManager';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BoostItem')\nexport class BoostItem extends Component {\n    @property(BoostsController)\n    boostController: BoostsController = null\n\n    @property({ type: Enum(BoostType) })\n    myBoostType: BoostType = BoostType.Duration;\n\n    @property(Label)\n    levelLabel: Label = null;\n\n    @property\n    levelPrefix: string = \"Level \";\n\n    @property(RichText)\n    valuesRichText: RichText = null;\n\n    @property\n    valuesPostfix: string = \"h\";\n\n    @property(Color)\n    currentValueTextColor: Color = new Color(255, 255, 255);\n\n    @property(Color)\n    nextValueTextColor: Color = new Color(255, 255, 255);\n\n    @property(Label)\n    priceLabel: Label = null;\n\n    @property\n    pricePrefix: string = \"Price: \";\n\n    @property\n    pricePostfix: string = \" $SEM\";\n\n    @property(Node)\n    buyButtonNode: Node = null;\n\n    @property(Color)\n    activeButtonColor: Color = new Color(255, 255, 255);\n\n    @property(Color)\n    unactiveButtonColor: Color = new Color(255, 255, 255);\n\n    @property(LoadingHider)\n    loader: LoadingHider = null;\n\n    isButtonActive = false;\n\n    protected onLoad(): void {\n        if(this.loader){\n            this.loader.show();\n        }\n\n        if(this.buyButtonNode){\n            this.buyButtonNode.on(Node.EventType.TOUCH_END, this.buyButtonPressed, this);\n        }\n    }\n\n    private colorToHex(color: Color): string {\n        const r = this.componentToHex(color.r);\n        const g = this.componentToHex(color.g);\n        const b = this.componentToHex(color.b);\n        return `${r}${g}${b}`;\n    }\n\n    private componentToHex(c: number): string {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    updateMe(level: number, currentValue: number, nextValue: number, priceForNext: number) {\n        this.levelLabel.string = this.levelPrefix + level.toString();\n\n        const currentColorHex = this.colorToHex(this.currentValueTextColor);\n        const nextColorHex = this.colorToHex(this.nextValueTextColor);\n\n        this.valuesRichText.string = `<color=#${currentColorHex}>${currentValue}${this.valuesPostfix} > </color><color=#${nextColorHex}>${nextValue}${this.valuesPostfix}</color>`;\n\n        this.priceLabel.string = this.pricePrefix + priceForNext.toString() + this.pricePostfix;\n\n        const balance = UserDataManager.instance.getUserBalance();\n\n        if(balance >= priceForNext){\n            this.buyButtonActivity(true);\n        }else{\n            this.buyButtonActivity(false);\n        }\n        \n        if(this.loader){\n            this.loader.hide();\n        }\n    }\n\n    updateMeLikeFull(level: number, currentValue: number) {\n        this.levelLabel.string = this.levelPrefix + level.toString();\n\n        const currentColorHex = this.colorToHex(this.currentValueTextColor);\n\n        this.valuesRichText.string = `<color=#${currentColorHex}>${currentValue}${this.valuesPostfix}</color>`;\n\n        this.priceLabel.string = \"Maximum boost!\";\n        this.buyButtonActivity(false);\n        if(this.loader){\n            this.loader.hide();\n        }\n    }\n\n    buyButtonActivity(actvivty: boolean){\n        if(this.buyButtonNode){\n            if(actvivty){\n                this.buyButtonNode.getComponent(Sprite).color = this.activeButtonColor;\n                this.isButtonActive = true;\n            }\n            else{\n                this.buyButtonNode.getComponent(Sprite).color = this.unactiveButtonColor;\n                this.isButtonActive = false;\n            }\n        }\n    }\n\n    buyButtonPressed(){\n        if(this.isButtonActive){\n            this.buyButtonActivity(false);\n            this.boostController.buyBoostByBoostType(this.myBoostType);\n        }\n    }\n\n    tryingPurchase(){\n        if(this.loader){\n            this.loader.show();\n        }\n    }\n\n    purchaseSuccessful(){\n        VibrationManager.success();\n    }\n\n    purchaseUnsuccessful(){\n        VibrationManager.error();\n    }\n}","import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { BoostItem } from './BoostItem';\nimport { BoostType } from './BoostType';\nimport { ServerCommunicator } from './ServerCommunicator';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BoostsController')\nexport class BoostsController extends Component {\n    @property(BoostItem)\n    durationBoost: BoostItem = null;\n\n    @property(BoostItem)\n    speedBoost: BoostItem = null;\n\n    protected start(): void {\n        this.loadDataFromUserData();\n        UserDataManager.eventTarget.on('userDataUpdated', this.loadDataFromUserData, this);\n    }\n\n    async loadDataFromUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.setDurationBoostInfo();\n        this.setSpeedBoostInfo();\n    }\n\n    setSpeedBoostInfo(){\n        const curMiningSpeedId = UserDataManager.instance.getUserSpeedId();\n        const curMiningSpeed = UserDataManager.instance.getUserCurrentSpeed();\n        const nextMiningSpeedId =  curMiningSpeedId + 1;\n\n        if(nextMiningSpeedId > UserDataManager.instance.getSpeedInfosCount()){\n            console.log(\"NO MORE MINING SPEEDS!\")\n            this.speedBoost.updateMeLikeFull(curMiningSpeedId, curMiningSpeed);\n            return;\n        }\n\n        const nextMiningSpeed = UserDataManager.instance.getMiningSpeedById(nextMiningSpeedId);\n        const nextMiningSpeedPrice = UserDataManager.instance.getSpeedPriceById(nextMiningSpeedId);\n\n        this.speedBoost.updateMe(curMiningSpeedId, curMiningSpeed, nextMiningSpeed, nextMiningSpeedPrice);\n    }\n\n    setDurationBoostInfo(){\n        const curMiningDurationId = UserDataManager.instance.getUserDurationId();\n        const curMiningDuration = UserDataManager.instance.getUserCurrentDuration();\n        const nextMiningDurationId =  curMiningDurationId + 1;\n\n        if(nextMiningDurationId > UserDataManager.instance.getDurationInfosCount()){\n            console.log(\"NO MORE MINING DURATIONS!\")\n            this.durationBoost.updateMeLikeFull(curMiningDurationId, curMiningDuration);\n            return;\n        }\n        \n        const nextMiningDuration = UserDataManager.instance.getMiningDurationById(nextMiningDurationId);\n        const nextMiningDurationPrice = UserDataManager.instance.getDurationPriceById(nextMiningDurationId);\n\n        this.durationBoost.updateMe(curMiningDurationId, curMiningDuration, nextMiningDuration, nextMiningDurationPrice);\n    }\n\n    buyBoostByBoostType(boostType: BoostType){\n        if(boostType == BoostType.Duration){\n            this.tryBuyNextDuration();\n        }\n        if(boostType == BoostType.Speed){\n            this.tryBuyNextSpeed();\n        }\n    }\n\n    async tryBuyNextDuration(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.durationBoost.tryingPurchase();\n\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('boost_duration?user_id='+userId);\n        \n        const succBuy: any = response[0]\n\n        if(succBuy == true){\n            this.durationBoost.purchaseSuccessful();\n        }\n        else{\n            this.durationBoost.purchaseUnsuccessful();\n        }\n\n        UserDataManager.instance.forceUpdateUserInfo();\n    }\n\n    async tryBuyNextSpeed(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.speedBoost.tryingPurchase();\n\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('boost_speed?user_id='+userId);\n\n        const succBuy: any = response[0]\n\n        if(succBuy == true){\n            this.speedBoost.purchaseSuccessful();\n        }\n        else{\n            this.speedBoost.purchaseUnsuccessful();\n        }\n\n        UserDataManager.instance.forceUpdateUserInfo();\n    }\n}\n\n","export enum BoostType {\n    Duration,\n    Speed,\n}","import { _decorator, Component, tween, Vec3, Node, CCFloat } from 'cc';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ButtonFeedbacks')\nexport class ButtonFeedbacks extends Component {\n    @property\n    useHoverTween = true;\n\n    @property\n    useClickTween = true;\n\n    @property({ type: CCFloat, tooltip: \"Hover reduction time (in seconds)\" })\n    hoverDuration: number = 0.2;\n\n    @property({tooltip: \"How many times to reduce when hovering\" }) \n    hoverScale: Vec3 = new Vec3(0.95, 0.95, 0.95);\n\n    @property({ type: CCFloat, tooltip: \"Time to decrease when pressed (in seconds)\" })\n    clickDuration: number = 0.1;\n\n    @property({tooltip: \"How many times to reduce when pressed\" })\n    clickScale: Vec3 = new Vec3(0.9, 0.9, 0.9);\n\n    @property({tooltip: \"How much to increase after clicking\" }) \n    clickScaleUp: Vec3 = new Vec3(1.1, 1.1, 1.1);\n\n    private originalScale: Vec3 = new Vec3();\n\n    start() {\n        this.originalScale.set(this.node.scale);\n\n        this.node.on(Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\n        this.node.on(Node.EventType.MOUSE_LEAVE, this.onMouseLeave, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    onMouseEnter() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.hoverScale })\n            .start();\n    }\n\n    onMouseLeave() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.originalScale })\n            .start();\n    }\n\n    onClick() {\n        if(!this.useClickTween) return;\n        VibrationManager.soft();\n        tween(this.node)\n            .to(this.clickDuration, { scale: this.clickScale })\n            .to(this.clickDuration/2, { scale: this.clickScaleUp })\n            .to(this.clickDuration, { scale: this.originalScale })\n            .start();\n    }\n}\n","import { _decorator, Component, Node, Size, Sprite, SpriteFrame, UITransform } from 'cc';\nimport { FadePopup } from './FadePopup';\nimport { SizePopup } from './SizePopup';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CollectedItemShower')\nexport class CollectedItemShower extends Component {\n    @property(Sprite)\n    itemSprite: Sprite = null;\n\n    @property(FadePopup)\n    fadePopup: FadePopup = null;\n\n    @property(SizePopup)\n    sizePopup: SizePopup = null;\n\n    show(spriteFrame: SpriteFrame){\n        if(this.itemSprite && this.fadePopup && this.sizePopup){\n            if (this.itemSprite) {\n                this.itemSprite.spriteFrame = spriteFrame;\n    \n                this.itemSprite.sizeMode = Sprite.SizeMode.RAW;\n    \n                const originalSize = spriteFrame.getOriginalSize();\n    \n                let targetWidth = originalSize.width;\n                let targetHeight = originalSize.height;\n    \n                if (targetHeight > 250) {\n                    const scaleFactor = 250 / targetHeight;\n                    targetHeight = 250;\n                    targetWidth = originalSize.width * scaleFactor;\n                }\n    \n                const spriteTransform = this.itemSprite.node.getComponent(UITransform);\n                if (spriteTransform) {\n                    spriteTransform.setContentSize(new Size(targetWidth, targetHeight));\n                }\n            }\n\n            this.fadePopup.show();\n            this.sizePopup.show();\n        }\n    }\n\n    hide(){\n        if(this.itemSprite && this.fadePopup && this.sizePopup){\n            this.fadePopup.hide();\n            this.sizePopup.hide();\n        }\n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\nimport { native } from \"cc\"; \nconst { copyTextToClipboard } = native;\n\n@ccclass('CopyInviteLink')\nexport class CopyInviteLink extends Component {\n\n    @property(String)\n    public baseLinkToShare: String = 'https://t.me/hamsmining_bot/start?startapp=';\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    async onClick() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n    \n        const user = tgWebApp.getTelegramUser();\n        const urlForCopy = this.baseLinkToShare + user.id.toString();\n    \n        try {\n            await navigator.clipboard.writeText(urlForCopy);\n        } catch (err) {\n            console.error('Cant copy text with: ', err);\n        }\n    }    \n}\n\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, Component, Sprite, tween, UIOpacity } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum PopupState {\n    None,\n    Hidden,\n    Showing,\n    Shown,\n    Hiding,\n}\n\n@ccclass('FadePopup')\nexport class FadePopup extends Component {\n    @property(Sprite)\n    targetSprite: Sprite | null = null;\n\n    @property\n    showDuration: number = 0.5;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    isOpenAtStart: boolean = false;\n\n    private state: PopupState = PopupState.None;\n\n    start() {\n        this.initOpacity();\n    }\n\n    initOpacity() {\n        if (this.targetSprite) {\n            const uiOpacity = this.getOrAddUIOpacity();\n\n            if (this.isOpenAtStart) {\n                uiOpacity.opacity = 255; // Полностью видим\n                this.state = PopupState.Shown;\n            } else {\n                uiOpacity.opacity = 0; // Полностью прозрачный\n                this.state = PopupState.Hidden;\n            }\n        }\n    }\n\n    show() {\n        if (this.state !== PopupState.Hidden && this.state !== PopupState.Hiding && this.state !== PopupState.None) {\n            return;\n        }\n        this.state = PopupState.Showing;\n\n        if (this.targetSprite) {\n            const uiOpacity = this.getOrAddUIOpacity();\n\n            tween(uiOpacity)\n                .to(this.showDuration, { opacity: 255 }, { easing: 'sineOut' })\n                .call(() => {\n                    this.state = PopupState.Shown;\n                })\n                .start();\n        }\n    }\n\n    hide() {\n        if (this.state !== PopupState.Shown && this.state !== PopupState.Showing) {\n            return;\n        }\n        this.state = PopupState.Hiding;\n\n        if (this.targetSprite) {\n            const uiOpacity = this.getOrAddUIOpacity();\n\n            tween(uiOpacity)\n                .to(this.hideDuration, { opacity: 0 }, { easing: 'sineIn' })\n                .call(() => {\n                    this.state = PopupState.Hidden;\n                })\n                .start();\n        }\n    }\n\n    getOrAddUIOpacity() {\n        let uiOpacity = this.targetSprite!.node.getComponent(UIOpacity);\n        if (!uiOpacity) {\n            uiOpacity = this.targetSprite!.node.addComponent(UIOpacity);\n        }\n        return uiOpacity;\n    }\n}\n","import { _decorator, Component, Label, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FriendItem')\nexport class FriendItem extends Component {\n\n    @property(Label)\n    friendNameLabel: Label | null = null;\n\n    init(friendName: string){\n        this.friendNameLabel.string = friendName;\n    }\n}\n\n","import { _decorator, CCInteger, Component, instantiate, Label, Node, Prefab } from 'cc';\nimport { FriendItem } from './FriendItem';\nimport { UserDataManager } from './UserDataManager';\nimport { ServerCommunicator } from './ServerCommunicator';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FriendsScrollViewer')\nexport class FriendsScrollViewer extends Component {\n    @property(Prefab)\n    friendItemPrefab: Prefab = null;\n\n    @property(Label)\n    friendsCountLabel: Label = null;\n\n    @property(Node)\n    contentNode: Node = null;\n\n    start() {\n        this.init();\n    }\n\n    async init() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const userId = UserDataManager.instance.getUserId();\n\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_referrals_names?user_id=' + userId);\n            \n            const referralNames: string[] = response;\n\n            if(this.friendsCountLabel){\n                this.friendsCountLabel.string = referralNames.length.toString();\n            }\n\n            if (Array.isArray(referralNames) && referralNames.every(name => typeof name === 'string')) {\n                if (referralNames.length > 0) {\n                    this.updateReferralList(referralNames);\n                } else {\n                    this.showNoReferralsMessage();\n                }\n            } else {\n                console.error('ERROR IN GETTING FRIENDS FORMAT.');\n            }\n        } catch (error) {\n            console.error('ERROR IN GETTING FRIENDS:', error);\n        }   \n    }\n\n    updateReferralList(referralNames: string[]){\n        if(this.contentNode.children.length < referralNames.length){\n            if (this.contentNode.children.length > 0) {\n                this.contentNode.removeAllChildren();\n            }\n        }\n\n        if(this.friendItemPrefab && this.contentNode){\n            for (let i = 0; i < referralNames.length; i++) {\n                const newFriendItemPrefab = instantiate(this.friendItemPrefab);\n                this.contentNode.addChild(newFriendItemPrefab);\n                newFriendItemPrefab.getComponent(FriendItem).init(referralNames[i]);\n            }\n        }\n    }\n\n    showNoReferralsMessage(){\n        console.log('NO FRIENDS :C');\n    }\n}\n\n","import { _decorator, color, Color, Component, EventHandler, Mask, Node, Sprite, tween } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingHider')\nexport class LoadingHider extends Component {\n\n    @property(Node)\n    myNode: Node = null;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    disactivateOnHide: boolean = false;\n\n    @property({ type: Color })\n    shownColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    hidenColor: Color = new Color(255, 255, 255, 0);\n\n    @property(Mask)\n    maskToUse: Mask = null;\n    \n\n    show() {\n        if(this.myNode){\n            this.myNode!.active = true;\n            const sprite = this.myNode.getComponent(Sprite);\n            if (!sprite) return;\n\n            if(this.maskToUse){\n                this.maskToUse.enabled = true;\n            }\n\n            sprite.color = this.shownColor;\n        }\n    }\n\n    hide(){\n        if(this.myNode){\n            const sprite = this.myNode.getComponent(Sprite);\n            if (!sprite) return;\n\n            if(this.maskToUse){\n                this.maskToUse.enabled = false;\n            }\n\n            const initialColor = sprite.color.clone();\n            const targetColor = this.hidenColor;\n\n            tween(sprite)\n                .to(this.hideDuration, { color: targetColor }, {\n                    onUpdate: () => {\n                        sprite.color = new Color(initialColor.r, initialColor.g, initialColor.b, sprite.color.a);\n                    }\n                })\n                .call(() => {\n                    if(this.disactivateOnHide){\n                        this.myNode!.active = false;\n                    }\n                })\n                .start();\n        }\n    }\n}\n\n","import { _decorator, Component, director, Label, ProgressBar } from \"cc\";\nimport { TelegramWebApp } from \"./telegram-web\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport default class LoadingScreen extends Component {\n    @property(ProgressBar)\n    progressBar: ProgressBar = null;\n\n    @property(Label)\n    progressLabel: Label = null;\n\n    @property(Label)\n    onMobileLabel: Label = null;\n\n    isMobileDevice(): boolean {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    onLoad() {\n        this.init();\n    }\n\n    async init(){\n        if(this.isMobileDevice()){\n            this.loadMainScene();\n        }else{\n            this.onMobileLabel.string = \"Sorry, it only works on mobile devices!\"\n        }\n        \n        let tgInited = await TelegramWebApp.Instance.init();\n\n        if(tgInited){\n            TelegramWebApp.Instance.expand();\n        }\n    }\n\n    loadMainScene() {\n        director.preloadScene(\"MainScene\", this.onProgress.bind(this), this.onComplete.bind(this));\n    }\n\n    onProgress(completedCount: number, totalCount: number, item: any) {\n        const progress = completedCount / totalCount;\n        this.progressBar.progress = progress;\n        this.progressLabel.string = Math.floor(progress * 100) + \"%\";\n    }\n\n    onComplete() {\n        director.loadScene(\"MainScene\");\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { SlidePopup } from './SlidePopup';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingScreenHider')\nexport class LoadingScreenHider extends Component {\n\n    @property(SlidePopup)\n    slidePopup: SlidePopup = null;\n\n    start() {\n        this.waitForHide();\n    }\n\n    async waitForHide(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.hide();\n    }\n\n    hide(){\n        if(this.slidePopup){\n            this.slidePopup.hide();\n            VibrationManager.medium();\n        }\n    }\n}\n\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MainMiningLabels')\nexport class MainMiningLabels extends Component {\n    @property(Label)\n    balanceLabel: Label = null;\n\n    @property\n    balancePrefix: string = 'Balance ($SEM): ';\n\n    @property(Label)\n    currentMinedLabel: Label = null;\n\n    isMiningActive: boolean = false;\n    \n    endDate: Date = null;\n\n    timeDifference: number = 0;\n\n    protected start(): void {\n        this.updateBalanceLabel();\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateBalanceLabel, this);\n    }\n\n    protected update(dt: number): void {\n        if(UserDataManager.instance.isInited){\n            this.updateCurrentMinedLabel();\n        } \n    }\n\n    onDestroy() {\n        UserDataManager.eventTarget.off('userDataUpdated', this.updateBalanceLabel, this);\n    }\n\n    updateCurrentMinedLabel() {\n        const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n\n        if(!startDateStr || startDateStr == \"null\"){\n            this.currentMinedLabel.string = \"00.00\";\n            return;\n        }\n        const startDate = new Date(startDateStr.replace(/-/g, \"/\"));\n\n        if(!startDate){\n            this.currentMinedLabel.string = \"00.00\";\n            return;\n        }\n        const DurationMs = UserDataManager.instance.getUserCurrentDuration() * 60 * 60 * 1000;\n    \n        this.timeDifference = UserDataManager.instance.getTimeDifference();\n        if (!this.timeDifference) {\n            console.error(\"can't get sync time from userDataManager\");\n            return;\n        }\n    \n        this.endDate = new Date(startDate.getTime() + DurationMs);\n    \n        const currentTime = new Date(new Date().getTime() + this.timeDifference);\n        const timeLeft = this.endDate.getTime() - currentTime.getTime();\n\n        if (timeLeft <= 0) {\n            this.currentMinedLabel.string = (\n                UserDataManager.instance.getUserCurrentSpeed() * \n                UserDataManager.instance.getUserCurrentDuration()\n            ).toFixed(2);\n            this.isMiningActive = false;\n        } else {\n            const timePassedMs = Math.abs(currentTime.getTime() - startDate.getTime());\n            const timePassedHours = timePassedMs / (1000 * 60 * 60);\n            const minedAmount = timePassedHours * UserDataManager.instance.getUserCurrentSpeed();\n    \n            this.currentMinedLabel.string = minedAmount.toFixed(4);\n            this.isMiningActive = true;\n        }\n    }\n\n    async updateBalanceLabel() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.balanceLabel.string = this.balancePrefix + UserDataManager.instance.getUserBalance().toFixed(2);\n    }\n}\n\n","import { _decorator, Button, Color, Component, Label, Node, Sprite } from 'cc';\nimport { TimerLabel } from './TimerLabel';\nimport { UserDataManager } from './UserDataManager';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { ButtonFeedbacks } from './ButtonFeedbacks';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MiningCollectController')\nexport class MiningCollectController extends Component {\n    @property(TimerLabel)\n    miningTimer: TimerLabel\n\n    @property(Label)\n    miningSpeedLabel: Label = null;\n\n    @property(Node)\n    collectMiningNode: Node = null;\n\n    @property\n    miningSpeedPostfix: String = ' sem/h'\n\n    @property({ type: Color })\n    readyForCollectNodeColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    notReadyForCollectNodeColor: Color = new Color(255, 255, 255);\n\n    onDestroy() {\n        UserDataManager.eventTarget.off('userDataUpdated', this.updateMe, this);\n    }\n    start() {\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        this.init();\n    }\n\n    protected update(dt: number): void {\n        if(UserDataManager.instance.isInited){\n            this.updateCollectNode();\n        }\n    }\n\n    async init(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        if(this.miningSpeedLabel){\n            this.miningSpeedLabel.string = UserDataManager.instance.getUserCurrentSpeed().toString() + this.miningSpeedPostfix;\n        }\n\n        if(this.miningTimer){\n            const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n            if(startDateStr && startDateStr != \"null\"){\n                const duration = UserDataManager.instance.getUserCurrentDuration();\n\n                this.miningTimer.init(startDateStr, duration);\n            }  \n        }\n\n        if(this.collectMiningNode){\n            this.collectMiningNode.on(Node.EventType.TOUCH_END, this.onClickCollectMiningNode, this);\n        }\n        \n    }\n\n    onClickCollectMiningNode(){\n        if(!this.miningTimer.isTimerActive){\n            this.tryCollectMinedToServer();\n        }\n    }\n\n    async tryCollectMinedToServer(){\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('collect_mining?user_id='+userId);\n\n        const isCollected: boolean = response;\n\n        if(isCollected){\n            UserDataManager.instance.forceUpdateUserInfo();\n        }\n        else{\n            console.log('cant collect mined sem!')\n        }\n    }\n\n    async updateMe() {\n        console.log(\"TRYING UPDATE ME!\");\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        if(this.miningSpeedLabel){\n            this.miningSpeedLabel.string = UserDataManager.instance.getUserCurrentSpeed().toString() + this.miningSpeedPostfix;\n        }\n\n        if(this.miningTimer){\n            const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n            if(startDateStr && startDateStr != \"null\"){\n                const duration = UserDataManager.instance.getUserCurrentDuration();\n\n                this.miningTimer.init(startDateStr, duration);\n            }  \n        }\n    }\n\n    updateCollectNode() {\n        if(this.collectMiningNode){\n            if(this.miningTimer.isTimerActive){\n                this.collectMiningNode.getComponent(Sprite).color = this.notReadyForCollectNodeColor;\n                this.collectMiningNode.getComponent(ButtonFeedbacks).useClickTween = false;\n            }else{\n                this.collectMiningNode.getComponent(Sprite).color = this.readyForCollectNodeColor;\n                this.collectMiningNode.getComponent(ButtonFeedbacks).useClickTween = true;\n            }\n        }\n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('OpenLinkWithTelegram')\nexport class OpenLinkWithTelegram extends Component {\n    @property\n    url: string = \"\";\n\n    public openLink(){\n        const tgWebApp = TelegramWebApp.Instance;\n        if(tgWebApp != null){\n            tgWebApp.openTelegramLink(this.url);\n        }\n    }\n}\n\n","import { _decorator, Component, Node, UITransform } from 'cc';\nimport { SlidePopup } from './SlidePopup';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PopupManager')\nexport class PopupManager extends Component {\n    private static instance: PopupManager;\n\n    @property([Node])\n    popups: Node[] = [];\n\n    onLoad() {\n        if (PopupManager.instance) {\n            this.destroy();\n            return;\n        }\n        PopupManager.instance = this;\n        this.node.addComponent(UITransform);\n    }\n\n    public static getInstance(): PopupManager {\n        return PopupManager.instance;\n    }\n\n    showPopup(index: number) {\n        if (index < 0 || index >= this.popups.length) {\n            console.warn('Popup index out of bounds');\n            return;\n        }\n\n        const popupComponent = this.popups[index].getComponent(SlidePopup);\n        if (popupComponent) {\n            popupComponent.show();\n        } else {\n            console.warn('SlidePopup component not found on node:', this.popups[index].name);\n        }\n    }\n\n    hidePopup(index: number) {\n        if (index < 0 || index >= this.popups.length) {\n            console.warn('Popup index out of bounds');\n            return;\n        }\n\n        const popupComponent = this.popups[index].getComponent(SlidePopup);\n        if (popupComponent) {\n            popupComponent.hide();\n        } else {\n            console.warn('SlidePopup component not found on node:', this.popups[index].name);\n        }\n    }\n\n    switchPopup(currentIndex: number, nextIndex: number) {\n        this.hidePopup(currentIndex);\n        this.showPopup(nextIndex);\n    }\n}\n","import { _decorator, Component, Enum, UITransform, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum RotationDirection {\n    CLOCKWISE = 1,\n    COUNTERCLOCKWISE = -1\n}\n\n@ccclass('RotateUITransform')\nexport class RotatableUITransform extends Component {\n\n    @property({ type: Enum(RotationDirection), tooltip: \"Pick side for rotating\" })\n    direction: RotationDirection = RotationDirection.CLOCKWISE;\n\n    @property({ tooltip: \"Speed of rotating\" })\n    rotationSpeed: number = 100;\n\n    private _uiTransform: UITransform | null = null;\n\n    start() {\n        this._uiTransform = this.node.getComponent(UITransform);\n    }\n\n    update(deltaTime: number) {\n        if (this._uiTransform) {\n            const angle = this.rotationSpeed * deltaTime * this.direction;\n            const currentRotation = this.node.eulerAngles;\n            const newRotation = new Vec3(currentRotation.x, currentRotation.y, currentRotation.z + angle);\n            this.node.eulerAngles = newRotation;\n        }\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ServerCommunicator')\nexport class ServerCommunicator extends Component {\n    private static _instance: ServerCommunicator;\n\n    public static get instance(): ServerCommunicator {\n        if (!this._instance) {\n            console.error(\"ServerCommunicator instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    onLoad() {\n        if (ServerCommunicator._instance) {\n            console.warn(\"ServerCommunicator instance already exists!\");\n            this.destroy();\n            return;\n        }\n        ServerCommunicator._instance = this;\n    }\n\n    public async sendGetRequest(endpoint: string): Promise<any> {\n        const url = `https://hmshtlser.online/${endpoint}`;\n\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n\n    public async sendPostRequest(endpoint: string): Promise<any> {\n        const url = `https://hmshtlser.online/${endpoint}`;\n    \n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ShareInviteLink')\nexport class ShareInviteLink extends Component {\n\n    @property(String)\n    public baseLinkToShare: String = 'https://t.me/hamsmining_bot/start?startapp=';\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    async onClick() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        const user = tgWebApp.getTelegramUser();\n        const urlForShare = this.baseLinkToShare + user.id.toString();\n\n        tgWebApp.share(urlForShare, 'Hi! \\nJoin me in the Hamster Hotel Mining game! \\nPack your bags and accumulate a $SEM token for your future hotel!');\n    }\n}\n\n","import { _decorator, Component, Node, Vec3, tween, UITransform } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum PopupState {\n    None,\n    Hidden,\n    Showing,\n    Shown,\n    Hiding,\n}\n\n@ccclass('SizePopup')\nexport class SizePopup extends Component {\n    @property\n    showDuration: number = 0.5;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    isOpenAtStart: boolean = false;\n\n    private state: PopupState = PopupState.None;\n\n    start() {\n        this.initScale();\n    }\n\n    initScale() {\n        if (this.isOpenAtStart) {\n            this.node.setScale(new Vec3(1, 1, 1));\n            this.state = PopupState.Shown;\n        } else {\n            this.node.setScale(new Vec3(0, 0, 0));\n            this.state = PopupState.Hidden;\n        }\n    }\n\n    show() {\n        if (this.state !== PopupState.Hidden && this.state !== PopupState.Hiding && this.state !== PopupState.None) {\n            return;\n        }\n        this.state = PopupState.Showing;\n\n        this.node.setScale(new Vec3(0, 0, 0));\n\n        tween(this.node)\n            .to(this.showDuration, { scale: new Vec3(1, 1, 1) }, { easing: 'sineOut' })\n            .call(() => {\n                this.state = PopupState.Shown;\n            })\n            .start();\n    }\n\n    hide() {\n        if (this.state !== PopupState.Shown && this.state !== PopupState.Showing) {\n            return;\n        }\n        this.state = PopupState.Hiding;\n\n        tween(this.node)\n            .to(this.hideDuration, { scale: new Vec3(0, 0, 0) }, { easing: 'sineIn' })\n            .call(() => {\n                this.state = PopupState.Hidden;\n            })\n            .start();\n    }\n}","import { _decorator, Component, Node, Vec3, tween, UITransform, Enum } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum PopupState {\n    None,\n    Hidden,\n    Showing,\n    Shown,\n    Hiding,\n}\n\nenum SlideDirection {\n    Left,\n    Right,\n    Top,\n    Bottom,\n}\n\n@ccclass('SlidePopup')\nexport class SlidePopup extends Component {\n    @property({ type: Enum(SlideDirection) })\n    showDirection: SlideDirection = SlideDirection.Left;\n\n    @property({ type: Enum(SlideDirection) })\n    hideDirection: SlideDirection = SlideDirection.Right;\n\n    @property\n    showDuration: number = 0.5;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    isOpenAtStart: boolean = false;\n\n    private state: PopupState = PopupState.None;\n\n    start() {\n        this.initPosition();\n    }\n\n    initPosition() {\n        if (this.isOpenAtStart) {\n            this.node.setPosition(new Vec3(0, 0, 0));\n            this.state = PopupState.Shown;\n        } else {\n            const startPos = this.getStartPosition(this.hideDirection);\n            this.node.setPosition(startPos);\n            this.state = PopupState.Hidden;\n        }\n    }\n\n    getStartPosition(direction: SlideDirection): Vec3 {\n        const canvasSize = this.node.parent!.getComponent(UITransform)!.contentSize;\n\n        switch (direction) {\n            case SlideDirection.Left:\n                return new Vec3(-canvasSize.width, 0, 0);\n            case SlideDirection.Right:\n                return new Vec3(canvasSize.width, 0, 0);\n            case SlideDirection.Top:\n                return new Vec3(0, canvasSize.height, 0);\n            case SlideDirection.Bottom:\n                return new Vec3(0, -canvasSize.height, 0);\n            default:\n                return new Vec3(0, 0, 0);\n        }\n    }\n\n    show() {\n        if (this.state !== PopupState.Hidden && this.state !== PopupState.Hiding && this.state !== PopupState.None) {\n            return;\n        }\n        this.state = PopupState.Showing;\n\n        const startPos = this.getStartPosition(this.showDirection);\n        this.node.setPosition(startPos);\n\n        tween(this.node)\n            .to(this.showDuration, { position: new Vec3(0, 0, 0) }, { easing: 'sineOut' })\n            .call(() => {\n                this.state = PopupState.Shown;\n            })\n            .start();\n    }\n\n    hide() {\n        if (this.state !== PopupState.Shown && this.state !== PopupState.Showing) {\n            return;\n        }\n        this.state = PopupState.Hiding;\n\n        const endPos = this.getStartPosition(this.hideDirection);\n\n        tween(this.node)\n            .to(this.hideDuration, { position: endPos }, { easing: 'sineIn' })\n            .call(() => {\n                this.state = PopupState.Hidden;\n            })\n            .start();\n    }\n}\n","import { _decorator, Component, Label, } from 'cc';\nimport { SuitcasesDataManager } from './SuitcasesDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SuitcaseCounter')\nexport class SuitcaseCounter extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n\n    start() {\n        this.initWithSuitcaseCount();\n    }\n\n    async initWithSuitcaseCount(){\n            while (!SuitcasesDataManager.instance.isInited) {\n                await new Promise(resolve => setTimeout(resolve, 100));\n            }\n\n            SuitcasesDataManager.eventTarget.on('currentSuitcasesUpdated', this.updateMe, this);\n        \n            if(this.myLabel){\n                this.myLabel.string = \"x\"+(await SuitcasesDataManager.instance.getCurrentSuitcaseFilledCount()).toString();\n            }\n        \n    }\n    \n    async updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = \"x\"+(await SuitcasesDataManager.instance.getCurrentSuitcaseFilledCount()).toString();\n        }\n    }\n}\n\n","import { _decorator, color, Color, Component, Label, Node, NodeEventType, Sprite, SpriteFrame, tween, UITransform, Vec3, EventTarget, Animation } from 'cc';\nimport { TimerLabel } from './TimerLabel';\nimport { LoadingHider } from './LoadingHider';\nimport { UserDataManager } from './UserDataManager';\nimport { SuitcasesDataManager, UserSuitcaseItemInfo, SuitcaseItemInfo, UserMiningSuitcaseItemInfo } from './SuitcasesDataManager';\nimport { CollectedItemShower } from './CollectedItemShower';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SuitcaseItemData')\nclass SuitcaseItemData {\n    @property\n    itemName: string = '';\n\n    @property(Sprite)\n    itemSprite: Sprite = null;\n}\n\n@ccclass('SuitcaseItems')\nclass SuitcaseItems {\n    @property([SuitcaseItemData])\n    itemDatas: SuitcaseItemData[] = [];\n}\n\n@ccclass('SuitcaseData')\nclass SuitcaseData {\n    @property\n    suitcaseId: number = 0;\n\n    @property(Node)\n    suitcaseNode: Node = null;\n\n    @property(SuitcaseItems)\n    items: SuitcaseItems = new SuitcaseItems();\n}\n\n@ccclass('Suitcases')\nclass Suitcases {\n    @property([SuitcaseData])\n    suitcasesDatas: SuitcaseData[] = [];\n}\n\n@ccclass('SuitcaseItemsController')\nexport class SuitcaseItemsController extends Component {\n    @property(Suitcases)\n    suitcases: Suitcases = new Suitcases();\n\n    @property({ type: Color })\n    notCollectedColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    collectedColor: Color = new Color(0, 255, 0);\n\n    @property(Sprite)\n    currentMiningItemSprite: Sprite = null;\n\n    @property(CollectedItemShower)\n    collectedItemShower: CollectedItemShower = null;\n\n    @property(TimerLabel)\n    miningItemTimerLabel: TimerLabel = null;\n\n    @property(LoadingHider)\n    loadingHiderSuitcase: LoadingHider = null;\n\n    @property(LoadingHider)\n    loadingHiderCurrentItem: LoadingHider = null;\n\n    @property(Node)\n    allSuitcasesPackedNode: Node = null;\n\n    _currentMiningItem: SuitcaseItemInfo;\n    _currentUserMiningSuitcaseItemInfo: UserMiningSuitcaseItemInfo;\n\n    _currentSpriteFrame: SpriteFrame;\n\n    public eventTarget: EventTarget = new EventTarget();\n\n    protected start(): void {\n        this.init();\n    }\n\n    async init() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        while (!SuitcasesDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        await this.setCurrentSuitcase();\n        await this.setItemsColors();\n\n        this.currentMiningItemSprite.node.on(Node.EventType.TOUCH_END, this.onClickCurrentMiningItemSprite, this);\n    }\n\n    async onClickCurrentMiningItemSprite() {\n        if (!this._currentMiningItem && !this._currentUserMiningSuitcaseItemInfo) {\n            console.log('Nothing In Mining');\n            return;\n        }\n\n        if (!this.miningItemTimerLabel.isTimerActive) {\n            this.tryCollectCurrentMiningItem();\n        }\n    }\n\n    protected update(dt: number): void {\n        if(SuitcasesDataManager.instance.isInited){\n            if (this.currentMiningItemSprite) {\n                if (!this.miningItemTimerLabel.isTimerActive) {\n                    this.currentMiningItemSprite.grayscale = false;\n                    this.currentMiningItemSprite.node.getComponent(Animation).enabled = true;\n                }\n                else{\n                    this.currentMiningItemSprite.grayscale = true;\n                    this.currentMiningItemSprite.node.getComponent(Animation).enabled = false;\n                }\n            }\n        }\n    }\n\n    async tryCollectCurrentMiningItem() {\n        if(this.collectedItemShower){\n            this.collectedItemShower.show(this._currentSpriteFrame);\n        }\n\n        await SuitcasesDataManager.instance.collectMinedItem();\n        await this.setCurrentSuitcase(true);\n        await this.setItemsColors(true);\n    }\n\n    async setCurrentSuitcase(withForceUpdate: boolean = false) {\n        if (this.loadingHiderSuitcase) {\n            this.loadingHiderSuitcase.show();\n        }\n\n        if (this.loadingHiderCurrentItem) {\n            //this.loadingHiderCurrentItem.show();\n        }\n\n        if (this.suitcases && this.suitcases.suitcasesDatas.length > 0) {\n            this.suitcases.suitcasesDatas.forEach(function (value) {\n                if (value.suitcaseNode) {\n                    value.suitcaseNode.active = false;\n                } else {\n                    console.error(\"suitcaseNode not inited with ID: \" + value.suitcaseId);\n                }\n            });\n        } else {\n            console.error(\"Array suitcasesDatas empty.\");\n        }\n\n        const currentSuitcaseIndex = await SuitcasesDataManager.instance.getCurrentSuitcaseIndex(withForceUpdate);\n\n        if (currentSuitcaseIndex === null || currentSuitcaseIndex === undefined || !Number.isInteger(currentSuitcaseIndex)) {\n            console.log(\"ALL SUITCASES FILLED!\")\n            if (this.allSuitcasesPackedNode) {\n                this.allSuitcasesPackedNode.active = true;\n            }\n            if (this.loadingHiderCurrentItem) {\n                //this.loadingHiderCurrentItem.node.active = false;\n            }\n            return;\n        }\n\n        if (currentSuitcaseIndex !== null && currentSuitcaseIndex >= 0 && this.suitcases.suitcasesDatas[currentSuitcaseIndex]) {\n            if (this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseNode) {\n                this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseNode.active = true;\n                console.log('Suitcase inited');\n            } else {\n                console.error(\"suitcaseNode not inited with ID: \" + this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseId);\n            }\n        } else {\n            console.log('Not founded');\n        }\n    }\n\n    async setItemsColors(withForceUpdate: boolean = false) {\n        const currentSuitcaseIndex = await SuitcasesDataManager.instance.getCurrentSuitcaseIndex(withForceUpdate);\n\n        if (currentSuitcaseIndex === null || currentSuitcaseIndex === undefined || !Number.isInteger(currentSuitcaseIndex)) {\n            console.log(\"ALL SUITCASES FILLED!\")\n            if (this.allSuitcasesPackedNode) {\n                this.allSuitcasesPackedNode.active = true;\n            }\n            if (this.loadingHiderCurrentItem) {\n                //this.loadingHiderCurrentItem.node.active = false;\n            }\n            return;\n        }\n\n        if (currentSuitcaseIndex !== null && currentSuitcaseIndex >= 0) {\n            this.suitcases.suitcasesDatas[currentSuitcaseIndex].items.itemDatas.forEach((value) => {\n                if (value.itemSprite) {\n                    value.itemSprite.color = this.notCollectedColor;\n                } else {\n                    console.error(\"itemSprite not inited for: \" + value.itemName);\n                }\n            });\n        } else {\n            console.log(\"Not founded\");\n        }\n\n        const allItems = await SuitcasesDataManager.instance.getAllItems(withForceUpdate);\n        const currentUserSuitcaseItems = await SuitcasesDataManager.instance.getCurrentUserSuitcaseItems(withForceUpdate);\n        const currentMiningUserItems = await SuitcasesDataManager.instance.getCurrentMiningUserSuitcaseItems(withForceUpdate);\n\n        for (const value of this.suitcases.suitcasesDatas[currentSuitcaseIndex].items.itemDatas) {\n            const suitcaseItemDataName = value.itemName;\n            if (!suitcaseItemDataName) {\n                console.error('Not founded suitcaseItemDataName');\n                return;\n            }\n            if (allItems.length === 0) return;\n\n            const suitcaseItemInfo = allItems.find(item => item.name === suitcaseItemDataName);\n            if (!suitcaseItemInfo) {\n                console.warn('Not founded suitcaseItemInfo');\n                continue;\n            }\n\n            if (currentUserSuitcaseItems.length === 0) return;\n\n            const suitcaseUserItemInfo = currentUserSuitcaseItems.find(item => item.itemId === suitcaseItemInfo.id);\n            if (!suitcaseUserItemInfo) {\n                console.error('Not founded suitcaseUserItemInfo');\n                return;\n            }\n\n            if (currentMiningUserItems.length === 0) return;\n\n            const currentUserMiningItem = currentMiningUserItems.find(item => item.itemId === suitcaseItemInfo.id);\n            if (!currentUserMiningItem) {\n                console.log('Not founded currentUserMiningItem');\n                continue;\n            }\n\n            if (suitcaseUserItemInfo.status == 'collected') {\n                value.itemSprite.color = this.collectedColor;\n            } else if (suitcaseUserItemInfo.status == 'mining') {\n                this.updateCurrentMiningItem(value.itemSprite.spriteFrame, suitcaseItemInfo, currentUserMiningItem);\n                this._currentUserMiningSuitcaseItemInfo = currentUserMiningItem;\n                this._currentMiningItem = suitcaseItemInfo;\n            }\n\n            if (this.loadingHiderSuitcase) {\n                this.loadingHiderSuitcase.hide();\n            }\n        }\n    }\n\n    updateCurrentMiningItem(spriteFrame: SpriteFrame, suitcaseItemInfo: SuitcaseItemInfo, userMiningItem: UserMiningSuitcaseItemInfo) {\n        if (!spriteFrame || !suitcaseItemInfo || !userMiningItem) {\n            console.error('Not found spriteFrame or suitcaseItemInfo or userMiningItem');\n            return;\n        }\n\n        this._currentSpriteFrame = spriteFrame;\n\n        if (this.miningItemTimerLabel) {\n            this.miningItemTimerLabel.init(userMiningItem.dataStartMiningItem, suitcaseItemInfo.collectionDuration);\n        }\n\n        if (this.currentMiningItemSprite) {\n            if (!this.miningItemTimerLabel.isTimerActive) {\n                this.currentMiningItemSprite.grayscale = false;\n                this.currentMiningItemSprite.node.getComponent(Animation).enabled = true;\n            }\n            else{\n                this.currentMiningItemSprite.grayscale = true;\n                this.currentMiningItemSprite.node.getComponent(Animation).enabled = false;\n            }\n        }\n\n        if (this.loadingHiderCurrentItem) {\n            //this.loadingHiderCurrentItem.hide();\n        }\n    }\n}\n","import { _decorator, Component, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass } = _decorator;\n\nexport interface UserSuitcaseItemInfo {\n    id: number;\n    userId: string;\n    suitcaseId: number;\n    itemId: number;\n    status: string;\n}\n\nexport interface SuitcaseItemInfo {\n    id: number;\n    name: string;\n    collectionDuration: number;\n    price: number;\n    chance: number;\n    suitcaseTypeId: number;\n}\n\nexport interface UserSuitcaseInfo {\n    id: number;\n    userId: string;\n    suitcaseTypeId: number;\n    isComplete: number;\n}\n\nexport interface UserMiningSuitcaseItemInfo {\n    id: number;\n    dataStartMiningItem: string;\n    userId: string;\n    itemId: number;\n    isFinished: number;\n}\n\n@ccclass('SuitcasesDataManager')\nexport class SuitcasesDataManager extends Component {\n    private static _instance: SuitcasesDataManager;\n\n    public static get instance(): SuitcasesDataManager {\n        if (!this._instance) {\n            console.error(\"SuitcasesDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    currentAllItems: SuitcaseItemInfo[] = [];\n    currentItems: UserSuitcaseItemInfo[] = [];\n    currentMiningItems: UserMiningSuitcaseItemInfo[] = [];\n    currentSuitcases: UserSuitcaseInfo[] = [];\n\n    onLoad() {\n        if (SuitcasesDataManager._instance) {\n            console.warn(\"SuitcasesDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        SuitcasesDataManager._instance = this;\n\n        this.forceUpdateData();\n    }\n\n    public get isInited(): boolean {\n        return this.currentAllItems.length > 0 && this.currentMiningItems.length > 0 && this.currentSuitcases.length > 0;\n    }\n\n    public async forceUpdateData() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        \n        this.setAllItemsFromServer();\n        this.setCurrentUserSuitcaseItemsFromServer();\n        this.setCurrentMiningUserSuitcaseItemsFromServer();\n        this.setCurrentSuitcasesFromServer();\n    }\n\n    async setAllItemsFromServer() {\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_items');\n            const allItems: any[][] = response;\n\n            this.currentAllItems = allItems.map((item: any) => ({\n                id: item[0],\n                name: item[1],\n                collectionDuration: item[2],\n                price: item[3],\n                chance: item[4],\n                suitcaseTypeId: item[5]\n            }));\n\n            SuitcasesDataManager.eventTarget.emit('allItemsUpdated');\n        } catch (error) {\n            console.error('Error fetching items:', error);\n        }\n    }\n\n    async setCurrentUserSuitcaseItemsFromServer() {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            const response = await ServerCommunicator.instance.sendGetRequest('get_user_suitcase_items?user_id=' + userId);\n\n            const items: any[][] = response;\n\n            if(!Array.isArray(items)){\n                return;\n            }\n\n            this.currentItems = items.map((item: any) => ({\n                id: item[0],\n                userId: item[1],\n                suitcaseId: item[2],\n                itemId: item[3],\n                status: item[4]\n            }));\n\n            SuitcasesDataManager.eventTarget.emit('currentUserSuitcaseItemsUpdated');\n        } catch (error) {\n            console.error('Error fetching user suitcase items:', error);\n        }\n    }\n\n    async setCurrentMiningUserSuitcaseItemsFromServer() {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_user_mining_items?user_id=' + userId);\n            const miningItems: any[][] = response;\n\n            this.currentMiningItems = miningItems.map((item: any) => ({\n                id: item[0],\n                dataStartMiningItem: item[1],\n                userId: item[2],\n                itemId: item[3],\n                isFinished: item[4]\n            }));\n\n            SuitcasesDataManager.eventTarget.emit('currentMiningUserSuitcaseItemsUpdated');\n        } catch (error) {\n            console.error('Error fetching mining items:', error);\n        }\n    }\n\n    async setCurrentSuitcasesFromServer() {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_user_suitcases?user_id=' + userId);\n            const userSuitcases: any[][] = response;\n\n            this.currentSuitcases = userSuitcases.map((item: any) => ({\n                id: item[0],\n                userId: item[1],\n                suitcaseTypeId: item[2],\n                isComplete: item[3]\n            }));\n\n            SuitcasesDataManager.eventTarget.emit('currentSuitcasesUpdated');\n        } catch (error) {\n            console.error('Error fetching user suitcases:', error);\n        }\n    }\n\n    public async getAllItems(forceUpdate: boolean = false): Promise<SuitcaseItemInfo[]> {\n        if (this.currentAllItems.length <= 0 || forceUpdate) {\n            await this.setAllItemsFromServer();\n        }\n        return this.currentAllItems;\n    }\n\n    public async getCurrentUserSuitcaseItems(forceUpdate: boolean = false): Promise<UserSuitcaseItemInfo[]> {\n        if (this.currentItems.length <= 0 || forceUpdate) {\n            await this.setCurrentUserSuitcaseItemsFromServer();\n        }\n        return this.currentItems;\n    }\n\n    public async getCurrentMiningUserSuitcaseItems(forceUpdate: boolean = false): Promise<UserMiningSuitcaseItemInfo[]> {\n        if (this.currentMiningItems.length <= 0 || forceUpdate) {\n            await this.setCurrentMiningUserSuitcaseItemsFromServer();\n        }\n        return this.currentMiningItems;\n    }\n\n    public async getCurrentSuitcaseIndex(forceUpdate: boolean = false): Promise<number> {\n        if (this.currentSuitcases.length <= 0 || forceUpdate) {\n            await this.setCurrentSuitcasesFromServer();\n        }\n        const incompleteSuitcase = this.currentSuitcases.find(suitcase => suitcase.isComplete === 0);\n        return incompleteSuitcase ? incompleteSuitcase.suitcaseTypeId - 1 : null;\n    }\n\n    public async getCurrentSuitcaseFilledCount(forceUpdate: boolean = false): Promise<number> {\n        if (this.currentSuitcases.length <= 0 || forceUpdate) {\n            await this.setCurrentSuitcasesFromServer();\n        }\n        const filledSuitcases = this.currentSuitcases.filter(suitcase => suitcase.isComplete === 1);\n        return filledSuitcases.length;\n    }    \n\n    public async collectMinedItem(): Promise<boolean> {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            await ServerCommunicator.instance.sendGetRequest('collect_mined_item?user_id=' + userId);\n            return true;\n        } catch (error) {\n            console.error('Error collecting mined item:', error);\n            return false;\n        }\n    }\n}\n","import { _decorator, Button, Component, Details, Enum, Label, Node, Sprite, SpriteFrame } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nimport { ButtonFeedbacks } from './ButtonFeedbacks';\nimport { PopupManager } from './PopupManager';\nimport { TaskData, TasksDataManager, TaskType } from './TasksDataManager';\nimport { UserDataManager } from './UserDataManager';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('TaskItem')\nexport class TaskItem extends Component {\n\n    @property(Label)\n    nameLabel: Label | null = null;\n\n    @property(Label)\n    rewardLabel: Label | null = null;\n\n    @property(Button)\n    goButton: Button | null = null;\n\n    @property(Sprite)\n    buttonIconSprite: Sprite | null = null;\n\n    @property(SpriteFrame)\n    isCompletedIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    isNotCompletedIcon: SpriteFrame | null = null;\n\n    @property(Sprite)\n    iconSprite: Sprite | null = null;\n\n    @property(SpriteFrame)\n    subscribeIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    moneyIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    friendsIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    otherIcon: SpriteFrame | null = null;\n\n    myTaskData: TaskData;\n\n    init(task: TaskData){\n        this.myTaskData = task;\n        this.updateMe();\n    }\n \n    updateMe(){\n\n        let taskName = this.myTaskData.taskInfo.name;\n        const taskDetails = this.myTaskData.taskInfo.details;\n\n        if (this.rewardLabel) {\n            this.rewardLabel.string = \"+\" + this.myTaskData.taskInfo.reward.toString();\n        }\n        if (this.iconSprite && this.otherIcon && this.subscribeIcon && this.moneyIcon && this.friendsIcon) {\n            switch (this.myTaskData.taskInfo.taskType) {\n                case TaskType.GoTo:\n                case TaskType.Other:\n                    this.iconSprite.spriteFrame = this.otherIcon;\n                    break;\n                case TaskType.Subscribe:\n                    this.iconSprite.spriteFrame = this.subscribeIcon;\n                    taskName += taskDetails;\n                    break;\n                case TaskType.MoneyCount:\n                    this.iconSprite.spriteFrame = this.moneyIcon;\n                    break;\n                case TaskType.FriendsCount:\n                    this.iconSprite.spriteFrame = this.friendsIcon;\n                    break;\n                default:\n                    console.log(\"Unknown task type\");\n                    break;\n            }\n        }\n\n        if (this.nameLabel) {\n            var sliced = taskName.slice(0, 21);\n            if (sliced.length < taskName.length) {\n                sliced += '...';\n            }\n            this.nameLabel.string = sliced;\n        }\n\n        console.log(\"UPDATED TASK WITH TYPE: \" + this.myTaskData.taskInfo.taskType);\n\n        if (this.goButton && this.buttonIconSprite) {\n            if (this.myTaskData.userTaskInfo.status === \"completed\") {\n                if (this.isCompletedIcon) {\n                    this.buttonIconSprite.spriteFrame = this.isCompletedIcon;\n                }\n                if(this.goButton.getComponent(ButtonFeedbacks)) {\n                    this.goButton.getComponent(ButtonFeedbacks).enabled = false;\n                }\n                this.goButton.interactable = false;\n            } else {\n                if (this.isNotCompletedIcon) {\n                    this.buttonIconSprite.spriteFrame = this.isNotCompletedIcon;\n                }\n                if(this.goButton.getComponent(ButtonFeedbacks)) {\n                    this.goButton.getComponent(ButtonFeedbacks).enabled = true;\n                }\n                this.goButton.interactable = true;\n            }\n\n            this.goButton.node.off('click');\n            this.goButton.node.on('click', this.onTaskButtonClicked, this);\n        }\n    }\n\n    async onTaskButtonClicked() {\n        if (this.myTaskData.userTaskInfo.status === \"completed\") return;\n\n        const isNowCompleted = await TasksDataManager.instance.checkTaskCompleted(this.myTaskData.userTaskInfo.taskId);\n\n        console.log(\"Clicked task status: \" + isNowCompleted);\n\n        if (isNowCompleted) {\n            VibrationManager.success();\n            TasksDataManager.instance.forceUpdateData();\n            UserDataManager.instance.forceUpdateUserInfo();\n        } else {\n            this.goToCompleteTask();\n        }\n    }\n\n    async goToCompleteTask() {\n        VibrationManager.error();\n        switch (this.myTaskData.taskInfo.taskType) {\n            case TaskType.GoTo:\n            case TaskType.Other:\n                await this.goOtherComplete();\n                break;\n            case TaskType.Subscribe:\n                await this.goSubscribeComplete();\n                break;\n            case TaskType.MoneyCount:\n                this.goMoneyComplete();\n                break;\n            case TaskType.FriendsCount:\n                this.goFriendsComplete();\n                break;\n            default:\n                console.log(\"Unknown task type\");\n                break;\n        }\n    }\n\n    async goOtherComplete() {\n        // const tgWebApp = TelegramWebApp.Instance;\n        // await tgWebApp.init();\n        // tgWebApp.openLink(this.myTaskData.taskInfo.details);\n    }\n\n    async goSubscribeComplete() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        let forUrlSliced = this.myTaskData.taskInfo.details.slice(1);\n\n        const link = \"https://t.me/\" + forUrlSliced;\n\n        tgWebApp.openTelegramLink(link);\n    }\n\n    goMoneyComplete() {\n        PopupManager.getInstance().hidePopup(0);\n    }\n\n    goFriendsComplete() {\n        PopupManager.getInstance().switchPopup(0, 3);\n    }\n}\n\n","import { _decorator, Component, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass } = _decorator;\n\nexport enum TaskType {\n    Other = \"Other\",\n    GoTo = \"GoTo\",\n    Subscribe = \"Subscribe\",\n    MoneyCount = \"MoneyCount\",\n    FriendsCount = \"FriendsCount\",\n}\n\nexport interface UserTaskInfo {\n    id: number;\n    userId: string;\n    taskId: number;\n    status: string;\n}\n\nexport interface TaskInfo {\n    id: number;\n    name: string;\n    reward: number;\n    taskType: TaskType;\n    details: string;\n}\n\nexport interface TaskData{\n    taskInfo: TaskInfo;\n    userTaskInfo: UserTaskInfo;\n}\n\n@ccclass('TasksDataManager')\nexport class TasksDataManager extends Component {\n    private static _instance: TasksDataManager;\n\n    public static get instance(): TasksDataManager {\n        if (!this._instance) {\n            console.error(\"TasksDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    currentTasks: TaskInfo[] = [];\n    currentUserTasks: UserTaskInfo[] = [];\n\n    onLoad() {\n        if (TasksDataManager._instance) {\n            console.warn(\"TasksDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        TasksDataManager._instance = this;\n\n        this.forceUpdateData();\n    }\n\n    public get isInited(): boolean {\n        return this.currentTasks.length > 0 && this.currentUserTasks.length > 0;\n    }\n\n    public async forceUpdateData() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        await this.setAllTasksFromServer();\n        await this.setCurrentUserTasksFromServer();\n    }\n\n    async setAllTasksFromServer() {\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_tasks');\n            const allTasks: any[][] = response;\n\n            this.currentTasks = allTasks.map((item: any) => ({\n                id: item[0],\n                name: item[1],\n                reward: item[2],\n                taskType: this.mapTaskType(item[3]),\n                details: item[4]\n            }));\n\n            TasksDataManager.eventTarget.emit('allTasksUpdated');\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    }\n\n    async setCurrentUserTasksFromServer() {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            const response = await ServerCommunicator.instance.sendGetRequest('get_user_tasks?user_id=' + userId);\n\n            const userTasks: any[][] = response;\n\n            if (!Array.isArray(userTasks)) {\n                return;\n            }\n\n            this.currentUserTasks = userTasks.map((item: any) => ({\n                id: item[0],\n                userId: item[1],\n                taskId: item[2],\n                status: item[3]\n            }));\n\n            TasksDataManager.eventTarget.emit('currentUserTasksUpdated');\n        } catch (error) {\n            console.error('Error fetching user tasks:', error);\n        }\n    }\n\n    async checkTaskCompleted(taskId: number){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('check_task_completion?user_id='+userId+\"&task_id=\"+taskId);\n\n        const taskCompleted: boolean = response[0]\n\n        return taskCompleted;\n    }\n\n    public async getAllTasks(forceUpdate: boolean = false): Promise<TaskInfo[]> {\n        if (this.currentTasks.length <= 0 || forceUpdate) {\n            await this.setAllTasksFromServer();\n        }\n        return this.currentTasks;\n    }\n\n    public async getUserTasks(forceUpdate: boolean = false): Promise<UserTaskInfo[]> {\n        if (this.currentUserTasks.length <= 0 || forceUpdate) {\n            await this.setCurrentUserTasksFromServer();\n        }\n        return this.currentUserTasks;\n    }\n\n    private mapTaskType(taskTypeString: string): TaskType {\n        switch (taskTypeString) {\n            case \"GoTo\":\n                return TaskType.GoTo;\n            case \"Subscribe\":\n                return TaskType.Subscribe;\n            case \"MoneyCount\":\n                return TaskType.MoneyCount;\n            case \"FriendsCount\":\n                return TaskType.FriendsCount;\n            case \"Other\":\n            default:\n                return TaskType.Other;\n        }\n    }\n}\n","import { _decorator, Component, instantiate, Node, Prefab } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { TaskData, TaskInfo, TasksDataManager } from './TasksDataManager';\nimport { TaskItem } from './TaskItem';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TasksScrollViewer')\nexport class TasksScrollViewer extends Component {\n    @property(Prefab)\n    taskItemPrefab: Prefab = null;\n\n    @property(Prefab)\n    taskOffsetPrefab: Prefab = null;\n\n    @property(Node)\n    contentNode: Node = null;\n\n    start() {\n        this.init();\n    }\n\n    async init(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        while (!TasksDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        TasksDataManager.eventTarget.on('currentUserTasksUpdated', this.updateMe, this);\n\n        this.updateMe();\n    }\n\n    async updateMe() {\n        while (!TasksDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n    \n        const userTasksInfos = await TasksDataManager.instance.getUserTasks();\n        const allTasksInfos = await TasksDataManager.instance.getAllTasks();\n    \n        const taskInfoMap = new Map<number, TaskInfo>();\n        allTasksInfos.forEach(taskInfo => {\n            taskInfoMap.set(taskInfo.id, taskInfo);\n        });\n    \n        const taskDataArray: TaskData[] = userTasksInfos.map(userTaskInfo => {\n            const taskInfo = taskInfoMap.get(userTaskInfo.taskId);\n            return {\n                taskInfo: taskInfo!,\n                userTaskInfo: userTaskInfo\n            };\n        });\n        \n        this.updateTasksList(taskDataArray);\n        console.log(\"TASK DATA ARRAY:\" + taskDataArray);\n    }\n    \n\n    updateTasksList(tasks: TaskData[]){\n        if (this.contentNode.children.length > 0) {\n            this.contentNode.removeAllChildren();\n        }\n\n        const completedTask = tasks.filter(item => item.userTaskInfo.status === \"completed\");\n        const uncompletedTask = tasks.filter(item => item.userTaskInfo.status != \"completed\");\n\n        if(this.taskItemPrefab && this.contentNode){\n            for (let i = 0; i < uncompletedTask.length; i++) {\n                const newFriendItemPrefab = instantiate(this.taskItemPrefab);\n                this.contentNode.addChild(newFriendItemPrefab);\n                newFriendItemPrefab.getComponent(TaskItem).init(uncompletedTask[i]);\n            }\n        }\n\n        const newOffsetPrefab = instantiate(this.taskOffsetPrefab);\n        this.contentNode.addChild(newOffsetPrefab);\n\n        if(this.taskItemPrefab && this.contentNode){\n            for (let i = 0; i < completedTask.length; i++) {\n                const newFriendItemPrefab = instantiate(this.taskItemPrefab);\n                this.contentNode.addChild(newFriendItemPrefab);\n                newFriendItemPrefab.getComponent(TaskItem).init(completedTask[i]);\n            }\n        }\n    }\n}\n\n","import { _decorator, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            this.expand();\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openLink(url);\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + url + '&' + new URLSearchParams({ text: text || '' }).toString();\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public expand() {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n\n        if(!this._tgWebAppJS.isExpanded){\n            this._tgWebAppJS.expand();\n        }\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initData;\n    }\n\n    public doHapticImpact(style: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.impactOccurred(style);\n    }\n\n    public doHapticNotification(type: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.notificationOccurred(type);\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n}\n\n\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { ServerCommunicator } from \"./ServerCommunicator\";\nconst { ccclass, property } = _decorator;\n\nexport interface SuitcaseItemInfo {\n    id: number;\n    name: string;\n    collectionDuration: number;\n    price: number;\n    chance: number;\n    suitcaseTypeId: number;\n}\n\n@ccclass('TestGetLabel')\nexport class TestGetLabel extends Component {\n    @property(ServerCommunicator)\n    serverCommunicator: ServerCommunicator=null;\n    @property(Label)\n    label: Label = null;\n\n    currentAllItems: SuitcaseItemInfo[] = [];\n\n    protected start(): void {\n        this.getMetod();\n    }\n\n    async getMetod(){\n        try {\n            const response = await this.serverCommunicator.sendGetRequest('get_all_items');\n\n            const allItems: any[][] = response;\n\n            this.currentAllItems = allItems.map((item: any) => ({\n                id: item[0],\n                name: item[1],\n                collectionDuration: item[2],\n                price: item[3],\n                chance: item[4],\n                suitcaseTypeId: item[5]\n            }));\n        } catch (error) {\n            console.error('Error fetching items:', error);\n        }\n\n        \n        this.label.string = this.currentAllItems[1].name;\n    }\n}\n\n","import { _decorator, Component, Label } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TimerLabel')\nexport class TimerLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    private endDate: Date = null;\n    public isTimerActive: boolean = false;\n\n    private timeDifference: number = 0;\n\n    protected start(): void {\n        this.myLabel.string = '00:00:00:00';\n    }\n\n    async init(dateString: string, duration: number): Promise<void> {\n\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const startDate = new Date(dateString.replace(/-/g, \"/\"));\n        const DurationMs = duration * 60 * 60 * 1000;\n\n        this.timeDifference = UserDataManager.instance.getTimeDifference();\n        if(!this.timeDifference){\n            console.error(\"cant get sync time from userDataManager\");\n            return;\n        }\n\n        this.endDate = new Date(startDate.getTime() + DurationMs);\n        this.isTimerActive = true;\n\n        this.updateLabel();\n    }\n\n    protected update(dt: number): void {\n        if (this.isTimerActive && this.endDate) {\n            this.updateLabel();\n        }\n    }\n\n    private updateLabel(): void {\n        const currentTime = new Date(new Date().getTime() + this.timeDifference);\n        const timeLeft = this.endDate.getTime() - currentTime.getTime();\n\n        if (timeLeft <= 0) {\n            this.myLabel.string = \"00:00:00:00\";\n            this.isTimerActive = false;\n        } else {\n            this.myLabel.string = this.formatTimeLeft(timeLeft);\n        }\n    }\n\n    formatTimeLeft(timeLeft: number): string {\n        const seconds = Math.floor((timeLeft / 1000) % 60);\n        const minutes = Math.floor((timeLeft / (1000 * 60)) % 60);\n        const hours = Math.floor((timeLeft / (1000 * 60 * 60)) % 24);\n        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n\n        function padZero(num: number): string {\n            return (num < 10 ? '0' : '') + num;\n        }\n\n        return padZero(days) + ':' + padZero(hours) + ':' + padZero(minutes) + ':' + padZero(seconds);\n    }\n}\n","import { _decorator, Component, Node, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\nexport interface UserInfo {\n    id: string;\n    name: string;\n    photoUrl: string;\n    balance: number;\n    dateStartMining?: string;\n    speedId: number;\n    durationId: number;\n    invitedBy?: string;\n}\n\nexport interface SpeedInfo {\n    id: number;\n    speed: number;\n    price: number;\n}\n\nexport interface DurationInfo {\n    id: number;\n    duration: number;\n    price: number;\n}\n\n@ccclass('UserDataManager')\nexport class UserDataManager extends Component {\n    @property\n    isDebug: boolean = false;\n\n    @property\n    debugId: string = \"5793743593\";\n\n    @property\n    debugName: string = \"gerb\";\n\n    @property\n    debugStartParams: string = \"\";\n    \n    private static _instance: UserDataManager;\n\n    currentUserInfo: UserInfo = null;\n    speedInfos: SpeedInfo[] = [];\n    durationInfos: DurationInfo[] = [];\n\n    isTimeSyncWithServer: boolean = false;\n\n    timeDifference: number = null;\n\n    firstname: string = \"undefined\";\n\n    username: string = \"undefined\";\n\n    defaultName: string = \"Anonymous\";\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    public static get instance(): UserDataManager {\n        if (!this._instance) {\n            console.error(\"UserDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public get isInited(): boolean {\n        if(this.currentUserInfo && this.speedInfos.length > 0 && this.durationInfos.length > 0 && this.isTimeSyncWithServer){\n            return true;\n        }\n        return false;\n    }\n    onLoad() {\n        if (UserDataManager._instance) {\n            console.warn(\"UserDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        UserDataManager._instance = this;\n        this.syncTimeWithServer();\n        \n        this.setSpeedInfosFromServer();\n        this.setDurationInfosFromServer();\n\n        this.forceUpdateUserInfo();\n    }\n\n    public getUserId(): string {\n        if (this.currentUserInfo) {\n            return this.currentUserInfo.id;\n        } else {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n    }\n\n    public getUserName(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.name;\n    }\n\n    public getUserPhotoUrl(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.photoUrl;\n    }\n\n    public getUserBalance(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.balance;\n    }\n\n    public getUserMiningStartDate(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.dateStartMining;\n    }\n\n    public getUserSpeedId(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.speedId;\n    }\n\n    public getUserDurationId(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.durationId;\n    }\n\n    public getUserInvitedBy(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.invitedBy;\n    }\n\n    public getUserCurrentSpeed(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === this.getUserSpeedId());\n        return speedInfo ? speedInfo.speed : null;\n    }\n\n    public getSpeedPriceById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === id);\n        return speedInfo ? speedInfo.price : null;\n    }\n\n    public getMiningSpeedById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === id);\n        return speedInfo ? speedInfo.speed : null;\n    }\n\n    public getSpeedInfosCount(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.speedInfos.length;\n    }\n\n    public getUserCurrentDuration(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === this.getUserDurationId());\n        return durationInfo ? durationInfo.duration : null;\n    }\n\n    public getDurationPriceById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === id);\n        return durationInfo ? durationInfo.price : null;\n    }\n\n    public getMiningDurationById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === id);\n        return durationInfo ? durationInfo.duration : null;\n    }\n\n    public getDurationInfosCount(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.durationInfos.length;\n    }\n\n    async syncTimeWithServer(): Promise<void> {\n        if (this.isTimeSyncWithServer) return;\n\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_server_time');\n            const serverTimeString: string = response;\n\n            const serverTime = new Date(serverTimeString.replace(/-/g, \"/\"));\n\n            this.timeDifference = serverTime.getTime() - new Date().getTime();\n            \n            this.isTimeSyncWithServer = true;\n        } catch (error) {\n            console.error('Error fetching server time:', error);\n        }\n    }\n\n    public getTimeDifference(): number{\n        if(!this.isTimeSyncWithServer){\n            return null;\n        }\n        \n        return this.timeDifference;\n    }\n\n    getGoodUserName(){\n        if(this.isDebug){\n            return \"Debug A\"\n        }\n\n        if(this.firstname === \"undefined\"){\n            if(this.username === \"undefined\"){\n                return this.defaultName;\n            }\n            return this.username;\n        }\n        return this.firstname;\n    }\n\n    public forceUpdateUserInfo(){\n        this.setUserInfoFromServer();\n    }\n\n    async setUserInfoFromServer(){\n        try{\n            if(this.isDebug){\n                const response = await ServerCommunicator.instance.sendGetRequest('get_user?id=' + this.debugId + '&name=' + this.debugName + '&referal=' + this.debugStartParams);\n    \n                const userInfoItems: any = response;\n    \n                console.log(userInfoItems);\n    \n                this.currentUserInfo = {\n                    id: userInfoItems.id,\n                    name: userInfoItems.username, \n                    photoUrl: userInfoItems.photo_url, \n                    balance: userInfoItems.balance,\n                    dateStartMining: userInfoItems.date_start_mining,\n                    speedId: userInfoItems.speed_id,\n                    durationId: userInfoItems.duration_id,\n                    invitedBy: userInfoItems.invited_by\n                };\n\n                UserDataManager.eventTarget.emit('userDataUpdated');\n            } else {\n                const tgWebApp = TelegramWebApp.Instance;\n                await tgWebApp.init();\n        \n                const user = tgWebApp.getTelegramUser();\n                const initData = tgWebApp.getTelegramWebAppInitData();\n\n                this.firstname = user.first_name;\n\n                this.username = user.username;\n        \n                const response = await ServerCommunicator.instance.sendGetRequest('get_user?id=' + user.id + '&name=' + user.username + '&referal=' + initData.start_param);\n\n                const userInfoItems: any = response;\n    \n                console.log(userInfoItems);\n    \n                this.currentUserInfo = {\n                    id: userInfoItems.id,\n                    name: userInfoItems.username,\n                    photoUrl: userInfoItems.photo_url,\n                    balance: userInfoItems.balance,\n                    dateStartMining: userInfoItems.date_start_mining,\n                    speedId: userInfoItems.speed_id,\n                    durationId: userInfoItems.duration_id,\n                    invitedBy: userInfoItems.invited_by\n                };\n\n                UserDataManager.eventTarget.emit('userDataUpdated');\n            }\n\n            // if(!this.isInited){\n            //     await new Promise(resolve => setTimeout(resolve, 500));\n            //     this.forceUpdateUserInfo();\n            // }\n        } catch (error) {\n            console.error('Error setting user:', error);\n        }\n    }\n    \n\n    async setSpeedInfosFromServer(){\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_speeds');\n            \n            const allSpeeds: any[][] = response;\n\n            this.speedInfos = [];\n\n            this.speedInfos = allSpeeds.map((item: any) => ({\n                id: item[0],\n                speed: item[1],\n                price: item[2]\n            }));\n        } catch (error) {\n            console.error('Error fetching speeds:', error);\n        }\n    }\n\n    async setDurationInfosFromServer(){\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_durations');\n            \n            const allDurations: any[][] = response;\n\n            this.durationInfos = [];\n\n            this.durationInfos = allDurations.map((item: any) => ({\n                id: item[0],\n                duration: item[1],\n                price: item[2]\n            }));\n        } catch (error) {\n            console.error('Error fetching durations:', error);\n        }\n    }\n}\n","import { _decorator, Component, Label, Sprite, ImageAsset, Texture2D, SpriteFrame } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('UserInfoDisplay')\nexport class UserInfoDisplay extends Component {\n    @property(Label)\n    public userInfoLabel: Label | null = null;\n\n    @property(Label)\n    public avatarUrlLabel: Label | null = null;\n\n    @property(Sprite)\n    public userAvatar: Sprite | null = null;\n\n    start() {\n        this.updateUserInfo();\n    }\n\n    private async updateUserInfo() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        const user = tgWebApp.getTelegramUser();\n        if (user) {\n            if (this.userInfoLabel) {\n                this.userInfoLabel.string = `ID: ${user.id}\\nUsername: ${user.username}`;\n            }\n\n            if (this.avatarUrlLabel) {\n                this.avatarUrlLabel.string = `${user.photo_url}`;\n            }\n\n            if (user.photo_url && this.userAvatar) {\n                this.loadAvatar(user.photo_url);\n            }\n        } else {\n            console.error(\"User data is not available.\");\n        }\n    }\n\n    private loadAvatar(url: string) {\n        if (!this.userAvatar) return;\n\n        const imgAsset = new ImageAsset();\n\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = url;\n\n        img.onload = () => {\n            imgAsset.reset(img);\n\n            const texture = new Texture2D();\n            texture.image = imgAsset;\n\n            texture.setFilters(Texture2D.Filter.LINEAR, Texture2D.Filter.LINEAR);\n\n            const spriteFrame = new SpriteFrame();\n            spriteFrame.texture = texture;\n\n            this.userAvatar.type = Sprite.Type.SIMPLE;\n            this.userAvatar.sizeMode = Sprite.SizeMode.RAW;\n            this.userAvatar.spriteFrame = spriteFrame;\n        };\n\n        img.onerror = () => {\n            console.error(\"Failed to load avatar image.\");\n        };\n    }\n}\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UsernameLabel')\nexport class UsernameLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    start() {\n        this.initWithUserData();\n    }\n\n    async initWithUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        \n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getGoodUserName();\n        }\n    }\n    \n    updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getGoodUserName();\n        }\n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('VibrationManager')\nexport default class VibrationManager {\n\n    private static vibrationEnabled: boolean = true;\n\n    private static isVibrationSupported(): boolean {\n        return TelegramWebApp.Instance != null;\n    }\n\n    public static toggleVibration(): void {\n        this.vibrationEnabled = !this.vibrationEnabled;\n    }\n\n    public static isVibrationEnabled(): boolean {\n        return this.vibrationEnabled;\n    }\n\n    public static light(): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticImpact(\"light\");\n        }\n    }\n\n    public static medium(): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticImpact(\"medium\");\n        }\n    }\n\n    public static heavy(): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticImpact(\"heavy\");\n        }\n    }\n\n    public static rigid(): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticImpact(\"rigid\");\n        }\n    }\n\n    public static soft(): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticImpact(\"soft\");\n        }\n    }\n\n    public static error(): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticNotification(\"error\");\n        }\n    }\n\n    public static success(): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticNotification(\"success\");\n        }\n    }\n\n    public static warning(): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticNotification(\"warning\");\n        }\n    }\n}\n","import { _decorator, Component, Toggle } from 'cc';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('VibrationToggle')\nexport default class VibrationToggle extends Component {\n    @property(Toggle)\n    private vibrationToggle: Toggle | null = null;\n\n    start() {\n        this.updateToggleState();\n        if (this.vibrationToggle) {\n            this.vibrationToggle.node.on('toggle', this.onToggleVibration, this);\n        }\n    }\n\n    private onToggleVibration(toggle: Toggle): void {\n        VibrationManager.toggleVibration();\n    }\n\n    private updateToggleState(): void {\n        if (this.vibrationToggle) {\n            const isVibrationOn = VibrationManager.isVibrationEnabled();\n            this.vibrationToggle.isChecked = isVibrationOn;\n        }\n    }\n}\n"]}