{"version":3,"sources":["../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BalanceLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostsController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostType.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ButtonFeedbacks.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/CollectedItemShower.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/CopyInviteLink.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/FadePopup.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/FriendItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/FriendsScrollViewer.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingHider.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingScreen.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingScreenHider.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/MainMiningLabels.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/MiningCollectController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/OpenLinkWithTelegram.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/PopupManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/RotatableUITransform.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ServerCommunicator.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ShareInviteLink.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SizePopup.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SlidePopup.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcaseCounter.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcaseItemsController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcasesDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/Switch.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TaskItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TasksDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TasksScrollViewer.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/telegram-web.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TestGetLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TimerLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/Toast.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ToastManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UserDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UserInfoDisplay.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UsernameLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/VibrationManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/VibrationSwitchController.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Label","_descriptor","_applyDecoratedDescriptor","_class2","_Component","BalanceLabel","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_inheritsLoose","_proto","prototype","start","this","initWithUserData","_initWithUserData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","UserDataManager","instance","isInited","Promise","resolve","setTimeout","eventTarget","on","updateMe","myLabel","string","getUserBalance","toFixed","stop","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","BoostsController","_dec3","type","Enum","BoostType","_dec4","_dec5","RichText","_dec6","Color","_dec7","_dec8","_dec9","Node","_dec10","_dec11","_dec12","LoadingHider","BoostItem","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","isButtonActive","onLoad","loader","show","buyButtonNode","EventType","TOUCH_END","buyButtonPressed","colorToHex","color","componentToHex","r","g","b","c","hex","toString","level","currentValue","nextValue","priceForNext","levelLabel","levelPrefix","currentColorHex","currentValueTextColor","nextColorHex","nextValueTextColor","valuesRichText","valuesPostfix","priceLabel","pricePrefix","pricePostfix","buyButtonActivity","hide","updateMeLikeFull","actvivty","getComponent","Sprite","activeButtonColor","unactiveButtonColor","boostController","buyBoostByBoostType","myBoostType","tryingPurchase","purchaseSuccessful","VibrationManager","success","purchaseUnsuccessful","error","Duration","loadDataFromUserData","_loadDataFromUserData","setDurationBoostInfo","setSpeedBoostInfo","curMiningSpeedId","getUserSpeedId","curMiningSpeed","getUserCurrentSpeed","nextMiningSpeedId","getSpeedInfosCount","console","log","speedBoost","nextMiningSpeed","getMiningSpeedById","nextMiningSpeedPrice","getSpeedPriceById","curMiningDurationId","getUserDurationId","curMiningDuration","getUserCurrentDuration","nextMiningDurationId","getDurationInfosCount","durationBoost","nextMiningDuration","getMiningDurationById","nextMiningDurationPrice","getDurationPriceById","boostType","tryBuyNextDuration","Speed","tryBuyNextSpeed","_tryBuyNextDuration","_callee2","userId","response","_context2","getUserId","ServerCommunicator","sendGetRequest","sent","forceUpdateUserInfo","_tryBuyNextSpeed","_callee3","_context3","CCFloat","tooltip","ButtonFeedbacks","originalScale","Vec3","set","node","scale","MOUSE_ENTER","onMouseEnter","MOUSE_LEAVE","onMouseLeave","onClick","useHoverTween","tween","to","hoverDuration","hoverScale","useClickTween","soft","clickDuration","clickScale","clickScaleUp","FadePopup","SizePopup","CollectedItemShower","spriteFrame","itemSprite","fadePopup","sizePopup","sizeMode","SizeMode","RAW","originalSize","getOriginalSize","targetWidth","width","targetHeight","height","scaleFactor","spriteTransform","UITransform","setContentSize","Size","native","copyTextToClipboard","String","CopyInviteLink","_onClick","tgWebApp","user","urlForCopy","TelegramWebApp","Instance","init","getTelegramUser","baseLinkToShare","id","navigator","clipboard","writeText","t0","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","parent","Canvas","uiTransform","halfScreenWidth","halfScreenHeight","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","Toggle","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","update","deltaTime","PopupState","state","None","initOpacity","targetSprite","uiOpacity","getOrAddUIOpacity","isOpenAtStart","opacity","Shown","Hidden","_this2","Hiding","Showing","showDuration","easing","_this3","hideDuration","UIOpacity","addComponent","FriendItem","friendName","friendNameLabel","Prefab","FriendsScrollViewer","_init","webinitdata","isDebug","initDataForDebug","abrupt","getTelegramInitData","then","referralNames","friendsCountLabel","isArray","every","updateReferralList","showNoReferralsMessage","ToastManager","getInstance","showToast","contentNode","children","removeAllChildren","friendItemPrefab","newFriendItemPrefab","addChild","Mask","myNode","sprite","maskToUse","enabled","shownColor","initialColor","clone","targetColor","hidenColor","onUpdate","a","disactivateOnHide","ProgressBar","LoadingScreen","isMobileDevice","test","userAgent","onMobileLabel","expand","sendPostRequest","auth","loadMainScene","preloadScene","onProgress","bind","onComplete","completedCount","totalCount","item","progress","progressBar","progressLabel","Math","floor","loadScene","SlidePopup","LoadingScreenHider","waitForHide","_waitForHide","slidePopup","medium","MainMiningLabels","isMiningActive","endDate","timeDifference","updateBalanceLabel","dt","updateCurrentMinedLabel","onDestroy","off","startDateStr","getUserMiningStartDate","startDate","Date","replace","DurationMs","getTimeDifference","getTime","currentTime","currentMinedLabel","minedAmount","abs","_updateBalanceLabel","balanceLabel","balancePrefix","TimerLabel","MiningCollectController","updateCollectNode","duration","miningSpeedLabel","miningSpeedPostfix","miningTimer","collectMiningNode","onClickCollectMiningNode","isTimerActive","tryCollectMinedToServer","_tryCollectMinedToServer","communicator","_updateMe","notReadyForCollectNodeColor","readyForCollectNodeColor","OpenLinkWithTelegram","openLink","openTelegramLink","url","_class3","PopupManager","destroy","showPopup","index","popups","warn","popupComponent","hidePopup","switchPopup","currentIndex","nextIndex","RotationDirection","RotatableUITransform","_uiTransform","angle","rotationSpeed","direction","currentRotation","eulerAngles","newRotation","z","CLOCKWISE","baseUrl","requestTracker","Map","MAX_REQUESTS","TIME_WINDOW","canSendRequest","endpoint","now","has","updatedTimestamps","get","filter","timestamp","push","_sendGetRequest","params","queryString","reject","Error","URLSearchParams","fetch","method","headers","Content-Type","ok","status","json","_x","_x2","_sendPostRequest","data","body","JSON","stringify","_x3","_x4","_createClass","key","_instance","ShareInviteLink","urlForShare","shareText","share","initScale","SlideDirection","initPosition","startPos","getStartPosition","hideDirection","canvasSize","contentSize","Left","Right","Top","Bottom","showDirection","position","endPos","SuitcaseCounter","initWithSuitcaseCount","_initWithSuitcaseCount","SuitcasesDataManager","getCurrentSuitcaseFilledCount","SuitcaseItemData","SuitcaseItems","_class5","_class4","SuitcaseData","_class8","_class7","Suitcases","_class11","_class10","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_class14","SuitcaseItemsController","_descriptor16","_currentMiningItem","_currentUserMiningSuitcaseItemInfo","_currentSpriteFrame","EventTarget","setCurrentSuitcase","setItemsColors","currentMiningItemSprite","onClickCurrentMiningItemSprite","_onClickCurrentMiningItemSprite","miningItemTimerLabel","tryCollectCurrentMiningItem","grayscale","Animation","_tryCollectCurrentMiningItem","isCollected","collectedItemShower","collectMinedItem","_setCurrentSuitcase","_callee4","withForceUpdate","currentSuitcaseIndex","_context4","loadingHiderSuitcase","loadingHiderCurrentItem","suitcases","suitcasesDatas","forEach","value","suitcaseNode","suitcaseId","getCurrentSuitcaseIndex","Number","isInteger","allSuitcasesPackedNode","_setItemsColors","_callee5","allItems","currentUserSuitcaseItems","currentMiningUserItems","_loop","_ret","_iterator","_step","_context6","items","itemDatas","notCollectedColor","itemName","getAllItems","getCurrentUserSuitcaseItems","getCurrentMiningUserSuitcaseItems","suitcaseItemDataName","suitcaseItemInfo","suitcaseUserItemInfo","currentUserMiningItem","_context5","v","find","item_id","collectedColor","updateCurrentMiningItem","_createForOfIteratorHelperLoose","done","delegateYield","userMiningItem","data_start_mining_item","collect_duration","_class13","currentAllItems","currentItems","currentMiningItems","currentSuitcases","forceUpdateData","_forceUpdateData","setAllItemsFromServer","setCurrentUserSuitcaseItemsFromServer","setCurrentMiningUserSuitcaseItemsFromServer","setCurrentSuitcasesFromServer","_setAllItemsFromServer","emit","_setCurrentUserSuitcaseItemsFromServer","_setCurrentMiningUserSuitcaseItemsFromServer","_this4","_setCurrentSuitcasesFromServer","_this5","_getAllItems","_callee6","forceUpdate","_getCurrentUserSuitcaseItems","_callee7","_context7","_getCurrentMiningUserSuitcaseItems","_callee8","_context8","_getCurrentSuitcaseIndex","_callee9","incompleteSuitcase","_context9","suitcase","is_complete","suitcase_type_id","_getCurrentSuitcaseFilledCount","_callee10","filledSuitcases","_context10","_x5","_collectMinedItem","_callee11","_context11","Boolean","EventHandler","SpriteFrame","Switch","handleNode","backgroundNode","handle","background","onToggle","updateVisualState","event","isOn","emitSwitchEvent","animated","targetX","getOnPositionX","getOffPositionX","onBgColor","offBgColor","onHandleSprite","offHandleSprite","useOffset","offset","emitEvents","switchEvents","TaskItem","myTaskData","task","taskName","taskInfo","taskDetails","details","rewardLabel","reward","iconSprite","otherIcon","subscribeIcon","moneyIcon","friendsIcon","task_type","TaskType","GoTo","Other","Subscribe","MoneyCount","FriendsCount","nameLabel","sliced","slice","goButton","buttonIconSprite","userTaskInfo","isCompletedIcon","interactable","isNotCompletedIcon","onTaskButtonClicked","_onTaskButtonClicked","isNowCompleted","TasksDataManager","checkTaskCompleted","task_id","goToCompleteTask","_goToCompleteTask","goOtherComplete","goSubscribeComplete","goMoneyComplete","goFriendsComplete","_goOtherComplete","_goSubscribeComplete","forUrlSliced","link","currentTasks","currentUserTasks","setAllTasksFromServer","setCurrentUserTasksFromServer","_setAllTasksFromServer","_setCurrentUserTasksFromServer","_checkTaskCompleted","taskId","getAllTasks","_getAllTasks","getUserTasks","_getUserTasks","mapTaskType","taskTypeString","TasksScrollViewer","userTasksInfos","allTasksInfos","taskInfoMap","taskDataArray","map","updateTasksList","tasks","completedTask","uncompletedTask","taskItemPrefab","taskOffsetPrefab","newOffsetPrefab","tgLoadPromise","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Telegram","WebApp","clearInterval","onerror","head","appendChild","_tgWebAppJS","text","shareUrl","shareToStory","media_url","widget_link_url","widget_link_name","widget_link","isExpanded","getTelegramWebApp","getTelegramWebAppInitData","initDataUnsafe","initData","doHapticImpact","style","HapticFeedback","impactOccurred","doHapticNotification","notificationOccurred","openInvoice","callback","alert","message","showAlert","cloudStorageSetItem","storage","cloudStorage","setItem","cloudStorageGetItem","getItem","cloudStorageGetItems","keys","getItems","cloudStorageRemoveItem","removeItem","cloudStorageRemoveItems","removeItems","cloudStorageGetKeys","getKeys","CloudStorage","TestGetLabel","getMetod","_getMetod","serverCommunicator","collectionDuration","price","chance","suitcaseTypeId","label","dateString","updateLabel","timeLeft","formatTimeLeft","seconds","minutes","hours","padZero","num","Toast","messageLabel","errorIcon","warnIcon","logIcon","_toasts","canvas","getScene","toastManagerNode","toastPrefab","toastNode","toastComponent","startPosition","targetY","topOffset","displayTime","displayDuration","delay","splice","indexOf","currentUserInfo","speedInfos","durationInfos","isTimeSyncWithServer","firstname","username","defaultName","syncTimeWithServer","setSpeedInfosFromServer","setDurationInfosFromServer","getUserName","getUserPhotoUrl","photoUrl","balance","dateStartMining","speedId","durationId","getUserInvitedBy","invitedBy","speedInfo","info","speed","durationInfo","_syncTimeWithServer","serverTimeString","serverTime","server_time","saveUserSettingsData","telegramWebApp","dataString","getUserSettingsData","parse","updateUserSettingsData","partialData","updatedData","_extends","getGoodUserName","setUserInfoFromServer","_setUserInfoFromServer","first_name","userInfo","photo_url","date_start_mining","speed_id","duration_id","invited_by","_setSpeedInfosFromServer","_this6","_setDurationInfosFromServer","_this7","UserInfoDisplay","updateUserInfo","_updateUserInfo","userInfoLabel","avatarUrlLabel","userAvatar","loadAvatar","imgAsset","ImageAsset","img","Image","crossOrigin","reset","texture","Texture2D","image","setFilters","Filter","LINEAR","Type","SIMPLE","UsernameLabel","currentUserData","vibrationEnabled","vibration","initialized","finish","isVibrationSupported","toggleVibration","_toggleVibration","isVibrationEnabled","performHapticFeedback","performHapticNotification","light","heavy","rigid","warning","VibrationSwitchController","_onLoad","eventHandler","switchComponent","target","component","handler","customEventData","onSwitchToggled","_onSwitchToggled"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BalanceLabel')\nexport class BalanceLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    start() {\n        this.initWithUserData();\n    }\n\n    async initWithUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        \n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getUserBalance().toFixed(2);\n        }\n    }\n    \n    updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getUserBalance().toFixed(2);\n        }\n    }\n}\n\n","import { _decorator, Color, Component, Enum, Label, Node, RichText, Sprite } from 'cc';\nimport { LoadingHider } from './LoadingHider';\nimport { BoostsController } from './BoostsController';\nimport { BoostType } from './BoostType';\nimport VibrationManager from './VibrationManager';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BoostItem')\nexport class BoostItem extends Component {\n    @property(BoostsController)\n    boostController: BoostsController = null\n\n    @property({ type: Enum(BoostType) })\n    myBoostType: BoostType = BoostType.Duration;\n\n    @property(Label)\n    levelLabel: Label = null;\n\n    @property\n    levelPrefix: string = \"Level \";\n\n    @property(RichText)\n    valuesRichText: RichText = null;\n\n    @property\n    valuesPostfix: string = \"h\";\n\n    @property(Color)\n    currentValueTextColor: Color = new Color(255, 255, 255);\n\n    @property(Color)\n    nextValueTextColor: Color = new Color(255, 255, 255);\n\n    @property(Label)\n    priceLabel: Label = null;\n\n    @property\n    pricePrefix: string = \"Price: \";\n\n    @property\n    pricePostfix: string = \" $SEM\";\n\n    @property(Node)\n    buyButtonNode: Node = null;\n\n    @property(Color)\n    activeButtonColor: Color = new Color(255, 255, 255);\n\n    @property(Color)\n    unactiveButtonColor: Color = new Color(255, 255, 255);\n\n    @property(LoadingHider)\n    loader: LoadingHider = null;\n\n    isButtonActive = false;\n\n    protected onLoad(): void {\n        if(this.loader){\n            this.loader.show();\n        }\n\n        if(this.buyButtonNode){\n            this.buyButtonNode.on(Node.EventType.TOUCH_END, this.buyButtonPressed, this);\n        }\n    }\n\n    private colorToHex(color: Color): string {\n        const r = this.componentToHex(color.r);\n        const g = this.componentToHex(color.g);\n        const b = this.componentToHex(color.b);\n        return `${r}${g}${b}`;\n    }\n\n    private componentToHex(c: number): string {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    updateMe(level: number, currentValue: number, nextValue: number, priceForNext: number) {\n        this.levelLabel.string = this.levelPrefix + level.toString();\n\n        const currentColorHex = this.colorToHex(this.currentValueTextColor);\n        const nextColorHex = this.colorToHex(this.nextValueTextColor);\n\n        this.valuesRichText.string = `<color=#${currentColorHex}>${currentValue}${this.valuesPostfix} > </color><color=#${nextColorHex}>${nextValue}${this.valuesPostfix}</color>`;\n\n        this.priceLabel.string = this.pricePrefix + priceForNext.toString() + this.pricePostfix;\n\n        const balance = UserDataManager.instance.getUserBalance();\n\n        if(balance >= priceForNext){\n            this.buyButtonActivity(true);\n        }else{\n            this.buyButtonActivity(false);\n        }\n        \n        if(this.loader){\n            this.loader.hide();\n        }\n    }\n\n    updateMeLikeFull(level: number, currentValue: number) {\n        this.levelLabel.string = this.levelPrefix + level.toString();\n\n        const currentColorHex = this.colorToHex(this.currentValueTextColor);\n\n        this.valuesRichText.string = `<color=#${currentColorHex}>${currentValue}${this.valuesPostfix}</color>`;\n\n        this.priceLabel.string = \"Maximum boost!\";\n        this.buyButtonActivity(false);\n        if(this.loader){\n            this.loader.hide();\n        }\n    }\n\n    buyButtonActivity(actvivty: boolean){\n        if(this.buyButtonNode){\n            if(actvivty){\n                this.buyButtonNode.getComponent(Sprite).color = this.activeButtonColor;\n                this.isButtonActive = true;\n            }\n            else{\n                this.buyButtonNode.getComponent(Sprite).color = this.unactiveButtonColor;\n                this.isButtonActive = false;\n            }\n        }\n    }\n\n    buyButtonPressed(){\n        if(this.isButtonActive){\n            this.buyButtonActivity(false);\n            this.boostController.buyBoostByBoostType(this.myBoostType);\n        }\n    }\n\n    tryingPurchase(){\n        if(this.loader){\n            this.loader.show();\n        }\n    }\n\n    purchaseSuccessful(){\n        VibrationManager.success();\n    }\n\n    purchaseUnsuccessful(){\n        VibrationManager.error();\n    }\n}","import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { BoostItem } from './BoostItem';\nimport { BoostType } from './BoostType';\nimport { ServerCommunicator } from './ServerCommunicator';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BoostsController')\nexport class BoostsController extends Component {\n    @property(BoostItem)\n    durationBoost: BoostItem = null;\n\n    @property(BoostItem)\n    speedBoost: BoostItem = null;\n\n    protected start(): void {\n        this.loadDataFromUserData();\n        UserDataManager.eventTarget.on('userDataUpdated', this.loadDataFromUserData, this);\n    }\n\n    async loadDataFromUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.setDurationBoostInfo();\n        this.setSpeedBoostInfo();\n    }\n\n    setSpeedBoostInfo(){\n        const curMiningSpeedId = UserDataManager.instance.getUserSpeedId();\n        const curMiningSpeed = UserDataManager.instance.getUserCurrentSpeed();\n        const nextMiningSpeedId =  curMiningSpeedId + 1;\n\n        if(nextMiningSpeedId > UserDataManager.instance.getSpeedInfosCount()){\n            console.log(\"NO MORE MINING SPEEDS!\")\n            this.speedBoost.updateMeLikeFull(curMiningSpeedId, curMiningSpeed);\n            return;\n        }\n\n        const nextMiningSpeed = UserDataManager.instance.getMiningSpeedById(nextMiningSpeedId);\n        const nextMiningSpeedPrice = UserDataManager.instance.getSpeedPriceById(nextMiningSpeedId);\n\n        this.speedBoost.updateMe(curMiningSpeedId, curMiningSpeed, nextMiningSpeed, nextMiningSpeedPrice);\n    }\n\n    setDurationBoostInfo(){\n        const curMiningDurationId = UserDataManager.instance.getUserDurationId();\n        const curMiningDuration = UserDataManager.instance.getUserCurrentDuration();\n        const nextMiningDurationId =  curMiningDurationId + 1;\n\n        if(nextMiningDurationId > UserDataManager.instance.getDurationInfosCount()){\n            console.log(\"NO MORE MINING DURATIONS!\")\n            this.durationBoost.updateMeLikeFull(curMiningDurationId, curMiningDuration);\n            return;\n        }\n        \n        const nextMiningDuration = UserDataManager.instance.getMiningDurationById(nextMiningDurationId);\n        const nextMiningDurationPrice = UserDataManager.instance.getDurationPriceById(nextMiningDurationId);\n\n        this.durationBoost.updateMe(curMiningDurationId, curMiningDuration, nextMiningDuration, nextMiningDurationPrice);\n    }\n\n    buyBoostByBoostType(boostType: BoostType){\n        if(boostType == BoostType.Duration){\n            this.tryBuyNextDuration();\n        }\n        if(boostType == BoostType.Speed){\n            this.tryBuyNextSpeed();\n        }\n    }\n\n    async tryBuyNextDuration(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.durationBoost.tryingPurchase();\n\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('boost_duration?user_id='+userId);\n        \n        const succBuy: any = response[0]\n\n        if(succBuy == true){\n            this.durationBoost.purchaseSuccessful();\n        }\n        else{\n            this.durationBoost.purchaseUnsuccessful();\n        }\n\n        UserDataManager.instance.forceUpdateUserInfo();\n    }\n\n    async tryBuyNextSpeed(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.speedBoost.tryingPurchase();\n\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('boost_speed?user_id='+userId);\n\n        const succBuy: any = response[0]\n\n        if(succBuy == true){\n            this.speedBoost.purchaseSuccessful();\n        }\n        else{\n            this.speedBoost.purchaseUnsuccessful();\n        }\n\n        UserDataManager.instance.forceUpdateUserInfo();\n    }\n}\n\n","export enum BoostType {\n    Duration,\n    Speed,\n}","import { _decorator, Component, tween, Vec3, Node, CCFloat } from 'cc';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ButtonFeedbacks')\nexport class ButtonFeedbacks extends Component {\n    @property\n    useHoverTween = true;\n\n    @property\n    useClickTween = true;\n\n    @property({ type: CCFloat, tooltip: \"Hover reduction time (in seconds)\" })\n    hoverDuration: number = 0.2;\n\n    @property({tooltip: \"How many times to reduce when hovering\" }) \n    hoverScale: Vec3 = new Vec3(0.95, 0.95, 0.95);\n\n    @property({ type: CCFloat, tooltip: \"Time to decrease when pressed (in seconds)\" })\n    clickDuration: number = 0.1;\n\n    @property({tooltip: \"How many times to reduce when pressed\" })\n    clickScale: Vec3 = new Vec3(0.9, 0.9, 0.9);\n\n    @property({tooltip: \"How much to increase after clicking\" }) \n    clickScaleUp: Vec3 = new Vec3(1.1, 1.1, 1.1);\n\n    private originalScale: Vec3 = new Vec3();\n\n    start() {\n        this.originalScale.set(this.node.scale);\n\n        this.node.on(Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\n        this.node.on(Node.EventType.MOUSE_LEAVE, this.onMouseLeave, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    onMouseEnter() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.hoverScale })\n            .start();\n    }\n\n    onMouseLeave() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.originalScale })\n            .start();\n    }\n\n    onClick() {\n        if(!this.useClickTween) return;\n        VibrationManager.soft();\n        tween(this.node)\n            .to(this.clickDuration, { scale: this.clickScale })\n            .to(this.clickDuration/2, { scale: this.clickScaleUp })\n            .to(this.clickDuration, { scale: this.originalScale })\n            .start();\n    }\n}\n","import { _decorator, Component, Node, Size, Sprite, SpriteFrame, UITransform } from 'cc';\nimport { FadePopup } from './FadePopup';\nimport { SizePopup } from './SizePopup';\nconst { ccclass, property } = _decorator;\n\n@ccclass('CollectedItemShower')\nexport class CollectedItemShower extends Component {\n    @property(Sprite)\n    itemSprite: Sprite = null;\n\n    @property(FadePopup)\n    fadePopup: FadePopup = null;\n\n    @property(SizePopup)\n    sizePopup: SizePopup = null;\n\n    show(spriteFrame: SpriteFrame){\n        if(this.itemSprite && this.fadePopup && this.sizePopup){\n            if (this.itemSprite) {\n                this.itemSprite.spriteFrame = spriteFrame;\n    \n                this.itemSprite.sizeMode = Sprite.SizeMode.RAW;\n    \n                const originalSize = spriteFrame.getOriginalSize();\n    \n                let targetWidth = originalSize.width;\n                let targetHeight = originalSize.height;\n    \n                if (targetHeight > 250) {\n                    const scaleFactor = 250 / targetHeight;\n                    targetHeight = 250;\n                    targetWidth = originalSize.width * scaleFactor;\n                }\n    \n                const spriteTransform = this.itemSprite.node.getComponent(UITransform);\n                if (spriteTransform) {\n                    spriteTransform.setContentSize(new Size(targetWidth, targetHeight));\n                }\n            }\n\n            this.fadePopup.show();\n            this.sizePopup.show();\n        }\n    }\n\n    hide(){\n        if(this.itemSprite && this.fadePopup && this.sizePopup){\n            this.fadePopup.hide();\n            this.sizePopup.hide();\n        }\n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\nimport { native } from \"cc\"; \nconst { copyTextToClipboard } = native;\n\n@ccclass('CopyInviteLink')\nexport class CopyInviteLink extends Component {\n\n    @property(String)\n    public baseLinkToShare: String = 'https://t.me/hamsmining_bot/start?startapp=';\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    async onClick() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n    \n        const user = tgWebApp.getTelegramUser();\n        const urlForCopy = this.baseLinkToShare + user.id.toString();\n    \n        try {\n            await navigator.clipboard.writeText(urlForCopy);\n        } catch (err) {\n            console.error('Cant copy text with: ', err);\n        }\n    }    \n}\n\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, Component, Sprite, tween, UIOpacity } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum PopupState {\n    None,\n    Hidden,\n    Showing,\n    Shown,\n    Hiding,\n}\n\n@ccclass('FadePopup')\nexport class FadePopup extends Component {\n    @property(Sprite)\n    targetSprite: Sprite | null = null;\n\n    @property\n    showDuration: number = 0.5;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    isOpenAtStart: boolean = false;\n\n    private state: PopupState = PopupState.None;\n\n    start() {\n        this.initOpacity();\n    }\n\n    initOpacity() {\n        if (this.targetSprite) {\n            const uiOpacity = this.getOrAddUIOpacity();\n\n            if (this.isOpenAtStart) {\n                uiOpacity.opacity = 255; // Полностью видим\n                this.state = PopupState.Shown;\n            } else {\n                uiOpacity.opacity = 0; // Полностью прозрачный\n                this.state = PopupState.Hidden;\n            }\n        }\n    }\n\n    show() {\n        if (this.state !== PopupState.Hidden && this.state !== PopupState.Hiding && this.state !== PopupState.None) {\n            return;\n        }\n        this.state = PopupState.Showing;\n\n        if (this.targetSprite) {\n            const uiOpacity = this.getOrAddUIOpacity();\n\n            tween(uiOpacity)\n                .to(this.showDuration, { opacity: 255 }, { easing: 'sineOut' })\n                .call(() => {\n                    this.state = PopupState.Shown;\n                })\n                .start();\n        }\n    }\n\n    hide() {\n        if (this.state !== PopupState.Shown && this.state !== PopupState.Showing) {\n            return;\n        }\n        this.state = PopupState.Hiding;\n\n        if (this.targetSprite) {\n            const uiOpacity = this.getOrAddUIOpacity();\n\n            tween(uiOpacity)\n                .to(this.hideDuration, { opacity: 0 }, { easing: 'sineIn' })\n                .call(() => {\n                    this.state = PopupState.Hidden;\n                })\n                .start();\n        }\n    }\n\n    getOrAddUIOpacity() {\n        let uiOpacity = this.targetSprite!.node.getComponent(UIOpacity);\n        if (!uiOpacity) {\n            uiOpacity = this.targetSprite!.node.addComponent(UIOpacity);\n        }\n        return uiOpacity;\n    }\n}\n","import { _decorator, Component, Label, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FriendItem')\nexport class FriendItem extends Component {\n\n    @property(Label)\n    friendNameLabel: Label | null = null;\n\n    init(friendName: string){\n        this.friendNameLabel.string = friendName;\n    }\n}\n\n","import { _decorator, CCInteger, Component, instantiate, Label, Node, Prefab } from 'cc';\nimport { FriendItem } from './FriendItem';\nimport { UserDataManager } from './UserDataManager';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { TelegramWebApp } from './telegram-web';\nimport { ToastManager } from './ToastManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FriendsScrollViewer')\nexport class FriendsScrollViewer extends Component {\n    @property(Prefab)\n    friendItemPrefab: Prefab = null;\n\n    @property(Label)\n    friendsCountLabel: Label = null;\n\n    @property(Node)\n    contentNode: Node = null;\n\n    start() {\n        this.init();\n    }\n\n    async init() {\n\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        \n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n\n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n\n        const communicator = ServerCommunicator.instance;\n\n        communicator.sendGetRequest('get_referrals_names', { webinitdata })\n            .then(response => {\n                console.log('Get user friends response:', response);\n\n                const referralNames: string[] = response;\n\n                if (this.friendsCountLabel) {\n                    this.friendsCountLabel.string = referralNames.length.toString();\n                }\n\n                if (Array.isArray(referralNames) && referralNames.every(name => typeof name === 'string')) {\n                    if (referralNames.length > 0) {\n                        this.updateReferralList(referralNames);\n                    } else {\n                        this.showNoReferralsMessage();\n                    }\n                } else {\n                    console.error('ERROR IN GETTING FRIENDS FORMAT.');\n                }\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting friends: \" + error, \"error\")\n            });\n    }\n\n    updateReferralList(referralNames: string[]){\n        if(this.contentNode.children.length < referralNames.length){\n            if (this.contentNode.children.length > 0) {\n                this.contentNode.removeAllChildren();\n            }\n        }\n\n        if(this.friendItemPrefab && this.contentNode){\n            for (let i = 0; i < referralNames.length; i++) {\n                const newFriendItemPrefab = instantiate(this.friendItemPrefab);\n                this.contentNode.addChild(newFriendItemPrefab);\n                newFriendItemPrefab.getComponent(FriendItem).init(referralNames[i]);\n            }\n        }\n    }\n\n    showNoReferralsMessage(){\n        console.log('NO FRIENDS :C');\n    }\n}\n\n","import { _decorator, color, Color, Component, EventHandler, Mask, Node, Sprite, tween } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingHider')\nexport class LoadingHider extends Component {\n\n    @property(Node)\n    myNode: Node = null;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    disactivateOnHide: boolean = false;\n\n    @property({ type: Color })\n    shownColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    hidenColor: Color = new Color(255, 255, 255, 0);\n\n    @property(Mask)\n    maskToUse: Mask = null;\n    \n\n    show() {\n        if(this.myNode){\n            this.myNode!.active = true;\n            const sprite = this.myNode.getComponent(Sprite);\n            if (!sprite) return;\n\n            if(this.maskToUse){\n                this.maskToUse.enabled = true;\n            }\n\n            sprite.color = this.shownColor;\n        }\n    }\n\n    hide(){\n        if(this.myNode){\n            const sprite = this.myNode.getComponent(Sprite);\n            if (!sprite) return;\n\n            if(this.maskToUse){\n                this.maskToUse.enabled = false;\n            }\n\n            const initialColor = sprite.color.clone();\n            const targetColor = this.hidenColor;\n\n            tween(sprite)\n                .to(this.hideDuration, { color: targetColor }, {\n                    onUpdate: () => {\n                        sprite.color = new Color(initialColor.r, initialColor.g, initialColor.b, sprite.color.a);\n                    }\n                })\n                .call(() => {\n                    if(this.disactivateOnHide){\n                        this.myNode!.active = false;\n                    }\n                })\n                .start();\n        }\n    }\n}\n\n","import { _decorator, Component, director, Label, ProgressBar } from \"cc\";\nimport { TelegramWebApp } from \"./telegram-web\";\nimport { ServerCommunicator } from \"./ServerCommunicator\";\nimport { ToastManager } from \"./ToastManager\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport default class LoadingScreen extends Component {\n    @property(ProgressBar)\n    progressBar: ProgressBar = null;\n\n    @property(Label)\n    progressLabel: Label = null;\n\n    @property(Label)\n    onMobileLabel: Label = null;\n\n    isMobileDevice(): boolean {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    onLoad() {\n        this.init();\n    }\n\n    async init() {\n        if (!this.isMobileDevice()) {\n            this.onMobileLabel.string = \"Sorry, it only works on mobile devices!\";\n            return;\n        }\n\n        const tgInited = await TelegramWebApp.Instance.init();\n        if (tgInited) {\n            TelegramWebApp.Instance.expand();\n\n            const webinitdata = TelegramWebApp.Instance.getTelegramInitData();\n            const endpoint = 'auth';\n\n            ServerCommunicator.instance.sendPostRequest(endpoint, { webinitdata })\n                .then(response => {\n                    if (response.auth === true) {\n                        this.loadMainScene();\n                    } else {\n                        ToastManager.getInstance().showToast(\"Invalid authorization, try again later\", \"error\");\n                    }\n                })\n                .catch(error => {\n                    ToastManager.getInstance().showToast(\"An error occurred during authentication\", \"error\");\n                    console.error('POST Error:', error);\n                });\n        } else {\n            ToastManager.getInstance().showToast(\"Failed to initialize Telegram Web App\", \"error\");\n        }\n    }\n\n    loadMainScene() {\n        director.preloadScene(\"MainScene\", this.onProgress.bind(this), this.onComplete.bind(this));\n    }\n\n    onProgress(completedCount: number, totalCount: number, item: any) {\n        const progress = completedCount / totalCount;\n        this.progressBar.progress = progress;\n        this.progressLabel.string = Math.floor(progress * 100) + \"%\";\n    }\n\n    onComplete() {\n        director.loadScene(\"MainScene\");\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { SlidePopup } from './SlidePopup';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingScreenHider')\nexport class LoadingScreenHider extends Component {\n\n    @property(SlidePopup)\n    slidePopup: SlidePopup = null;\n\n    start() {\n        this.waitForHide();\n    }\n\n    async waitForHide(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.hide();\n    }\n\n    hide(){\n        if(this.slidePopup){\n            this.slidePopup.hide();\n            VibrationManager.medium();\n        }\n    }\n}\n\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MainMiningLabels')\nexport class MainMiningLabels extends Component {\n    @property(Label)\n    balanceLabel: Label = null;\n\n    @property\n    balancePrefix: string = 'Balance ($SEM): ';\n\n    @property(Label)\n    currentMinedLabel: Label = null;\n\n    isMiningActive: boolean = false;\n    \n    endDate: Date = null;\n\n    timeDifference: number = 0;\n\n    protected start(): void {\n        this.updateBalanceLabel();\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateBalanceLabel, this);\n    }\n\n    protected update(dt: number): void {\n        if(UserDataManager.instance.isInited){\n            this.updateCurrentMinedLabel();\n        } \n    }\n\n    onDestroy() {\n        UserDataManager.eventTarget.off('userDataUpdated', this.updateBalanceLabel, this);\n    }\n\n    updateCurrentMinedLabel() {\n        const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n\n        if(!startDateStr || startDateStr == \"null\"){\n            this.currentMinedLabel.string = \"00.00\";\n            return;\n        }\n        const startDate = new Date(startDateStr.replace(/-/g, \"/\"));\n\n        if(!startDate){\n            this.currentMinedLabel.string = \"00.00\";\n            return;\n        }\n        const DurationMs = UserDataManager.instance.getUserCurrentDuration() * 60 * 60 * 1000;\n    \n        this.timeDifference = UserDataManager.instance.getTimeDifference();\n        if (!this.timeDifference) {\n            console.error(\"can't get sync time from userDataManager\");\n            return;\n        }\n    \n        this.endDate = new Date(startDate.getTime() + DurationMs);\n    \n        const currentTime = new Date(new Date().getTime() + this.timeDifference);\n        const timeLeft = this.endDate.getTime() - currentTime.getTime();\n\n        if (timeLeft <= 0) {\n            this.currentMinedLabel.string = (\n                UserDataManager.instance.getUserCurrentSpeed() * \n                UserDataManager.instance.getUserCurrentDuration()\n            ).toFixed(2);\n            this.isMiningActive = false;\n        } else {\n            const timePassedMs = Math.abs(currentTime.getTime() - startDate.getTime());\n            const timePassedHours = timePassedMs / (1000 * 60 * 60);\n            const minedAmount = timePassedHours * UserDataManager.instance.getUserCurrentSpeed();\n    \n            this.currentMinedLabel.string = minedAmount.toFixed(4);\n            this.isMiningActive = true;\n        }\n    }\n\n    async updateBalanceLabel() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.balanceLabel.string = this.balancePrefix + UserDataManager.instance.getUserBalance().toFixed(2);\n    }\n}\n\n","import { _decorator, Button, Color, Component, Label, Node, Sprite } from 'cc';\nimport { TimerLabel } from './TimerLabel';\nimport { UserDataManager } from './UserDataManager';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { ButtonFeedbacks } from './ButtonFeedbacks';\nimport { TelegramWebApp } from './telegram-web';\nimport { ToastManager } from './ToastManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MiningCollectController')\nexport class MiningCollectController extends Component {\n    @property(TimerLabel)\n    miningTimer: TimerLabel\n\n    @property(Label)\n    miningSpeedLabel: Label = null;\n\n    @property(Node)\n    collectMiningNode: Node = null;\n\n    @property\n    miningSpeedPostfix: String = ' sem/h'\n\n    @property({ type: Color })\n    readyForCollectNodeColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    notReadyForCollectNodeColor: Color = new Color(255, 255, 255);\n\n    onDestroy() {\n        UserDataManager.eventTarget.off('userDataUpdated', this.updateMe, this);\n    }\n    start() {\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        this.init();\n    }\n\n    protected update(dt: number): void {\n        if(UserDataManager.instance.isInited){\n            this.updateCollectNode();\n        }\n    }\n\n    async init(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        if(this.miningSpeedLabel){\n            this.miningSpeedLabel.string = UserDataManager.instance.getUserCurrentSpeed().toString() + this.miningSpeedPostfix;\n        }\n\n        if(this.miningTimer){\n            const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n            if(startDateStr && startDateStr != \"null\"){\n                const duration = UserDataManager.instance.getUserCurrentDuration();\n\n                this.miningTimer.init(startDateStr, duration);\n            }  \n        }\n\n        if(this.collectMiningNode){\n            this.collectMiningNode.on(Node.EventType.TOUCH_END, this.onClickCollectMiningNode, this);\n        }\n        \n    }\n\n    onClickCollectMiningNode(){\n        if(!this.miningTimer.isTimerActive){\n            this.tryCollectMinedToServer();\n        }\n    }\n\n    async tryCollectMinedToServer(){\n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n\n        const endpoint = 'collect_mining';\n\n        communicator.sendPostRequest(endpoint, { webinitdata })\n            .then(response => {\n                const isCollected: boolean = response;\n\n                if (isCollected) {\n                    UserDataManager.instance.forceUpdateUserInfo();\n                }\n                else {\n                    console.log('cant collect mined sem!')\n                }\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"error in trying collect mined\", \"error\");\n                console.error('POST Error:', error);\n            });\n    }\n\n    async updateMe() {\n        console.log(\"TRYING UPDATE ME!\");\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        if(this.miningSpeedLabel){\n            this.miningSpeedLabel.string = UserDataManager.instance.getUserCurrentSpeed().toString() + this.miningSpeedPostfix;\n        }\n\n        if(this.miningTimer){\n            const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n            if(startDateStr && startDateStr != \"null\"){\n                const duration = UserDataManager.instance.getUserCurrentDuration();\n\n                this.miningTimer.init(startDateStr, duration);\n            }  \n        }\n    }\n\n    updateCollectNode() {\n        if(this.collectMiningNode){\n            if(this.miningTimer.isTimerActive){\n                this.collectMiningNode.getComponent(Sprite).color = this.notReadyForCollectNodeColor;\n                this.collectMiningNode.getComponent(ButtonFeedbacks).useClickTween = false;\n            }else{\n                this.collectMiningNode.getComponent(Sprite).color = this.readyForCollectNodeColor;\n                this.collectMiningNode.getComponent(ButtonFeedbacks).useClickTween = true;\n            }\n        }\n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('OpenLinkWithTelegram')\nexport class OpenLinkWithTelegram extends Component {\n    @property\n    url: string = \"\";\n\n    public openLink(){\n        const tgWebApp = TelegramWebApp.Instance;\n        if(tgWebApp != null){\n            tgWebApp.openTelegramLink(this.url);\n        }\n    }\n}\n\n","import { _decorator, Component, Node, UITransform } from 'cc';\nimport { SlidePopup } from './SlidePopup';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PopupManager')\nexport class PopupManager extends Component {\n    private static instance: PopupManager;\n\n    @property([Node])\n    popups: Node[] = [];\n\n    onLoad() {\n        if (PopupManager.instance) {\n            this.destroy();\n            return;\n        }\n        PopupManager.instance = this;\n        this.node.addComponent(UITransform);\n    }\n\n    public static getInstance(): PopupManager {\n        return PopupManager.instance;\n    }\n\n    showPopup(index: number) {\n        if (index < 0 || index >= this.popups.length) {\n            console.warn('Popup index out of bounds');\n            return;\n        }\n\n        const popupComponent = this.popups[index].getComponent(SlidePopup);\n        if (popupComponent) {\n            popupComponent.show();\n        } else {\n            console.warn('SlidePopup component not found on node:', this.popups[index].name);\n        }\n    }\n\n    hidePopup(index: number) {\n        if (index < 0 || index >= this.popups.length) {\n            console.warn('Popup index out of bounds');\n            return;\n        }\n\n        const popupComponent = this.popups[index].getComponent(SlidePopup);\n        if (popupComponent) {\n            popupComponent.hide();\n        } else {\n            console.warn('SlidePopup component not found on node:', this.popups[index].name);\n        }\n    }\n\n    switchPopup(currentIndex: number, nextIndex: number) {\n        this.hidePopup(currentIndex);\n        this.showPopup(nextIndex);\n    }\n}\n","import { _decorator, Component, Enum, UITransform, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum RotationDirection {\n    CLOCKWISE = 1,\n    COUNTERCLOCKWISE = -1\n}\n\n@ccclass('RotateUITransform')\nexport class RotatableUITransform extends Component {\n\n    @property({ type: Enum(RotationDirection), tooltip: \"Pick side for rotating\" })\n    direction: RotationDirection = RotationDirection.CLOCKWISE;\n\n    @property({ tooltip: \"Speed of rotating\" })\n    rotationSpeed: number = 100;\n\n    private _uiTransform: UITransform | null = null;\n\n    start() {\n        this._uiTransform = this.node.getComponent(UITransform);\n    }\n\n    update(deltaTime: number) {\n        if (this._uiTransform) {\n            const angle = this.rotationSpeed * deltaTime * this.direction;\n            const currentRotation = this.node.eulerAngles;\n            const newRotation = new Vec3(currentRotation.x, currentRotation.y, currentRotation.z + angle);\n            this.node.eulerAngles = newRotation;\n        }\n    }\n}\n","import { ToastManager } from \"./ToastManager\";\n\nexport class ServerCommunicator {\n    private static _instance: ServerCommunicator;\n    private baseUrl: string = \"https://horizonserv.fun/\";\n    \n    private requestTracker: Map<string, number[]> = new Map();\n\n    private readonly MAX_REQUESTS: number = 5;\n    private readonly TIME_WINDOW: number = 5000;\n\n    private constructor() {}\n\n    public static get instance(): ServerCommunicator {\n        if (!this._instance) {\n            this._instance = new ServerCommunicator();\n        }\n        return this._instance;\n    }\n\n    private canSendRequest(endpoint: string): boolean {\n        const currentTime = Date.now();\n        if (!this.requestTracker.has(endpoint)) {\n            this.requestTracker.set(endpoint, []);\n        }\n\n        const timestamps = this.requestTracker.get(endpoint)!;\n\n        const updatedTimestamps = timestamps.filter(timestamp => currentTime - timestamp < this.TIME_WINDOW);\n        this.requestTracker.set(endpoint, updatedTimestamps);\n\n        if (updatedTimestamps.length >= this.MAX_REQUESTS) {\n            ToastManager.getInstance().showToast(\"Too many requests!\", \"warn\");\n            return false;\n        }\n\n        updatedTimestamps.push(currentTime);\n        this.requestTracker.set(endpoint, updatedTimestamps);\n        return true;\n    }\n\n    public async sendGetRequest(endpoint: string, params: Record<string, string> = {}): Promise<any> {\n        if (!this.canSendRequest(endpoint)) {\n            return Promise.reject(new Error(\"Too many requests\"));\n        }\n\n        const queryString = new URLSearchParams(params).toString();\n        const url = `${this.baseUrl}${endpoint}${queryString ? `?${queryString}` : ''}`;\n\n        try {\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(`GET request to ${url} failed:`, error);\n            throw error;\n        }\n    }\n\n    public async sendPostRequest(endpoint: string, data: any): Promise<any> {\n        if (!this.canSendRequest(endpoint)) {\n            return Promise.reject(new Error(\"Too many requests\"));\n        }\n\n        const url = `${this.baseUrl}${endpoint}`;\n\n        try {\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(`POST request to ${url} failed:`, error);\n            throw error;\n        }\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ShareInviteLink')\nexport class ShareInviteLink extends Component {\n\n    @property(String)\n    public baseLinkToShare: String = 'https://t.me/horizenworld_bot/game?startapp=';\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    async onClick() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        const user = tgWebApp.getTelegramUser();\n        const urlForShare = this.baseLinkToShare + user.id.toString();\n\n        const shareText = \"Тебя ждет незабываемое путешествие на райские острова, Но для начала нужно собрать чемоданы.\".replace(/ /g, '%20');\n\n        tgWebApp.share(urlForShare, shareText);\n    }\n}\n\n","import { _decorator, Component, Node, Vec3, tween, UITransform } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum PopupState {\n    None,\n    Hidden,\n    Showing,\n    Shown,\n    Hiding,\n}\n\n@ccclass('SizePopup')\nexport class SizePopup extends Component {\n    @property\n    showDuration: number = 0.5;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    isOpenAtStart: boolean = false;\n\n    private state: PopupState = PopupState.None;\n\n    start() {\n        this.initScale();\n    }\n\n    initScale() {\n        if (this.isOpenAtStart) {\n            this.node.setScale(new Vec3(1, 1, 1));\n            this.state = PopupState.Shown;\n        } else {\n            this.node.setScale(new Vec3(0, 0, 0));\n            this.state = PopupState.Hidden;\n        }\n    }\n\n    show() {\n        if (this.state !== PopupState.Hidden && this.state !== PopupState.Hiding && this.state !== PopupState.None) {\n            return;\n        }\n        this.state = PopupState.Showing;\n\n        this.node.setScale(new Vec3(0, 0, 0));\n\n        tween(this.node)\n            .to(this.showDuration, { scale: new Vec3(1, 1, 1) }, { easing: 'sineOut' })\n            .call(() => {\n                this.state = PopupState.Shown;\n            })\n            .start();\n    }\n\n    hide() {\n        if (this.state !== PopupState.Shown && this.state !== PopupState.Showing) {\n            return;\n        }\n        this.state = PopupState.Hiding;\n\n        tween(this.node)\n            .to(this.hideDuration, { scale: new Vec3(0, 0, 0) }, { easing: 'sineIn' })\n            .call(() => {\n                this.state = PopupState.Hidden;\n            })\n            .start();\n    }\n}","import { _decorator, Component, Node, Vec3, tween, UITransform, Enum } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum PopupState {\n    None,\n    Hidden,\n    Showing,\n    Shown,\n    Hiding,\n}\n\nenum SlideDirection {\n    Left,\n    Right,\n    Top,\n    Bottom,\n}\n\n@ccclass('SlidePopup')\nexport class SlidePopup extends Component {\n    @property({ type: Enum(SlideDirection) })\n    showDirection: SlideDirection = SlideDirection.Left;\n\n    @property({ type: Enum(SlideDirection) })\n    hideDirection: SlideDirection = SlideDirection.Right;\n\n    @property\n    showDuration: number = 0.5;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    isOpenAtStart: boolean = false;\n\n    private state: PopupState = PopupState.None;\n\n    start() {\n        this.initPosition();\n    }\n\n    initPosition() {\n        if (this.isOpenAtStart) {\n            this.node.setPosition(new Vec3(0, 0, 0));\n            this.state = PopupState.Shown;\n        } else {\n            const startPos = this.getStartPosition(this.hideDirection);\n            this.node.setPosition(startPos);\n            this.state = PopupState.Hidden;\n        }\n    }\n\n    getStartPosition(direction: SlideDirection): Vec3 {\n        const canvasSize = this.node.parent!.getComponent(UITransform)!.contentSize;\n\n        switch (direction) {\n            case SlideDirection.Left:\n                return new Vec3(-canvasSize.width, 0, 0);\n            case SlideDirection.Right:\n                return new Vec3(canvasSize.width, 0, 0);\n            case SlideDirection.Top:\n                return new Vec3(0, canvasSize.height, 0);\n            case SlideDirection.Bottom:\n                return new Vec3(0, -canvasSize.height, 0);\n            default:\n                return new Vec3(0, 0, 0);\n        }\n    }\n\n    show() {\n        if (this.state !== PopupState.Hidden && this.state !== PopupState.Hiding && this.state !== PopupState.None) {\n            return;\n        }\n        this.state = PopupState.Showing;\n\n        const startPos = this.getStartPosition(this.showDirection);\n        this.node.setPosition(startPos);\n\n        tween(this.node)\n            .to(this.showDuration, { position: new Vec3(0, 0, 0) }, { easing: 'sineOut' })\n            .call(() => {\n                this.state = PopupState.Shown;\n            })\n            .start();\n    }\n\n    hide() {\n        if (this.state !== PopupState.Shown && this.state !== PopupState.Showing) {\n            return;\n        }\n        this.state = PopupState.Hiding;\n\n        const endPos = this.getStartPosition(this.hideDirection);\n\n        tween(this.node)\n            .to(this.hideDuration, { position: endPos }, { easing: 'sineIn' })\n            .call(() => {\n                this.state = PopupState.Hidden;\n            })\n            .start();\n    }\n}\n","import { _decorator, Component, Label, } from 'cc';\nimport { SuitcasesDataManager } from './SuitcasesDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SuitcaseCounter')\nexport class SuitcaseCounter extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n\n    start() {\n        this.initWithSuitcaseCount();\n    }\n\n    async initWithSuitcaseCount(){\n            while (!SuitcasesDataManager.instance.isInited) {\n                await new Promise(resolve => setTimeout(resolve, 100));\n            }\n\n            SuitcasesDataManager.eventTarget.on('currentSuitcasesUpdated', this.updateMe, this);\n        \n            if(this.myLabel){\n                this.myLabel.string = \"x\"+(await SuitcasesDataManager.instance.getCurrentSuitcaseFilledCount()).toString();\n            }\n        \n    }\n    \n    async updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = \"x\"+(await SuitcasesDataManager.instance.getCurrentSuitcaseFilledCount()).toString();\n        }\n    }\n}\n\n","import { _decorator, color, Color, Component, Label, Node, NodeEventType, Sprite, SpriteFrame, tween, UITransform, Vec3, EventTarget, Animation } from 'cc';\nimport { TimerLabel } from './TimerLabel';\nimport { LoadingHider } from './LoadingHider';\nimport { UserDataManager } from './UserDataManager';\nimport { SuitcasesDataManager, UserSuitcaseItemInfo, SuitcaseItemInfo, UserMiningSuitcaseItemInfo } from './SuitcasesDataManager';\nimport { CollectedItemShower } from './CollectedItemShower';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SuitcaseItemData')\nclass SuitcaseItemData {\n    @property\n    itemName: string = '';\n\n    @property(Sprite)\n    itemSprite: Sprite = null;\n}\n\n@ccclass('SuitcaseItems')\nclass SuitcaseItems {\n    @property([SuitcaseItemData])\n    itemDatas: SuitcaseItemData[] = [];\n}\n\n@ccclass('SuitcaseData')\nclass SuitcaseData {\n    @property\n    suitcaseId: number = 0;\n\n    @property(Node)\n    suitcaseNode: Node = null;\n\n    @property(SuitcaseItems)\n    items: SuitcaseItems = new SuitcaseItems();\n}\n\n@ccclass('Suitcases')\nclass Suitcases {\n    @property([SuitcaseData])\n    suitcasesDatas: SuitcaseData[] = [];\n}\n\n@ccclass('SuitcaseItemsController')\nexport class SuitcaseItemsController extends Component {\n    @property(Suitcases)\n    suitcases: Suitcases = new Suitcases();\n\n    @property({ type: Color })\n    notCollectedColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    collectedColor: Color = new Color(0, 255, 0);\n\n    @property(Sprite)\n    currentMiningItemSprite: Sprite = null;\n\n    @property(CollectedItemShower)\n    collectedItemShower: CollectedItemShower = null;\n\n    @property(TimerLabel)\n    miningItemTimerLabel: TimerLabel = null;\n\n    @property(LoadingHider)\n    loadingHiderSuitcase: LoadingHider = null;\n\n    @property(LoadingHider)\n    loadingHiderCurrentItem: LoadingHider = null;\n\n    @property(Node)\n    allSuitcasesPackedNode: Node = null;\n\n    _currentMiningItem: SuitcaseItemInfo;\n    _currentUserMiningSuitcaseItemInfo: UserMiningSuitcaseItemInfo;\n\n    _currentSpriteFrame: SpriteFrame;\n\n    public eventTarget: EventTarget = new EventTarget();\n\n    protected start(): void {\n        this.init();\n    }\n\n    async init() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        while (!SuitcasesDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        await this.setCurrentSuitcase();\n        await this.setItemsColors();\n\n        this.currentMiningItemSprite.node.on(Node.EventType.TOUCH_END, this.onClickCurrentMiningItemSprite, this);\n    }\n\n    async onClickCurrentMiningItemSprite() {\n        if (!this._currentMiningItem || !this._currentUserMiningSuitcaseItemInfo) {\n            console.log('Nothing In Mining');\n            return;\n        }\n\n        if (!this.miningItemTimerLabel.isTimerActive) {\n            this.tryCollectCurrentMiningItem();\n        }\n    }\n\n    protected update(dt: number): void {\n        if(SuitcasesDataManager.instance.isInited){\n            if (this.currentMiningItemSprite) {\n                if (!this.miningItemTimerLabel.isTimerActive) {\n                    this.currentMiningItemSprite.grayscale = false;\n                    this.currentMiningItemSprite.node.getComponent(Animation).enabled = true;\n                }\n                else{\n                    this.currentMiningItemSprite.grayscale = true;\n                    this.currentMiningItemSprite.node.getComponent(Animation).enabled = false;\n                }\n            }\n        }\n    }\n\n    async tryCollectCurrentMiningItem() {\n        if(this.collectedItemShower){\n            this.collectedItemShower.show(this._currentSpriteFrame);\n        }\n\n        const isCollected = await SuitcasesDataManager.instance.collectMinedItem();\n\n        console.warn(\"Is collected? - \" + isCollected);\n        \n        await this.setCurrentSuitcase(true);\n        await this.setItemsColors(true);\n\n    }\n\n    async setCurrentSuitcase(withForceUpdate: boolean = false) {\n        if (this.loadingHiderSuitcase) {\n            this.loadingHiderSuitcase.show();\n        }\n\n        if (this.loadingHiderCurrentItem) {\n            //this.loadingHiderCurrentItem.show();\n        }\n\n        if (this.suitcases && this.suitcases.suitcasesDatas.length > 0) {\n            this.suitcases.suitcasesDatas.forEach(function (value) {\n                if (value.suitcaseNode) {\n                    value.suitcaseNode.active = false;\n                } else {\n                    console.error(\"suitcaseNode not inited with ID: \" + value.suitcaseId);\n                }\n            });\n        } else {\n            console.error(\"Array suitcasesDatas empty.\");\n        }\n\n        const currentSuitcaseIndex = await SuitcasesDataManager.instance.getCurrentSuitcaseIndex(withForceUpdate);\n\n        if (currentSuitcaseIndex === null || currentSuitcaseIndex === undefined || !Number.isInteger(currentSuitcaseIndex)) {\n            console.log(\"ALL SUITCASES FILLED!\")\n            if (this.allSuitcasesPackedNode) {\n                this.allSuitcasesPackedNode.active = true;\n            }\n            if (this.loadingHiderCurrentItem) {\n                //this.loadingHiderCurrentItem.node.active = false;\n            }\n            return;\n        }\n\n        if (currentSuitcaseIndex !== null && currentSuitcaseIndex >= 0 && this.suitcases.suitcasesDatas[currentSuitcaseIndex]) {\n            if (this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseNode) {\n                this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseNode.active = true;\n                console.log('Suitcase inited');\n            } else {\n                console.error(\"suitcaseNode not inited with ID: \" + this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseId);\n            }\n        } else {\n            console.log('Not founded');\n        }\n    }\n\n    async setItemsColors(withForceUpdate: boolean = false) {\n        const currentSuitcaseIndex = await SuitcasesDataManager.instance.getCurrentSuitcaseIndex(withForceUpdate);\n\n        if (currentSuitcaseIndex === null || currentSuitcaseIndex === undefined || !Number.isInteger(currentSuitcaseIndex)) {\n            console.log(\"ALL SUITCASES FILLED!\")\n            if (this.allSuitcasesPackedNode) {\n                this.allSuitcasesPackedNode.active = true;\n            }\n            if (this.loadingHiderCurrentItem) {\n                //this.loadingHiderCurrentItem.node.active = false;\n            }\n            return;\n        }\n\n        if (currentSuitcaseIndex !== null && currentSuitcaseIndex >= 0) {\n            this.suitcases.suitcasesDatas[currentSuitcaseIndex].items.itemDatas.forEach((value) => {\n                if (value.itemSprite) {\n                    value.itemSprite.color = this.notCollectedColor;\n                } else {\n                    console.error(\"itemSprite not inited for: \" + value.itemName);\n                }\n            });\n        } else {\n            console.log(\"Not founded\");\n        }\n\n        const allItems = await SuitcasesDataManager.instance.getAllItems(withForceUpdate);\n        const currentUserSuitcaseItems = await SuitcasesDataManager.instance.getCurrentUserSuitcaseItems(withForceUpdate);\n        const currentMiningUserItems = await SuitcasesDataManager.instance.getCurrentMiningUserSuitcaseItems(withForceUpdate);\n\n        for (const value of this.suitcases.suitcasesDatas[currentSuitcaseIndex].items.itemDatas) {\n            const suitcaseItemDataName = value.itemName;\n            if (!suitcaseItemDataName) {\n                console.error('Not founded suitcaseItemDataName');\n                return;\n            }\n            if (allItems.length === 0) return;\n\n            const suitcaseItemInfo = allItems.find(item => item.name == suitcaseItemDataName);\n\n            if (!suitcaseItemInfo) {\n                console.warn('Not founded suitcaseItemInfo');\n                continue;\n            }\n\n            if (currentUserSuitcaseItems.length === 0) return;\n\n            const suitcaseUserItemInfo = currentUserSuitcaseItems.find(item => item.item_id === suitcaseItemInfo.id);\n            if (!suitcaseUserItemInfo) {\n                console.error('Not founded suitcaseUserItemInfo');\n                return;\n            }\n\n            if (currentMiningUserItems.length === 0) return;\n\n            const currentUserMiningItem = currentMiningUserItems.find(item => item.item_id === suitcaseItemInfo.id);\n            if (!currentUserMiningItem) {\n                console.log('Not founded currentUserMiningItem');\n                continue;\n            }\n\n            if (suitcaseUserItemInfo.status == 'collected') {\n                value.itemSprite.color = this.collectedColor;\n            } else if (suitcaseUserItemInfo.status == 'mining') {\n                this.updateCurrentMiningItem(value.itemSprite.spriteFrame, suitcaseItemInfo, currentUserMiningItem);\n                this._currentUserMiningSuitcaseItemInfo = currentUserMiningItem;\n                this._currentMiningItem = suitcaseItemInfo;\n            }\n\n            if (this.loadingHiderSuitcase) {\n                this.loadingHiderSuitcase.hide();\n            }\n        }\n    }\n\n    updateCurrentMiningItem(spriteFrame: SpriteFrame, suitcaseItemInfo: SuitcaseItemInfo, userMiningItem: UserMiningSuitcaseItemInfo) {\n        if (!spriteFrame || !suitcaseItemInfo || !userMiningItem) {\n            console.error('Not found spriteFrame or suitcaseItemInfo or userMiningItem');\n            return;\n        }\n\n        this._currentSpriteFrame = spriteFrame;\n\n        if (this.miningItemTimerLabel) {\n            this.miningItemTimerLabel.init(userMiningItem.data_start_mining_item, suitcaseItemInfo.collect_duration);\n        }\n\n        if (this.currentMiningItemSprite) {\n            if (!this.miningItemTimerLabel.isTimerActive) {\n                this.currentMiningItemSprite.grayscale = false;\n                this.currentMiningItemSprite.node.getComponent(Animation).enabled = true;\n            }\n            else{\n                this.currentMiningItemSprite.grayscale = true;\n                this.currentMiningItemSprite.node.getComponent(Animation).enabled = false;\n            }\n        }\n\n        if (this.loadingHiderCurrentItem) {\n            //this.loadingHiderCurrentItem.hide();\n        }\n    }\n}\n","import { _decorator, Component, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nimport { TelegramWebApp } from './telegram-web';\nimport { ToastManager } from './ToastManager';\nconst { ccclass } = _decorator;\n\nexport interface UserSuitcaseItemInfo {\n    id: number;\n    user_id: string;\n    suitcase_id: number;\n    item_id: number;\n    status: string;\n}\n\nexport interface SuitcaseItemInfo {\n    id: number;\n    name: string;\n    collect_duration: number;\n    price: number;\n    chance: number;\n    suitcase_type_id: number;\n}\n\nexport interface UserSuitcaseInfo {\n    id: number;\n    user_id: string;\n    suitcase_type_id: number;\n    is_complete: number;\n}\n\nexport interface UserMiningSuitcaseItemInfo {\n    id: number;\n    data_start_mining_item: string;\n    user_id: string;\n    item_id: number;\n    is_finished: number;\n}\n\n@ccclass('SuitcasesDataManager')\nexport class SuitcasesDataManager extends Component {\n    private static _instance: SuitcasesDataManager;\n\n    public static get instance(): SuitcasesDataManager {\n        if (!this._instance) {\n            console.error(\"SuitcasesDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    currentAllItems: SuitcaseItemInfo[] = [];\n    currentItems: UserSuitcaseItemInfo[] = [];\n    currentMiningItems: UserMiningSuitcaseItemInfo[] = [];\n    currentSuitcases: UserSuitcaseInfo[] = [];\n\n    onLoad() {\n        if (SuitcasesDataManager._instance) {\n            console.warn(\"SuitcasesDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        SuitcasesDataManager._instance = this;\n\n        this.forceUpdateData();\n    }\n\n    public get isInited(): boolean {\n        return this.currentAllItems.length > 0 && this.currentMiningItems.length > 0 && this.currentSuitcases.length > 0;\n    }\n\n    public async forceUpdateData() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        \n        this.setAllItemsFromServer();\n        this.setCurrentUserSuitcaseItemsFromServer();\n        this.setCurrentMiningUserSuitcaseItemsFromServer();\n        this.setCurrentSuitcasesFromServer();\n    }\n\n    async setAllItemsFromServer() {\n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n    \n        communicator.sendGetRequest('get_all_items', { webinitdata })\n            .then(response => {\n                console.log('Get all items response:', response);\n    \n                this.currentAllItems = response as SuitcaseItemInfo[];\n\n                SuitcasesDataManager.eventTarget.emit('allItemsUpdated');\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting all items: \" + error, \"error\")\n            });\n    }\n\n    async setCurrentUserSuitcaseItemsFromServer() {\n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n    \n        communicator.sendGetRequest('get_user_suitcase_items', { webinitdata })\n            .then(response => {\n                console.log('Get user items response:', response);\n    \n                this.currentItems = response as UserSuitcaseItemInfo[];\n\n                console.log('Cur user items:', this.currentItems);\n\n                SuitcasesDataManager.eventTarget.emit('currentUserSuitcaseItemsUpdated');\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting user items: \" + error, \"error\")\n            });\n    }\n\n    async setCurrentMiningUserSuitcaseItemsFromServer() {\n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n    \n        communicator.sendGetRequest('get_all_user_mining_items', { webinitdata })\n            .then(response => {\n                console.log('Get mining user items response:', response);\n    \n                this.currentMiningItems = response as UserMiningSuitcaseItemInfo[];\n\n                console.log(\"CURRENT MINING INFO - \" + this.currentMiningItems[0].data_start_mining_item)\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting mining user items: \" + error, \"error\")\n            });\n    }\n\n    async setCurrentSuitcasesFromServer() {\n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n    \n        communicator.sendGetRequest('get_all_user_suitcases', { webinitdata })\n            .then(response => {\n                console.log('Get mining user suitcases response:', response);\n    \n                this.currentSuitcases = response as UserSuitcaseInfo[];\n\n                SuitcasesDataManager.eventTarget.emit('currentSuitcasesUpdated');\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting user suitcases: \" + error, \"error\")\n            });\n    }\n\n    public async getAllItems(forceUpdate: boolean = false): Promise<SuitcaseItemInfo[]> {\n        if (this.currentAllItems.length <= 0 || forceUpdate) {\n            await this.setAllItemsFromServer();\n        }\n        return this.currentAllItems;\n    }\n\n    public async getCurrentUserSuitcaseItems(forceUpdate: boolean = false): Promise<UserSuitcaseItemInfo[]> {\n        if (this.currentItems.length <= 0 || forceUpdate) {\n            await this.setCurrentUserSuitcaseItemsFromServer();\n        }\n        return this.currentItems;\n    }\n\n    public async getCurrentMiningUserSuitcaseItems(forceUpdate: boolean = false): Promise<UserMiningSuitcaseItemInfo[]> {\n        if (this.currentMiningItems.length <= 0 || forceUpdate) {\n            await this.setCurrentMiningUserSuitcaseItemsFromServer();\n        }\n        return this.currentMiningItems;\n    }\n\n    public async getCurrentSuitcaseIndex(forceUpdate: boolean = false): Promise<number> {\n        if (this.currentSuitcases.length <= 0 || forceUpdate) {\n            await this.setCurrentSuitcasesFromServer();\n        }\n        const incompleteSuitcase = this.currentSuitcases.find(suitcase => suitcase.is_complete === 0);\n        return incompleteSuitcase ? incompleteSuitcase.suitcase_type_id - 1 : null;\n    }\n\n    public async getCurrentSuitcaseFilledCount(forceUpdate: boolean = false): Promise<number> {\n        if (this.currentSuitcases.length <= 0 || forceUpdate) {\n            await this.setCurrentSuitcasesFromServer();\n        }\n        const filledSuitcases = this.currentSuitcases.filter(suitcase => suitcase.is_complete === 1);\n        return filledSuitcases.length;\n    }    \n\n    public async collectMinedItem(): Promise<boolean> { \n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n    \n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return false;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n        const endpoint = 'collect_mined_item';\n    \n        try {\n            const response = await communicator.sendPostRequest(endpoint, { webinitdata });\n            console.log(\"RESPONSE COLLECT MINED ITEM: \", response);\n            console.log(\"SUCCESS OF RESPONSE COLLECT MINED ITEM: \", response.success);\n            return response.success;\n        } catch (error) {\n            ToastManager.getInstance().showToast(\"error with collecting mined item\", \"error\");\n            console.error('POST Error:', error);\n            return false;\n        }\n    }\n    \n}\n","import { _decorator, Component, Node, EventTouch, Sprite, UITransform, Vec3, tween, EventHandler, Color, SpriteFrame } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Switch')\nexport class Switch extends Component {\n\n    @property(Sprite)\n    background: Sprite = null;\n\n    @property(Sprite)\n    handle: Sprite = null;\n\n    @property(Boolean)\n    isOn: boolean = false;\n\n    @property(Boolean)\n    useOffset: boolean = true;\n\n    @property(Number)\n    offset: number = 18;\n\n    @property({ type: Number, tooltip: \"Duration of the toggle animation in seconds\" })\n    duration: number = 0.2;\n\n    @property({ type: [EventHandler], tooltip: \"Events called when switch state changes\" })\n    switchEvents: EventHandler[] = [];\n\n    @property({ type: Color, tooltip: \"Background color when switch is ON\" })\n    onBgColor: Color = new Color(76, 217, 100);\n\n    @property({ type: Color, tooltip: \"Background color when switch is OFF\" })\n    offBgColor: Color = new Color(200, 200, 200);\n\n    @property({ type: SpriteFrame, tooltip: \"Handle sprite when switch is ON\" })\n    onHandleSprite: SpriteFrame = null;\n\n    @property({ type: SpriteFrame, tooltip: \"Handle sprite when switch is OFF\" })\n    offHandleSprite: SpriteFrame = null;\n\n    private handleNode: Node = null;\n    private backgroundNode: Node = null;\n\n    onLoad() {\n        this.handleNode = this.handle.node;\n        this.backgroundNode = this.background.node;\n\n        this.node.on(Node.EventType.TOUCH_END, this.onToggle, this);\n        this.updateVisualState(false);\n    }\n\n    onToggle(event: EventTouch) {\n        this.isOn = !this.isOn;\n        this.updateVisualState(true);\n        this.emitSwitchEvent();\n    }\n\n    updateVisualState(animated: boolean) {\n        const targetX = this.isOn ? this.getOnPositionX() : this.getOffPositionX();\n        if (animated) {\n            tween(this.handleNode)\n                .to(this.duration, { position: new Vec3(targetX, 0, 0) }, { easing: 'sineOut' })\n                .start();\n        } else {\n            this.handleNode.setPosition(new Vec3(targetX, 0, 0));\n        }\n\n        this.background.color = this.isOn ? this.onBgColor : this.offBgColor;\n\n        if (this.isOn && this.onHandleSprite) {\n            this.handle.spriteFrame = this.onHandleSprite;\n        } else if (!this.isOn && this.offHandleSprite) {\n            this.handle.spriteFrame = this.offHandleSprite;\n        }\n    }\n\n    getOnPositionX(): number {\n        if(this.useOffset){\n            return this.offset;\n        }else{\n            const backgroundWidth = this.backgroundNode.getComponent(UITransform).width;\n            const handleWidth = this.handleNode.getComponent(UITransform).width;\n            return (backgroundWidth - handleWidth) / 2;\n        }\n    }\n\n    getOffPositionX(): number {\n        if (this.useOffset) {\n            return -(this.offset);\n        } else {\n            const backgroundWidth = this.backgroundNode.getComponent(UITransform).width;\n            const handleWidth = this.handleNode.getComponent(UITransform).width;\n            return -(backgroundWidth - handleWidth) / 2;\n        }\n    }\n\n    emitSwitchEvent() {\n        EventHandler.emitEvents(this.switchEvents, this.isOn);\n    }\n}\n","import { _decorator, Button, Component, Details, Enum, Label, Node, Sprite, SpriteFrame } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nimport { ButtonFeedbacks } from './ButtonFeedbacks';\nimport { PopupManager } from './PopupManager';\nimport { TaskData, TasksDataManager, TaskType } from './TasksDataManager';\nimport { UserDataManager } from './UserDataManager';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('TaskItem')\nexport class TaskItem extends Component {\n\n    @property(Label)\n    nameLabel: Label | null = null;\n\n    @property(Label)\n    rewardLabel: Label | null = null;\n\n    @property(Button)\n    goButton: Button | null = null;\n\n    @property(Sprite)\n    buttonIconSprite: Sprite | null = null;\n\n    @property(SpriteFrame)\n    isCompletedIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    isNotCompletedIcon: SpriteFrame | null = null;\n\n    @property(Sprite)\n    iconSprite: Sprite | null = null;\n\n    @property(SpriteFrame)\n    subscribeIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    moneyIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    friendsIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    otherIcon: SpriteFrame | null = null;\n\n    myTaskData: TaskData;\n\n    init(task: TaskData){\n        this.myTaskData = task;\n        this.updateMe();\n    }\n \n    updateMe(){\n\n        let taskName = this.myTaskData.taskInfo.name;\n        const taskDetails = this.myTaskData.taskInfo.details;\n\n        if (this.rewardLabel) {\n            this.rewardLabel.string = \"+\" + this.myTaskData.taskInfo.reward.toString();\n        }\n        if (this.iconSprite && this.otherIcon && this.subscribeIcon && this.moneyIcon && this.friendsIcon) {\n            switch (this.myTaskData.taskInfo.task_type) {\n                case TaskType.GoTo:\n                case TaskType.Other:\n                    this.iconSprite.spriteFrame = this.otherIcon;\n                    break;\n                case TaskType.Subscribe:\n                    this.iconSprite.spriteFrame = this.subscribeIcon;\n                    taskName += taskDetails;\n                    break;\n                case TaskType.MoneyCount:\n                    this.iconSprite.spriteFrame = this.moneyIcon;\n                    break;\n                case TaskType.FriendsCount:\n                    this.iconSprite.spriteFrame = this.friendsIcon;\n                    break;\n                default:\n                    console.log(\"Unknown task type\");\n                    break;\n            }\n        }\n\n        if (this.nameLabel) {\n            var sliced = taskName.slice(0, 21);\n            if (sliced.length < taskName.length) {\n                sliced += '...';\n            }\n            this.nameLabel.string = sliced;\n        }\n\n        console.log(\"UPDATED TASK WITH TYPE: \" + this.myTaskData.taskInfo.task_type);\n\n        if (this.goButton && this.buttonIconSprite) {\n            if (this.myTaskData.userTaskInfo.status === \"completed\") {\n                if (this.isCompletedIcon) {\n                    this.buttonIconSprite.spriteFrame = this.isCompletedIcon;\n                }\n                if(this.goButton.getComponent(ButtonFeedbacks)) {\n                    this.goButton.getComponent(ButtonFeedbacks).enabled = false;\n                }\n                this.goButton.interactable = false;\n            } else {\n                if (this.isNotCompletedIcon) {\n                    this.buttonIconSprite.spriteFrame = this.isNotCompletedIcon;\n                }\n                if(this.goButton.getComponent(ButtonFeedbacks)) {\n                    this.goButton.getComponent(ButtonFeedbacks).enabled = true;\n                }\n                this.goButton.interactable = true;\n            }\n\n            this.goButton.node.off('click');\n            this.goButton.node.on('click', this.onTaskButtonClicked, this);\n        }\n    }\n\n    async onTaskButtonClicked() {\n        if (this.myTaskData.userTaskInfo.status === \"completed\") return;\n\n        const isNowCompleted = await TasksDataManager.instance.checkTaskCompleted(this.myTaskData.userTaskInfo.task_id);\n\n        console.log(\"Clicked task status: \" + isNowCompleted);\n\n        if (isNowCompleted) {\n            VibrationManager.success();\n            TasksDataManager.instance.forceUpdateData();\n            UserDataManager.instance.forceUpdateUserInfo();\n        } else {\n            this.goToCompleteTask();\n        }\n    }\n\n    async goToCompleteTask() {\n        VibrationManager.error();\n        switch (this.myTaskData.taskInfo.task_type) {\n            case TaskType.GoTo:\n            case TaskType.Other:\n                await this.goOtherComplete();\n                break;\n            case TaskType.Subscribe:\n                await this.goSubscribeComplete();\n                break;\n            case TaskType.MoneyCount:\n                this.goMoneyComplete();\n                break;\n            case TaskType.FriendsCount:\n                this.goFriendsComplete();\n                break;\n            default:\n                console.log(\"Unknown task type\");\n                break;\n        }\n    }\n\n    async goOtherComplete() {\n        // const tgWebApp = TelegramWebApp.Instance;\n        // await tgWebApp.init();\n        // tgWebApp.openLink(this.myTaskData.taskInfo.details);\n    }\n\n    async goSubscribeComplete() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        let forUrlSliced = this.myTaskData.taskInfo.details.slice(1);\n\n        const link = \"https://t.me/\" + forUrlSliced;\n\n        tgWebApp.openTelegramLink(link);\n    }\n\n    goMoneyComplete() {\n        PopupManager.getInstance().hidePopup(0);\n    }\n\n    goFriendsComplete() {\n        PopupManager.getInstance().switchPopup(0, 3);\n    }\n}\n\n","import { _decorator, Component, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nimport { TelegramWebApp } from './telegram-web';\nimport { ToastManager } from './ToastManager';\nconst { ccclass } = _decorator;\n\nexport enum TaskType {\n    Other = \"Other\",\n    GoTo = \"GoTo\",\n    Subscribe = \"Subscribe\",\n    MoneyCount = \"MoneyCount\",\n    FriendsCount = \"FriendsCount\",\n}\n\nexport interface UserTaskInfo {\n    id: number;\n    user_id: string;\n    task_id: number;\n    status: string;\n}\n\nexport interface TaskInfo {\n    id: number;\n    name: string;\n    reward: number;\n    task_type: TaskType;\n    details: string;\n}\n\nexport interface TaskData{\n    taskInfo: TaskInfo;\n    userTaskInfo: UserTaskInfo;\n}\n\n@ccclass('TasksDataManager')\nexport class TasksDataManager extends Component {\n    private static _instance: TasksDataManager;\n\n    public static get instance(): TasksDataManager {\n        if (!this._instance) {\n            console.error(\"TasksDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    currentTasks: TaskInfo[] = [];\n    currentUserTasks: UserTaskInfo[] = [];\n\n    onLoad() {\n        if (TasksDataManager._instance) {\n            console.warn(\"TasksDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        TasksDataManager._instance = this;\n\n        this.forceUpdateData();\n    }\n\n    public get isInited(): boolean {\n        return this.currentTasks.length > 0 && this.currentUserTasks.length > 0;\n    }\n\n    public async forceUpdateData() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        await this.setAllTasksFromServer();\n        await this.setCurrentUserTasksFromServer();\n    }\n\n    async setAllTasksFromServer() {\n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n    \n        communicator.sendGetRequest('get_all_tasks', { webinitdata })\n            .then(response => {\n                console.log('Get all tasks response:', response);\n    \n                this.currentTasks = response as TaskInfo[];\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting tasks: \" + error, \"error\")\n            });\n    }\n\n    async setCurrentUserTasksFromServer() {\n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n    \n        communicator.sendGetRequest('get_user_tasks', { webinitdata })\n            .then(response => {\n                console.log('Get user tasks response:', response);\n    \n                this.currentUserTasks = response as UserTaskInfo[];\n\n                TasksDataManager.eventTarget.emit('currentUserTasksUpdated');\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting tasks: \" + error, \"error\")\n            });\n    }\n\n    async checkTaskCompleted(taskId: number): Promise<boolean> {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        let webinitdata = \"\";\n        if (UserDataManager.instance.isDebug) {\n            webinitdata = UserDataManager.instance.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return false;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n\n        const endpoint = 'check_task_completion';\n\n        const task_id = taskId.toFixed(0);\n\n        communicator.sendGetRequest(endpoint, { webinitdata, task_id })\n            .then(response => {\n                const taskCompleted: boolean = response.success\n                return taskCompleted;\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"error in check task \" + taskId, \"error\");\n                console.error('POST Error:', error);\n                return false;\n            });   \n    }\n\n    public async getAllTasks(forceUpdate: boolean = false): Promise<TaskInfo[]> {\n        if (this.currentTasks.length <= 0 || forceUpdate) {\n            await this.setAllTasksFromServer();\n        }\n        return this.currentTasks;\n    }\n\n    public async getUserTasks(forceUpdate: boolean = false): Promise<UserTaskInfo[]> {\n        if (this.currentUserTasks.length <= 0 || forceUpdate) {\n            await this.setCurrentUserTasksFromServer();\n        }\n        return this.currentUserTasks;\n    }\n\n    private mapTaskType(taskTypeString: string): TaskType {\n        switch (taskTypeString) {\n            case \"GoTo\":\n                return TaskType.GoTo;\n            case \"Subscribe\":\n                return TaskType.Subscribe;\n            case \"MoneyCount\":\n                return TaskType.MoneyCount;\n            case \"FriendsCount\":\n                return TaskType.FriendsCount;\n            case \"Other\":\n            default:\n                return TaskType.Other;\n        }\n    }\n}\n","import { _decorator, Component, instantiate, Node, Prefab } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { TaskData, TaskInfo, TasksDataManager } from './TasksDataManager';\nimport { TaskItem } from './TaskItem';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TasksScrollViewer')\nexport class TasksScrollViewer extends Component {\n    @property(Prefab)\n    taskItemPrefab: Prefab = null;\n\n    @property(Prefab)\n    taskOffsetPrefab: Prefab = null;\n\n    @property(Node)\n    contentNode: Node = null;\n\n    start() {\n        this.init();\n    }\n\n    async init(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        while (!TasksDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        TasksDataManager.eventTarget.on('currentUserTasksUpdated', this.updateMe, this);\n\n        this.updateMe();\n    }\n\n    async updateMe() {\n        while (!TasksDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n    \n        const userTasksInfos = await TasksDataManager.instance.getUserTasks();\n        const allTasksInfos = await TasksDataManager.instance.getAllTasks();\n    \n        const taskInfoMap = new Map<number, TaskInfo>();\n        allTasksInfos.forEach(taskInfo => {\n            taskInfoMap.set(taskInfo.id, taskInfo);\n        });\n    \n        const taskDataArray: TaskData[] = userTasksInfos.map(userTaskInfo => {\n            const taskInfo = taskInfoMap.get(userTaskInfo.task_id);\n            return {\n                taskInfo: taskInfo!,\n                userTaskInfo: userTaskInfo\n            };\n        });\n\n        this.updateTasksList(taskDataArray);\n    }\n    \n\n    updateTasksList(tasks: TaskData[]) {\n        if (this.contentNode.children.length > 0) {\n            this.contentNode.removeAllChildren();\n        }\n    \n        const completedTask = tasks.filter(item => item.userTaskInfo.status === \"completed\");\n        const uncompletedTask = tasks.filter(item => item.userTaskInfo.status != \"completed\");\n    \n        if (this.taskItemPrefab && this.contentNode) {\n            for (let i = 0; i < uncompletedTask.length; i++) {\n                if (!this.taskItemPrefab) {\n                    console.error(\"taskItemPrefab is null\");\n                    return;\n                }\n                const newFriendItemPrefab = instantiate(this.taskItemPrefab);\n                this.contentNode.addChild(newFriendItemPrefab);\n                newFriendItemPrefab.getComponent(TaskItem).init(uncompletedTask[i]);\n            }\n        } else {\n            console.error(\"taskItemPrefab or contentNode is not set\");\n        }\n    \n        if (this.taskOffsetPrefab) {\n            const newOffsetPrefab = instantiate(this.taskOffsetPrefab);\n            this.contentNode.addChild(newOffsetPrefab);\n        } else {\n            console.error(\"taskOffsetPrefab is null\");\n        }\n    \n        if (this.taskItemPrefab && this.contentNode) {\n            for (let i = 0; i < completedTask.length; i++) {\n                if (!this.taskItemPrefab) {\n                    console.error(\"taskItemPrefab is null\");\n                    return;\n                }\n                const newFriendItemPrefab = instantiate(this.taskItemPrefab);\n                this.contentNode.addChild(newFriendItemPrefab);\n                newFriendItemPrefab.getComponent(TaskItem).init(completedTask[i]);\n            }\n        } else {\n            console.error(\"taskItemPrefab or contentNode is not set\");\n        }\n    }\n}\n\n","import { _decorator, sys } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\nexport interface CloudStorage {\n    setItem(key: string, value: string, callback?: (error: any, success: boolean) => void): CloudStorage;\n    getItem(key: string, callback: (error: any, value: string) => void): CloudStorage;\n    getItems(keys: string[], callback: (error: any, values: { [key: string]: string }) => void): CloudStorage;\n    removeItem(key: string, callback?: (error: any, success: boolean) => void): CloudStorage;\n    removeItems(keys: string[], callback?: (error: any, success: boolean) => void): CloudStorage;\n    getKeys(callback: (error: any, keys: string[]) => void): CloudStorage;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            this.expand();\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openLink(url);\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + url + '&' + new URLSearchParams({ text: text || '' }).toString();\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public expand() {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n\n        if(!this._tgWebAppJS.isExpanded){\n            this._tgWebAppJS.expand();\n        }\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n\n        return this._tgWebAppJS.initData;\n    }\n\n    public doHapticImpact(style: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.impactOccurred(style);\n    }\n\n    public doHapticNotification(type: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.notificationOccurred(type);\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n\n    //For cloudStorage\n    private get cloudStorage(): CloudStorage {\n        if (!this._tgWebAppJS) {\n            console.error(\"Telegram Web App is not initialized!\");\n            return null;\n        }\n        if (!this._tgWebAppJS.CloudStorage) {\n            console.error(\"CloudStorage is not available!\");\n            return null;\n        }\n        return this._tgWebAppJS.CloudStorage;\n    }\n\n    public cloudStorageSetItem(key: string, value: string, callback?: (error: any, success: boolean) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.setItem(key, value, callback);\n    }\n\n    public cloudStorageGetItem(key: string, callback: (error: any, value: string) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.getItem(key, callback);\n    }\n\n    public cloudStorageGetItems(keys: string[], callback: (error: any, values: { [key: string]: string }) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.getItems(keys, callback);\n    }\n\n    public cloudStorageRemoveItem(key: string, callback?: (error: any, success: boolean) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.removeItem(key, callback);\n    }\n\n    public cloudStorageRemoveItems(keys: string[], callback?: (error: any, success: boolean) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.removeItems(keys, callback);\n    }\n\n    public cloudStorageGetKeys(callback: (error: any, keys: string[]) => void): void {\n        const storage = this.cloudStorage;\n        if (!storage) return;\n        storage.getKeys(callback);\n    }\n\n    public get isInited(): boolean {\n        return this._tgWebAppJS != null;\n    }\n}\n\n\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { ServerCommunicator } from \"./ServerCommunicator\";\nconst { ccclass, property } = _decorator;\n\nexport interface SuitcaseItemInfo {\n    id: number;\n    name: string;\n    collectionDuration: number;\n    price: number;\n    chance: number;\n    suitcaseTypeId: number;\n}\n\n@ccclass('TestGetLabel')\nexport class TestGetLabel extends Component {\n    @property(ServerCommunicator)\n    serverCommunicator: ServerCommunicator=null;\n    @property(Label)\n    label: Label = null;\n\n    currentAllItems: SuitcaseItemInfo[] = [];\n\n    protected start(): void {\n        this.getMetod();\n    }\n\n    async getMetod(){\n        try {\n            const response = await this.serverCommunicator.sendGetRequest('get_all_items');\n\n            const allItems: any[][] = response;\n\n            this.currentAllItems = allItems.map((item: any) => ({\n                id: item[0],\n                name: item[1],\n                collectionDuration: item[2],\n                price: item[3],\n                chance: item[4],\n                suitcaseTypeId: item[5]\n            }));\n        } catch (error) {\n            console.error('Error fetching items:', error);\n        }\n\n        \n        this.label.string = this.currentAllItems[1].name;\n    }\n}\n\n","import { _decorator, Component, Label } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TimerLabel')\nexport class TimerLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    private endDate: Date = null;\n    public isTimerActive: boolean = false;\n\n    private timeDifference: number = 0;\n\n    protected start(): void {\n        this.myLabel.string = '00:00:00:00';\n    }\n\n    async init(dateString: string, duration: number): Promise<void> {\n\n        console.log(\"IM TIMER LABEL AND INITED WITH datestring - \" + dateString + \". AND duration - \" + duration)\n\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const startDate = new Date(dateString.replace(/-/g, \"/\"));\n        const DurationMs = duration * 60 * 60 * 1000;\n\n        this.timeDifference = UserDataManager.instance.getTimeDifference();\n        if(!this.timeDifference){\n            console.error(\"cant get sync time from userDataManager\");\n            return;\n        }\n\n        this.endDate = new Date(startDate.getTime() + DurationMs);\n        this.isTimerActive = true;\n\n        this.updateLabel();\n    }\n\n    protected update(dt: number): void {\n        if (this.isTimerActive && this.endDate) {\n            this.updateLabel();\n        }\n    }\n\n    private updateLabel(): void {\n        const currentTime = new Date(new Date().getTime() + this.timeDifference);\n        const timeLeft = this.endDate.getTime() - currentTime.getTime();\n\n        if (timeLeft <= 0) {\n            this.myLabel.string = \"00:00:00:00\";\n            this.isTimerActive = false;\n        } else {\n            this.myLabel.string = this.formatTimeLeft(timeLeft);\n        }\n    }\n\n    formatTimeLeft(timeLeft: number): string {\n        const seconds = Math.floor((timeLeft / 1000) % 60);\n        const minutes = Math.floor((timeLeft / (1000 * 60)) % 60);\n        const hours = Math.floor((timeLeft / (1000 * 60 * 60)) % 24);\n        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n\n        function padZero(num: number): string {\n            return (num < 10 ? '0' : '') + num;\n        }\n\n        return padZero(days) + ':' + padZero(hours) + ':' + padZero(minutes) + ':' + padZero(seconds);\n    }\n}\n","import { _decorator, Component, Label, Sprite, SpriteFrame, Color } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Toast')\nexport class Toast extends Component {\n\n    @property({ type: Label })\n    messageLabel: Label = null;\n\n    @property({ type: Sprite })\n    iconSprite: Sprite = null;\n\n    @property({ type: SpriteFrame })\n    errorIcon: SpriteFrame = null;\n\n    @property({ type: SpriteFrame })\n    warnIcon: SpriteFrame = null;\n\n    @property({ type: SpriteFrame })\n    logIcon: SpriteFrame = null;\n\n    public init(message: string, type: 'error' | 'warn' | 'log') {\n        this.messageLabel.string = message;\n\n        switch (type) {\n            case 'error':\n                this.iconSprite.spriteFrame = this.errorIcon;\n                break;\n            case 'warn':\n                this.iconSprite.spriteFrame = this.warnIcon;\n                break;\n            case 'log':\n                this.iconSprite.spriteFrame = this.logIcon;\n                break;\n            default:\n                break;\n        }\n    }\n}\n","import { _decorator, Component, Node, Prefab, instantiate, director, Vec3, UITransform, Tween, tween } from 'cc';\nimport { Toast } from './Toast';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ToastManager')\nexport class ToastManager extends Component {\n\n    private static _instance: ToastManager;\n\n    @property({ type: Prefab })\n    toastPrefab: Prefab = null;\n\n    @property({ type: Number, tooltip: \"Отступ сверху в пикселях\" })\n    topOffset: number = 50;\n\n    @property({ type: Number, tooltip: \"Длительность отображения сообщения в секундах\" })\n    displayDuration: number = 2;\n\n    private _toasts: Node[] = [];\n\n    onLoad() {\n        if (ToastManager._instance) {\n            this.destroy();\n            return;\n        }\n        ToastManager._instance = this;\n    }\n\n    public static getInstance(): ToastManager {\n        if (!ToastManager._instance) {\n            const canvas = director.getScene().getChildByName('Canvas');\n            const toastManagerNode = new Node('ToastManager');\n            canvas.addChild(toastManagerNode);\n            toastManagerNode.addComponent(ToastManager);\n        }\n        return ToastManager._instance;\n    }\n\n    public showToast(message: string, type: 'error' | 'warn' | 'log', duration?: number) {\n        if (!this.toastPrefab) {\n            console.error('Toast Prefab not set in ToastManager');\n            return;\n        }\n\n        const toastNode = instantiate(this.toastPrefab);\n        const toastComponent = toastNode.getComponent(Toast);\n        if (toastComponent) {\n            toastComponent.init(message, type);\n        }\n\n        const canvas = director.getScene().getChildByName('Canvas');\n        canvas.addChild(toastNode);\n\n        const uiTransform = canvas.getComponent(UITransform);\n        const startPosition = new Vec3(0, uiTransform.height / 2 + 100, 0);\n        toastNode.setPosition(startPosition);\n\n        const targetY = uiTransform.height / 2 - this.topOffset;\n        tween(toastNode)\n            .to(0.3, { position: new Vec3(0, targetY, 0) }, { easing: 'bounceOut' })\n            .start();\n\n        const displayTime = duration || this.displayDuration;\n        tween(toastNode)\n            .delay(displayTime)\n            .to(0.3, { position: new Vec3(0, uiTransform.height / 2 + 100, 0) }, { easing: 'sineIn' })\n            .call(() => {\n                toastNode.destroy();\n                this._toasts.splice(this._toasts.indexOf(toastNode), 1);\n            })\n            .start();\n\n        this._toasts.push(toastNode);\n    }\n}\n","import { _decorator, Component, Node, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { TelegramWebApp } from './telegram-web';\nimport VibrationManager from './VibrationManager';\nimport { ToastManager } from './ToastManager';\nconst { ccclass, property } = _decorator;\n\nexport interface UserInfo {\n    id: string;\n    name: string;\n    photoUrl: string;\n    balance: number;\n    dateStartMining?: string;\n    speedId: number;\n    durationId: number;\n    invitedBy?: string;\n}\n\nexport interface SpeedInfo {\n    id: number;\n    speed: number;\n    price: number;\n}\n\nexport interface DurationInfo {\n    id: number;\n    duration: number;\n    price: number;\n}\n\nexport interface UserSettingsData {\n    vibration: boolean;\n}\n\n@ccclass('UserDataManager')\nexport class UserDataManager extends Component {\n    @property\n    isDebug: boolean = false;\n\n    @property\n    initDataForDebug: string = \"query_id%3DAAG_k0McAAAAAL-TQxyD8dfa%26user%3D%257B%2522id%2522%253A474190783%252C%2522first_name%2522%253A%2522anrew%2522%252C%2522last_name%2522%253A%2522%2522%252C%2522username%2522%253A%2522qanrewp%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522is_premium%2522%253Atrue%252C%2522allows_write_to_pm%2522%253Atrue%257D%26auth_date%3D1728553589%26hash%3Dc8ec0b5c465331ce17ec6d82ba746c0c61d4852513d194f39895049100653f70\";\n\n    private static _instance: UserDataManager;\n\n    currentUserInfo: UserInfo = null;\n    speedInfos: SpeedInfo[] = [];\n    durationInfos: DurationInfo[] = [];\n\n    isTimeSyncWithServer: boolean = false;\n\n    timeDifference: number = null;\n\n    firstname: string = \"undefined\";\n\n    username: string = \"undefined\";\n\n    defaultName: string = \"Anonymous\";\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    public static get instance(): UserDataManager {\n        if (!this._instance) {\n            console.error(\"UserDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public get isInited(): boolean {\n        if (this.currentUserInfo && this.speedInfos.length > 0 && this.durationInfos.length > 0 && this.isTimeSyncWithServer) {\n            return true;\n        }\n        return false;\n    }\n    onLoad() {\n        if (UserDataManager._instance) {\n            console.warn(\"UserDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        UserDataManager._instance = this;\n        this.syncTimeWithServer();\n\n        this.setSpeedInfosFromServer();\n        this.setDurationInfosFromServer();\n\n        this.forceUpdateUserInfo();\n\n        if(!this.isDebug){\n            VibrationManager.init();\n        }\n    }\n\n    public getUserId(): string {\n        if (this.currentUserInfo) {\n            return this.currentUserInfo.id;\n        } else {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n    }\n\n    public getUserName(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.name;\n    }\n\n    public getUserPhotoUrl(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.photoUrl;\n    }\n\n    public getUserBalance(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.balance;\n    }\n\n    public getUserMiningStartDate(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.dateStartMining;\n    }\n\n    public getUserSpeedId(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.speedId;\n    }\n\n    public getUserDurationId(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.durationId;\n    }\n\n    public getUserInvitedBy(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.invitedBy;\n    }\n\n    public getUserCurrentSpeed(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === this.getUserSpeedId());\n        return speedInfo ? speedInfo.speed : null;\n    }\n\n    public getSpeedPriceById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === id);\n        return speedInfo ? speedInfo.price : null;\n    }\n\n    public getMiningSpeedById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === id);\n        return speedInfo ? speedInfo.speed : null;\n    }\n\n    public getSpeedInfosCount(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.speedInfos.length;\n    }\n\n    public getUserCurrentDuration(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === this.getUserDurationId());\n        return durationInfo ? durationInfo.duration : null;\n    }\n\n    public getDurationPriceById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === id);\n        return durationInfo ? durationInfo.price : null;\n    }\n\n    public getMiningDurationById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === id);\n        return durationInfo ? durationInfo.duration : null;\n    }\n\n    public getDurationInfosCount(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.durationInfos.length;\n    }\n\n    async syncTimeWithServer(): Promise<void> {\n        if (this.isTimeSyncWithServer) return;\n    \n        try {\n            let webinitdata = \"\";\n            if (this.isDebug) {\n                webinitdata = this.initDataForDebug;\n            }\n            else {\n                const tgWebApp = TelegramWebApp.Instance;\n                if (!tgWebApp.isInited) {\n                    const successInitTg = await tgWebApp.init();\n                    if (!successInitTg) {\n                        return;\n                    }\n                }\n    \n                webinitdata = tgWebApp.getTelegramInitData();\n            }\n    \n            const response = await ServerCommunicator.instance.sendGetRequest('get_server_time', { webinitdata });\n            console.log('Server time response:', response);\n    \n            let serverTimeString: string;\n    \n            if (typeof response === 'string') {\n                serverTimeString = response;\n            }\n            else if (typeof response === 'object' && response.server_time) {\n                serverTimeString = response.server_time;\n            }\n            else {\n                throw new Error('Unexpected server time response format');\n            }\n    \n            const serverTime = new Date(serverTimeString.replace(/-/g, \"/\"));\n    \n            this.timeDifference = serverTime.getTime() - new Date().getTime();\n    \n            this.isTimeSyncWithServer = true;\n        } catch (error) {\n            console.error('Error fetching server time:', error);\n        }\n    }\n    \n\n    public getTimeDifference(): number {\n        if (!this.isTimeSyncWithServer) {\n            return null;\n        }\n\n        return this.timeDifference;\n    }\n\n    public saveUserSettingsData(data: UserSettingsData, callback?: (error: any, success: boolean) => void): void {\n        const telegramWebApp = TelegramWebApp.Instance;\n        if (!telegramWebApp.isInited) {\n            console.error(\"Telegram Web App не инициализирован!\");\n            if (callback) callback(new Error(\"Telegram Web App не инициализирован!\"), false);\n            return;\n        }\n        const dataString = JSON.stringify(data);\n\n        telegramWebApp.cloudStorageSetItem('user_settings_data', dataString, callback);\n    }\n\n    public getUserSettingsData(callback: (error: any, data: UserSettingsData | null) => void): void {\n        const telegramWebApp = TelegramWebApp.Instance;\n        if (!telegramWebApp.isInited) {\n            console.error(\"Telegram Web App не инициализирован!\");\n            callback(new Error(\"Telegram Web App не инициализирован!\"), null);\n            return;\n        }\n\n        telegramWebApp.cloudStorageGetItem('user_settings_data', (error, value) => {\n            if (error) {\n                console.error(\"Ошибка при получении данных пользователя:\", error);\n                callback(error, null);\n            } else if (value) {\n                const data: UserSettingsData = JSON.parse(value);\n                callback(null, data);\n            } else {\n                callback(null, null);\n            }\n        });\n    }\n\n    public updateUserSettingsData(partialData: Partial<UserSettingsData>, callback?: (error: any, success: boolean) => void): void {\n        this.getUserSettingsData((error, data) => {\n            if (error) {\n                if (callback) callback(error, false);\n                return;\n            }\n\n            const updatedData: UserSettingsData = {\n                ...data,\n                ...partialData\n            };\n\n            this.saveUserSettingsData(updatedData, callback);\n        });\n    }\n\n    getGoodUserName() {\n        if (this.isDebug) {\n            return \"Debug A\"\n        }\n\n        if (this.firstname === \"undefined\") {\n            if (this.username === \"undefined\") {\n                return this.defaultName;\n            }\n            return this.username;\n        }\n        return this.firstname;\n    }\n\n    public forceUpdateUserInfo() {\n        this.setUserInfoFromServer();\n    }\n\n    async setUserInfoFromServer() {\n        let webinitdata = \"\";\n        this.firstname = \"FirstName\"\n        this.username = \"username\"\n        if (this.isDebug) {\n            webinitdata = this.initDataForDebug;\n        }\n        else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n\n            webinitdata = tgWebApp.getTelegramInitData();\n\n            const user = tgWebApp.getTelegramUser();\n\n            this.firstname = user.first_name;\n\n            this.username = user.username;\n\n\n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n\n        const communicator = ServerCommunicator.instance;\n\n        communicator.sendGetRequest('get_user', { webinitdata })\n            .then(response => {\n                const userInfo: any = response;\n\n                console.log('Get user response:', response);\n\n                this.currentUserInfo = {\n                    id: userInfo.id,\n                    name: userInfo.username,\n                    photoUrl: userInfo.photo_url,\n                    balance: userInfo.balance,\n                    dateStartMining: userInfo.date_start_mining,\n                    speedId: userInfo.speed_id,\n                    durationId: userInfo.duration_id,\n                    invitedBy: userInfo.invited_by\n                };\n\n                UserDataManager.eventTarget.emit('userDataUpdated');\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting user: \" + error, \"error\")\n            });\n    }\n\n    async setSpeedInfosFromServer() {\n        let webinitdata = \"\";\n        if (this.isDebug) {\n            webinitdata = this.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n    \n        communicator.sendGetRequest('get_all_speeds', { webinitdata })\n            .then(response => {\n                console.log('Get all speeds response:', response);\n    \n                this.speedInfos = response as SpeedInfo[];\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting speeds: \" + error, \"error\")\n            });\n    }\n\n    async setDurationInfosFromServer() {\n        let webinitdata = \"\";\n        if (this.isDebug) {\n            webinitdata = this.initDataForDebug;\n        } else {\n            const tgWebApp = TelegramWebApp.Instance;\n            if (!tgWebApp.isInited) {\n                const successInitTg = await tgWebApp.init();\n                if (!successInitTg) {\n                    return;\n                }\n            }\n    \n            webinitdata = tgWebApp.getTelegramInitData();\n        }\n    \n        const communicator = ServerCommunicator.instance;\n    \n        communicator.sendGetRequest('get_all_durations', { webinitdata })\n            .then(response => {\n                console.log('Get all durations response:', response);\n    \n                this.durationInfos = response as DurationInfo[];\n            })\n            .catch(error => {\n                ToastManager.getInstance().showToast(\"Error with getting durations: \" + error, \"error\");\n            });\n    }\n}\n","import { _decorator, Component, Label, Sprite, ImageAsset, Texture2D, SpriteFrame } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('UserInfoDisplay')\nexport class UserInfoDisplay extends Component {\n    @property(Label)\n    public userInfoLabel: Label | null = null;\n\n    @property(Label)\n    public avatarUrlLabel: Label | null = null;\n\n    @property(Sprite)\n    public userAvatar: Sprite | null = null;\n\n    start() {\n        this.updateUserInfo();\n    }\n\n    private async updateUserInfo() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        const user = tgWebApp.getTelegramUser();\n        if (user) {\n            if (this.userInfoLabel) {\n                this.userInfoLabel.string = `ID: ${user.id}\\nUsername: ${user.username}`;\n            }\n\n            if (this.avatarUrlLabel) {\n                this.avatarUrlLabel.string = `${user.photo_url}`;\n            }\n\n            if (user.photo_url && this.userAvatar) {\n                this.loadAvatar(user.photo_url);\n            }\n        } else {\n            console.error(\"User data is not available.\");\n        }\n    }\n\n    private loadAvatar(url: string) {\n        if (!this.userAvatar) return;\n\n        const imgAsset = new ImageAsset();\n\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = url;\n\n        img.onload = () => {\n            imgAsset.reset(img);\n\n            const texture = new Texture2D();\n            texture.image = imgAsset;\n\n            texture.setFilters(Texture2D.Filter.LINEAR, Texture2D.Filter.LINEAR);\n\n            const spriteFrame = new SpriteFrame();\n            spriteFrame.texture = texture;\n\n            this.userAvatar.type = Sprite.Type.SIMPLE;\n            this.userAvatar.sizeMode = Sprite.SizeMode.RAW;\n            this.userAvatar.spriteFrame = spriteFrame;\n        };\n\n        img.onerror = () => {\n            console.error(\"Failed to load avatar image.\");\n        };\n    }\n}\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UsernameLabel')\nexport class UsernameLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    start() {\n        this.initWithUserData();\n    }\n\n    async initWithUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        \n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getGoodUserName();\n        }\n    }\n    \n    updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getGoodUserName();\n        }\n    }\n}\n\n","import { _decorator } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nimport { UserDataManager, UserSettingsData } from './UserDataManager';\nconst { ccclass } = _decorator;\n\n@ccclass('VibrationManager')\nexport default class VibrationManager {\n    private static vibrationEnabled: boolean = true;\n    private static currentUserData: UserSettingsData = { vibration: false };\n    private static initialized: boolean = false;\n\n    public static async init(): Promise<void> {\n        try {\n            const data = await this.getUserSettingsData();\n            if (data) {\n                this.currentUserData = data;\n                this.vibrationEnabled = data.vibration;\n            } else {\n                this.currentUserData = { vibration: this.vibrationEnabled };\n                await this.saveUserSettingsData(this.currentUserData);\n            }\n        } catch (error) {\n            console.error(\"Ошибка инициализации VibrationManager:\", error);\n        } finally {\n            this.initialized = true;\n        }\n    }\n\n    private static getUserSettingsData(): Promise<UserSettingsData> {\n        return new Promise((resolve, reject) => {\n            UserDataManager.instance.getUserSettingsData((error, data) => {\n                if (error) {\n                    console.error(\"Ошибка при получении данных настроек пользователя:\", error);\n                    reject(error);\n                } else {\n                    console.log(\"Получены данные настроек пользователя:\", data);\n                    resolve(data);\n                }\n            });\n        });\n    }\n\n    private static saveUserSettingsData(data: UserSettingsData): Promise<void> {\n        return new Promise((resolve, reject) => {\n            UserDataManager.instance.saveUserSettingsData(data, (error) => {\n                if (error) {\n                    console.error(\"Ошибка при сохранении данных настроек пользователя:\", error);\n                    reject(error);\n                } else {\n                    console.log(\"Данные настроек пользователя сохранены\");\n                    resolve();\n                }\n            });\n        });\n    }\n\n    private static updateUserSettingsData(data: UserSettingsData): Promise<void> {\n        return new Promise((resolve, reject) => {\n            UserDataManager.instance.updateUserSettingsData(data, (error) => {\n                if (error) {\n                    console.error(\"Ошибка при обновлении данных настроек пользователя:\", error);\n                    reject(error);\n                } else {\n                    console.log(\"Данные настроек пользователя обновлены\");\n                    resolve();\n                }\n            });\n        });\n    }\n\n    private static isVibrationSupported(): boolean {\n        if(UserDataManager.instance.isInited && !UserDataManager.instance.isDebug && TelegramWebApp.Instance != null) return true;\n        return false;\n    }\n\n    public static async toggleVibration(): Promise<void> {\n        if (!this.initialized) {\n            console.error(\"VibrationManager не инициализирован. Вызовите VibrationManager.init() перед использованием.\");\n            return;\n        }\n        try {\n            this.vibrationEnabled = !this.vibrationEnabled;\n            this.currentUserData.vibration = this.vibrationEnabled;\n            await this.updateUserSettingsData(this.currentUserData);\n        } catch (error) {\n            console.error(\"Ошибка при переключении состояния вибрации:\", error);\n        }\n    }\n\n    public static isVibrationEnabled(): boolean {\n        if (!this.initialized) {\n            console.error(\"VibrationManager не инициализирован. Вызовите VibrationManager.init() перед использованием.\");\n            return false;\n        }\n        return this.vibrationEnabled;\n    }\n\n    private static performHapticFeedback(type: string): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticImpact(type);\n        }\n    }\n\n    private static performHapticNotification(type: string): void {\n        if (this.isVibrationSupported() && this.isVibrationEnabled()) {\n            TelegramWebApp.Instance.doHapticNotification(type);\n        }\n    }\n\n    public static light(): void {\n        this.performHapticFeedback(\"light\");\n    }\n\n    public static medium(): void {\n        this.performHapticFeedback(\"medium\");\n    }\n\n    public static heavy(): void {\n        this.performHapticFeedback(\"heavy\");\n    }\n\n    public static rigid(): void {\n        this.performHapticFeedback(\"rigid\");\n    }\n\n    public static soft(): void {\n        this.performHapticFeedback(\"soft\");\n    }\n\n    public static error(): void {\n        this.performHapticNotification(\"error\");\n    }\n\n    public static success(): void {\n        this.performHapticNotification(\"success\");\n    }\n\n    public static warning(): void {\n        this.performHapticNotification(\"warning\");\n    }\n}\n","import { _decorator, Component, Node, EventHandler } from 'cc';\nimport { Switch } from './Switch';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('VibrationSwitchController')\nexport class VibrationSwitchController extends Component {\n\n    @property(Switch)\n    switchComponent: Switch = null;\n\n    async onLoad() {\n        if (!VibrationManager['initialized']) {\n            await VibrationManager.init();\n        }\n\n        this.switchComponent.isOn = VibrationManager.isVibrationEnabled();\n        this.switchComponent.updateVisualState(false);\n\n        const eventHandler = new EventHandler();\n        eventHandler.target = this.node;\n        eventHandler.component = 'VibrationSwitchController';\n        eventHandler.handler = 'onSwitchToggled';\n        eventHandler.customEventData = '';\n\n        this.switchComponent.switchEvents.push(eventHandler);\n    }\n\n    async onSwitchToggled(isOn: boolean) {\n        if (isOn !== VibrationManager.isVibrationEnabled()) {\n            await VibrationManager.toggleVibration();\n        }\n    }\n}"]}