{"version":3,"sources":["../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BalanceLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostsController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/BoostType.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ButtonFeedbacks.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/CopyInviteLink.ts","../file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/file:/Applications/Cocos/Creator/3.8.3/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/FriendItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/FriendsScrollViewer.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingHider.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingScreen.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/LoadingScreenHider.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/MainMiningLabels.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/MiningCollectController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/PopupManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/RotatableUITransform.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ServerCommunicator.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/ShareInviteLink.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SlidePopup.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcaseCounter.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcaseItemsController.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/SuitcasesDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TaskItem.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TasksDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TasksScrollViewer.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/telegram-web.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TestGetLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/TimerLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UserDataManager.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UserInfoDisplay.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/UsernameLabel.ts","../file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/file:/Users/anrew/Documents/GitHub/hh-cocos-rep/ham-hotel-project/assets/Scripts/VibrationManager.ts"],"names":["ccclass","_decorator","property","_dec","_dec2","Label","_descriptor","_applyDecoratedDescriptor","_class2","_Component","BalanceLabel","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_initializerDefineProperty","_assertThisInitialized","_inheritsLoose","_proto","prototype","start","this","initWithUserData","_initWithUserData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","UserDataManager","instance","isInited","Promise","resolve","setTimeout","eventTarget","on","updateMe","myLabel","string","getUserBalance","toFixed","stop","Component","configurable","enumerable","writable","initializer","_class","_RF","pop","BoostsController","_dec3","type","Enum","BoostType","_dec4","_dec5","RichText","_dec6","Color","_dec7","_dec8","_dec9","Node","_dec10","_dec11","_dec12","LoadingHider","BoostItem","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","isButtonActive","onLoad","loader","show","buyButtonNode","EventType","TOUCH_END","buyButtonPressed","colorToHex","color","componentToHex","r","g","b","c","hex","toString","level","currentValue","nextValue","priceForNext","levelLabel","levelPrefix","currentColorHex","currentValueTextColor","nextColorHex","nextValueTextColor","valuesRichText","valuesPostfix","priceLabel","pricePrefix","pricePostfix","buyButtonActivity","hide","updateMeLikeFull","actvivty","getComponent","Sprite","activeButtonColor","unactiveButtonColor","boostController","buyBoostByBoostType","myBoostType","tryingPurchase","purchaseSuccessful","VibrationManager","success","purchaseUnsuccessful","error","Duration","loadDataFromUserData","_loadDataFromUserData","setDurationBoostInfo","setSpeedBoostInfo","curMiningSpeedId","getUserSpeedId","curMiningSpeed","getUserCurrentSpeed","nextMiningSpeedId","getSpeedInfosCount","console","log","speedBoost","nextMiningSpeed","getMiningSpeedById","nextMiningSpeedPrice","getSpeedPriceById","curMiningDurationId","getUserDurationId","curMiningDuration","getUserCurrentDuration","nextMiningDurationId","getDurationInfosCount","durationBoost","nextMiningDuration","getMiningDurationById","nextMiningDurationPrice","getDurationPriceById","boostType","tryBuyNextDuration","Speed","tryBuyNextSpeed","_tryBuyNextDuration","_callee2","userId","response","_context2","getUserId","ServerCommunicator","sendGetRequest","sent","forceUpdateUserInfo","_tryBuyNextSpeed","_callee3","_context3","CCFloat","tooltip","ButtonFeedbacks","originalScale","Vec3","set","node","scale","MOUSE_ENTER","onMouseEnter","MOUSE_LEAVE","onMouseLeave","onClick","useHoverTween","tween","to","hoverDuration","hoverScale","useClickTween","soft","clickDuration","clickScale","clickScaleUp","native","copyTextToClipboard","String","CopyInviteLink","_onClick","tgWebApp","user","urlForCopy","TelegramWebApp","Instance","init","getTelegramUser","baseLinkToShare","id","navigator","clipboard","writeText","t0","DebugViewRuntimeControl","_single","strSingle","strComposite","strMisc","compositeModeToggleList","singleModeToggleList","miscModeToggleList","textComponentList","labelComponentList","textContentList","hideButtonLabel","_currentColorIndex","strColor","WHITE","BLACK","RED","GREEN","BLUE","parent","Canvas","uiTransform","UITransform","halfScreenWidth","width","halfScreenHeight","height","x","y","miscNode","getChildByName","buttonNode","instantiate","name","titleNode","i","newLabel","EnableAllCompositeModeButton","setPosition","setScale","labelComponent","overflow","currentRow","newNode","singleModeToggle","textComponent","getComponentInChildren","Toggle","TOGGLE","toggleSingleMode","Button","CLICK","enableAllCompositeMode","changeColorButton","changeTextColor","HideButton","hideUI","compositeModeToggle","isChecked","toggleLightingWithAlbedo","toggleCSMColoration","toggleCompositeMode","isTextMatched","textUI","textDescription","tempText","findIndex","search","substr","toggle","debugView","director","root","singleMode","enableCompositeMode","lightingWithAlbedo","csmLayerColoration","button","toggleComponent","activeValue","active","update","deltaTime","FriendItem","friendName","friendNameLabel","Prefab","FriendsScrollViewer","_init","referralNames","isArray","every","updateReferralList","showNoReferralsMessage","contentNode","children","removeAllChildren","friendItemPrefab","newFriendItemPrefab","addChild","Mask","myNode","sprite","maskToUse","enabled","shownColor","_this2","initialColor","clone","targetColor","hidenColor","hideDuration","onUpdate","a","disactivateOnHide","ProgressBar","LoadingScreen","isMobileDevice","test","userAgent","loadMainScene","onMobileLabel","preloadScene","onProgress","bind","onComplete","completedCount","totalCount","item","progress","progressBar","progressLabel","Math","floor","loadScene","SlidePopup","LoadingScreenHider","waitForHide","_waitForHide","slidePopup","medium","MainMiningLabels","isMiningActive","endDate","timeDifference","updateBalanceLabel","dt","updateCurrentMinedLabel","onDestroy","off","startDateStr","getUserMiningStartDate","startDate","Date","replace","DurationMs","getTimeDifference","getTime","currentTime","currentMinedLabel","minedAmount","_updateBalanceLabel","balanceLabel","balancePrefix","TimerLabel","MiningCollectController","updateCollectNode","duration","miningSpeedLabel","miningSpeedPostfix","miningTimer","collectMiningNode","onClickCollectMiningNode","isTimerActive","tryCollectMinedToServer","_tryCollectMinedToServer","_updateMe","notReadyForCollectNodeColor","readyForCollectNodeColor","_class3","PopupManager","destroy","addComponent","getInstance","showPopup","index","popups","warn","popupComponent","hidePopup","switchPopup","currentIndex","nextIndex","RotationDirection","RotatableUITransform","_uiTransform","angle","rotationSpeed","direction","currentRotation","eulerAngles","newRotation","z","CLOCKWISE","_instance","_sendGetRequest","endpoint","url","fetch","method","headers","Content-Type","ok","Error","status","json","abrupt","_x","sendPostRequest","_sendPostRequest","_x2","_createClass","key","get","ShareInviteLink","urlForShare","share","PopupState","SlideDirection","state","None","initPosition","isOpenAtStart","Shown","startPos","getStartPosition","hideDirection","Hidden","canvasSize","contentSize","Left","Right","Top","Bottom","Hiding","Showing","showDirection","showDuration","position","easing","_this3","endPos","SuitcaseCounter","initWithSuitcaseCount","_initWithSuitcaseCount","SuitcasesDataManager","getCurrentSuitcaseFilledCount","SuitcaseItemData","SuitcaseItems","_class5","_class4","SuitcaseData","_class8","_class7","Suitcases","_class11","_class10","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_class14","SuitcaseItemsController","_currentMiningItem","_currentUserMiningSuitcaseItemInfo","EventTarget","setCurrentSuitcase","setItemsColors","currentMiningItemSprite","onClickCurrentMiningItemSprite","_onClickCurrentMiningItemSprite","miningItemTimerLabel","tryCollectCurrentMiningItem","_tryCollectCurrentMiningItem","collectMinedItem","_setCurrentSuitcase","_callee4","withForceUpdate","currentSuitcaseIndex","_context4","loadingHiderSuitcase","loadingHiderCurrentItem","suitcases","suitcasesDatas","forEach","value","suitcaseNode","suitcaseId","getCurrentSuitcaseIndex","Number","isInteger","allSuitcasesPackedNode","_setItemsColors","_callee5","allItems","currentUserSuitcaseItems","currentMiningUserItems","_loop","_ret","_iterator","_step","_context6","items","itemDatas","itemSprite","notCollectedColor","itemName","getAllItems","getCurrentUserSuitcaseItems","getCurrentMiningUserSuitcaseItems","suitcaseItemDataName","suitcaseItemInfo","suitcaseUserItemInfo","currentUserMiningItem","_context5","v","find","itemId","collectedColor","updateCurrentMiningItem","spriteFrame","_createForOfIteratorHelperLoose","done","delegateYield","userMiningItem","sizeMode","SizeMode","RAW","originalWidth","originalHeight","nodeTransform","parentTransform","scaleX","scaleY","min","dataStartMiningItem","collectionDuration","_class13","currentAllItems","currentItems","currentMiningItems","currentSuitcases","forceUpdateData","_forceUpdateData","setAllItemsFromServer","setCurrentUserSuitcaseItemsFromServer","setCurrentMiningUserSuitcaseItemsFromServer","setCurrentSuitcasesFromServer","_setAllItemsFromServer","map","price","chance","suitcaseTypeId","emit","_setCurrentUserSuitcaseItemsFromServer","_setCurrentMiningUserSuitcaseItemsFromServer","miningItems","isFinished","_setCurrentSuitcasesFromServer","userSuitcases","isComplete","_getAllItems","_callee6","forceUpdate","_getCurrentUserSuitcaseItems","_callee7","_context7","_getCurrentMiningUserSuitcaseItems","_callee8","_context8","_x3","_getCurrentSuitcaseIndex","_callee9","incompleteSuitcase","_context9","suitcase","_x4","_getCurrentSuitcaseFilledCount","_callee10","filledSuitcases","_context10","filter","_x5","_collectMinedItem","_callee11","_context11","SpriteFrame","TaskItem","myTaskData","task","nameLabel","taskInfo","rewardLabel","reward","iconSprite","otherIcon","subscribeIcon","moneyIcon","friendsIcon","taskType","TaskType","GoTo","Other","Subscribe","MoneyCount","FriendsCount","goButton","buttonIconSprite","userTaskInfo","isCompletedIcon","interactable","isNotCompletedIcon","onTaskButtonClicked","_onTaskButtonClicked","isNowCompleted","TasksDataManager","checkTaskCompleted","taskId","goToCompleteTask","_goToCompleteTask","goOtherComplete","goSubscribeComplete","goMoneyComplete","goFriendsComplete","_goOtherComplete","_goSubscribeComplete","forUrlSliced","link","details","slice","openTelegramLink","currentTasks","currentUserTasks","setAllTasksFromServer","setCurrentUserTasksFromServer","_setAllTasksFromServer","allTasks","mapTaskType","_setCurrentUserTasksFromServer","userTasks","_checkTaskCompleted","taskCompleted","getAllTasks","_getAllTasks","getUserTasks","_getUserTasks","taskTypeString","TasksScrollViewer","userTasksInfos","allTasksInfos","taskInfoMap","taskDataArray","Map","updateTasksList","tasks","taskItemPrefab","tgLoadPromise","reject","sys","platform","Platform","MOBILE_BROWSER","DESKTOP_BROWSER","script","document","createElement","src","async","onload","intervalId","setInterval","window","Telegram","WebApp","clearInterval","onerror","head","appendChild","_tgWebAppJS","expand","openLink","text","shareUrl","URLSearchParams","shareToStory","media_url","shareText","widget_link_url","widget_link_name","widget_link","isExpanded","getTelegramWebApp","getTelegramWebAppInitData","initDataUnsafe","getTelegramInitData","initData","doHapticImpact","style","HapticFeedback","impactOccurred","doHapticNotification","notificationOccurred","openInvoice","callback","alert","message","showAlert","TestGetLabel","getMetod","_getMetod","serverCommunicator","label","dateString","updateLabel","timeLeft","formatTimeLeft","seconds","minutes","hours","padZero","num","currentUserInfo","speedInfos","durationInfos","isTimeSyncWithServer","firstname","username","defaultName","syncTimeWithServer","setSpeedInfosFromServer","setDurationInfosFromServer","getUserName","getUserPhotoUrl","photoUrl","balance","dateStartMining","speedId","durationId","getUserInvitedBy","invitedBy","speedInfo","info","speed","durationInfo","_syncTimeWithServer","serverTime","getGoodUserName","isDebug","setUserInfoFromServer","_setUserInfoFromServer","userInfoItems","_response","_userInfoItems","debugId","debugName","debugStartParams","photo_url","date_start_mining","speed_id","duration_id","invited_by","first_name","start_param","_setSpeedInfosFromServer","allSpeeds","_setDurationInfosFromServer","allDurations","UserInfoDisplay","updateUserInfo","_updateUserInfo","userInfoLabel","avatarUrlLabel","userAvatar","loadAvatar","imgAsset","ImageAsset","img","Image","crossOrigin","reset","texture","Texture2D","image","setFilters","Filter","LINEAR","Type","SIMPLE","UsernameLabel","isVibrationSupported","light","heavy","rigid","warning"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BalanceLabel')\nexport class BalanceLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    start() {\n        this.initWithUserData();\n    }\n\n    async initWithUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        \n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getUserBalance().toFixed(2);\n        }\n    }\n    \n    updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getUserBalance().toFixed(2);\n        }\n    }\n}\n\n","import { _decorator, Color, Component, Enum, Label, Node, RichText, Sprite } from 'cc';\nimport { LoadingHider } from './LoadingHider';\nimport { BoostsController } from './BoostsController';\nimport { BoostType } from './BoostType';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BoostItem')\nexport class BoostItem extends Component {\n    @property(BoostsController)\n    boostController: BoostsController = null\n\n    @property({ type: Enum(BoostType) })\n    myBoostType: BoostType = BoostType.Duration;\n\n    @property(Label)\n    levelLabel: Label = null;\n\n    @property\n    levelPrefix: string = \"Level \";\n\n    @property(RichText)\n    valuesRichText: RichText = null;\n\n    @property\n    valuesPostfix: string = \"h\";\n\n    @property(Color)\n    currentValueTextColor: Color = new Color(255, 255, 255);\n\n    @property(Color)\n    nextValueTextColor: Color = new Color(255, 255, 255);\n\n    @property(Label)\n    priceLabel: Label = null;\n\n    @property\n    pricePrefix: string = \"Price: \";\n\n    @property\n    pricePostfix: string = \" $SEM\";\n\n    @property(Node)\n    buyButtonNode: Node = null;\n\n    @property(Color)\n    activeButtonColor: Color = new Color(255, 255, 255);\n\n    @property(Color)\n    unactiveButtonColor: Color = new Color(255, 255, 255);\n\n    @property(LoadingHider)\n    loader: LoadingHider = null;\n\n    isButtonActive = false;\n\n    protected onLoad(): void {\n        if(this.loader){\n            this.loader.show();\n        }\n\n        if(this.buyButtonNode){\n            this.buyButtonNode.on(Node.EventType.TOUCH_END, this.buyButtonPressed, this);\n        }\n    }\n\n    private colorToHex(color: Color): string {\n        const r = this.componentToHex(color.r);\n        const g = this.componentToHex(color.g);\n        const b = this.componentToHex(color.b);\n        return `${r}${g}${b}`;\n    }\n\n    private componentToHex(c: number): string {\n        const hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    updateMe(level: number, currentValue: number, nextValue: number, priceForNext: number) {\n        this.levelLabel.string = this.levelPrefix + level.toString();\n\n        const currentColorHex = this.colorToHex(this.currentValueTextColor);\n        const nextColorHex = this.colorToHex(this.nextValueTextColor);\n\n        this.valuesRichText.string = `<color=#${currentColorHex}>${currentValue}${this.valuesPostfix} > </color><color=#${nextColorHex}>${nextValue}${this.valuesPostfix}</color>`;\n\n        this.priceLabel.string = this.pricePrefix + priceForNext.toString() + this.pricePostfix;\n        this.buyButtonActivity(true);\n        if(this.loader){\n            this.loader.hide();\n        }\n    }\n\n    updateMeLikeFull(level: number, currentValue: number) {\n        this.levelLabel.string = this.levelPrefix + level.toString();\n\n        const currentColorHex = this.colorToHex(this.currentValueTextColor);\n\n        this.valuesRichText.string = `<color=#${currentColorHex}>${currentValue}${this.valuesPostfix}</color>`;\n\n        this.priceLabel.string = \"Maximum boost!\";\n        this.buyButtonActivity(false);\n        if(this.loader){\n            this.loader.hide();\n        }\n    }\n\n    buyButtonActivity(actvivty: boolean){\n        if(this.buyButtonNode){\n            if(actvivty){\n                this.buyButtonNode.getComponent(Sprite).color = this.activeButtonColor;\n                this.isButtonActive = true;\n            }\n            else{\n                this.buyButtonNode.getComponent(Sprite).color = this.unactiveButtonColor;\n                this.isButtonActive = false;\n            }\n        }\n    }\n\n    buyButtonPressed(){\n        if(this.isButtonActive){\n            this.buyButtonActivity(false);\n            this.boostController.buyBoostByBoostType(this.myBoostType);\n        }\n    }\n\n    tryingPurchase(){\n        if(this.loader){\n            this.loader.show();\n        }\n    }\n\n    purchaseSuccessful(){\n        VibrationManager.success();\n    }\n\n    purchaseUnsuccessful(){\n        VibrationManager.error();\n    }\n}","import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { BoostItem } from './BoostItem';\nimport { BoostType } from './BoostType';\nimport { ServerCommunicator } from './ServerCommunicator';\nconst { ccclass, property } = _decorator;\n\n@ccclass('BoostsController')\nexport class BoostsController extends Component {\n    @property(BoostItem)\n    durationBoost: BoostItem = null;\n\n    @property(BoostItem)\n    speedBoost: BoostItem = null;\n\n    protected start(): void {\n        this.loadDataFromUserData();\n        UserDataManager.eventTarget.on('userDataUpdated', this.loadDataFromUserData, this);\n    }\n\n    async loadDataFromUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.setDurationBoostInfo();\n        this.setSpeedBoostInfo();\n    }\n\n    setSpeedBoostInfo(){\n        const curMiningSpeedId = UserDataManager.instance.getUserSpeedId();\n        const curMiningSpeed = UserDataManager.instance.getUserCurrentSpeed();\n        const nextMiningSpeedId =  curMiningSpeedId + 1;\n\n        if(nextMiningSpeedId > UserDataManager.instance.getSpeedInfosCount()){\n            console.log(\"NO MORE MINING SPEEDS!\")\n            this.speedBoost.updateMeLikeFull(curMiningSpeedId, curMiningSpeed);\n            return;\n        }\n\n        const nextMiningSpeed = UserDataManager.instance.getMiningSpeedById(nextMiningSpeedId);\n        const nextMiningSpeedPrice = UserDataManager.instance.getSpeedPriceById(nextMiningSpeedId);\n\n        this.speedBoost.updateMe(curMiningSpeedId, curMiningSpeed, nextMiningSpeed, nextMiningSpeedPrice);\n    }\n\n    setDurationBoostInfo(){\n        const curMiningDurationId = UserDataManager.instance.getUserDurationId();\n        const curMiningDuration = UserDataManager.instance.getUserCurrentDuration();\n        const nextMiningDurationId =  curMiningDurationId + 1;\n\n        if(nextMiningDurationId > UserDataManager.instance.getDurationInfosCount()){\n            console.log(\"NO MORE MINING DURATIONS!\")\n            this.durationBoost.updateMeLikeFull(curMiningDurationId, curMiningDuration);\n            return;\n        }\n        \n        const nextMiningDuration = UserDataManager.instance.getMiningDurationById(nextMiningDurationId);\n        const nextMiningDurationPrice = UserDataManager.instance.getDurationPriceById(nextMiningDurationId);\n\n        this.durationBoost.updateMe(curMiningDurationId, curMiningDuration, nextMiningDuration, nextMiningDurationPrice);\n    }\n\n    buyBoostByBoostType(boostType: BoostType){\n        if(boostType == BoostType.Duration){\n            this.tryBuyNextDuration();\n        }\n        if(boostType == BoostType.Speed){\n            this.tryBuyNextSpeed();\n        }\n    }\n\n    async tryBuyNextDuration(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.durationBoost.tryingPurchase();\n\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('boost_duration?user_id='+userId);\n        \n        const succBuy: any = response[0]\n\n        if(succBuy == true){\n            this.durationBoost.purchaseSuccessful();\n        }\n        else{\n            this.durationBoost.purchaseUnsuccessful();\n        }\n\n        UserDataManager.instance.forceUpdateUserInfo();\n    }\n\n    async tryBuyNextSpeed(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.speedBoost.tryingPurchase();\n\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('boost_speed?user_id='+userId);\n\n        const succBuy: any = response[0]\n\n        if(succBuy == true){\n            this.speedBoost.purchaseSuccessful();\n        }\n        else{\n            this.speedBoost.purchaseUnsuccessful();\n        }\n\n        UserDataManager.instance.forceUpdateUserInfo();\n    }\n}\n\n","export enum BoostType {\n    Duration,\n    Speed,\n}","import { _decorator, Component, tween, Vec3, Node, CCFloat } from 'cc';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ButtonFeedbacks')\nexport class ButtonFeedbacks extends Component {\n    @property\n    useHoverTween = true;\n\n    @property\n    useClickTween = true;\n\n    @property({ type: CCFloat, tooltip: \"Hover reduction time (in seconds)\" })\n    hoverDuration: number = 0.2;\n\n    @property({tooltip: \"How many times to reduce when hovering\" }) \n    hoverScale: Vec3 = new Vec3(0.95, 0.95, 0.95);\n\n    @property({ type: CCFloat, tooltip: \"Time to decrease when pressed (in seconds)\" })\n    clickDuration: number = 0.1;\n\n    @property({tooltip: \"How many times to reduce when pressed\" })\n    clickScale: Vec3 = new Vec3(0.9, 0.9, 0.9);\n\n    @property({tooltip: \"How much to increase after clicking\" }) \n    clickScaleUp: Vec3 = new Vec3(1.1, 1.1, 1.1);\n\n    private originalScale: Vec3 = new Vec3();\n\n    start() {\n        this.originalScale.set(this.node.scale);\n\n        this.node.on(Node.EventType.MOUSE_ENTER, this.onMouseEnter, this);\n        this.node.on(Node.EventType.MOUSE_LEAVE, this.onMouseLeave, this);\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    onMouseEnter() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.hoverScale })\n            .start();\n    }\n\n    onMouseLeave() {\n        if(!this.useHoverTween) return;\n        tween(this.node)\n            .to(this.hoverDuration, { scale: this.originalScale })\n            .start();\n    }\n\n    onClick() {\n        if(!this.useClickTween) return;\n        VibrationManager.soft();\n        tween(this.node)\n            .to(this.clickDuration, { scale: this.clickScale })\n            .to(this.clickDuration/2, { scale: this.clickScaleUp })\n            .to(this.clickDuration, { scale: this.originalScale })\n            .start();\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\nimport { native } from \"cc\"; \nconst { copyTextToClipboard } = native;\n\n@ccclass('CopyInviteLink')\nexport class CopyInviteLink extends Component {\n\n    @property(String)\n    public baseLinkToShare: String = 'https://t.me/hamsmining_bot/start?startapp=';\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    async onClick() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n    \n        const user = tgWebApp.getTelegramUser();\n        const urlForCopy = this.baseLinkToShare + user.id.toString();\n    \n        try {\n            await navigator.clipboard.writeText(urlForCopy);\n        } catch (err) {\n            console.error('Cant copy text with: ', err);\n        }\n    }    \n}\n\n","import { Color, Canvas, UITransform, instantiate, math, Toggle, TextureCube, _decorator, Component, Button, labelAssembler, game, director, Node, Scene, renderer, CameraComponent, Label, ForwardPipeline, RichText } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('internal.DebugViewRuntimeControl')\nexport class DebugViewRuntimeControl extends Component {\n    @property(Node)\n    compositeModeToggle: Node | null = null;\n    @property(Node)\n    singleModeToggle: Node | null = null;\n    @property(Node)\n    EnableAllCompositeModeButton: Node | null = null;\n\t_single: number = 0;\n\n    private strSingle: string[] = [\n        'No Single Debug',\n        'Vertex Color',\n        'Vertex Normal',\n        'Vertex Tangent',\n        'World Position',\n        'Vertex Mirror',\n        'Face Side',\n        'UV0',\n        'UV1',\n        'UV Lightmap',\n        'Project Depth',\n        'Linear Depth',\n\n        'Fragment Normal',\n        'Fragment Tangent',\n        'Fragment Binormal',\n        'Base Color',\n        'Diffuse Color',\n        'Specular Color',\n        'Transparency',\n        'Metallic',\n        'Roughness',\n        'Specular Intensity',\n        'IOR',\n\n        'Direct Diffuse',\n        'Direct Specular',\n        'Direct All',\n        'Env Diffuse',\n        'Env Specular',\n        'Env All',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Fresnel',\n        'Direct Transmit Diffuse',\n        'Direct Transmit Specular',\n        'Env Transmit Diffuse',\n        'Env Transmit Specular',\n        'Transmit All',\n        'Direct Internal Specular',\n        'Env Internal Specular',\n        'Internal All',\n\n        'Fog',\n    ];\n    private strComposite: string[] = [\n        'Direct Diffuse',\n        'Direct Specular',\n        'Env Diffuse',\n        'Env Specular',\n        'Emissive',\n        'Light Map',\n        'Shadow',\n        'AO',\n\n        'Normal Map',\n        'Fog',\n\n        'Tone Mapping',\n        'Gamma Correction',\n\n        'Fresnel',\n        'Transmit Diffuse',\n        'Transmit Specular',\n        'Internal Specular',\n        'TT',\n    ];\n    private strMisc: string[] = [\n        'CSM Layer Coloration',\n        'Lighting With Albedo',\n    ];\n\n    private compositeModeToggleList: Node[] = [];\n    private singleModeToggleList: Node[] = [];\n    private miscModeToggleList: Node[] = [];\n    private textComponentList: RichText[] = [];\n    private labelComponentList: Label[] = [];\n    private textContentList: string[] = [];\n    private hideButtonLabel: Label;\n    start() {\n        // get canvas resolution\n        const canvas = this.node.parent.getComponent(Canvas);\n        if (!canvas) {\n            console.error('debug-view-runtime-control should be child of Canvas');\n            return;\n        }\n\n        const uiTransform = this.node.parent.getComponent(UITransform);\n        const halfScreenWidth = uiTransform.width * 0.5;\n        const halfScreenHeight = uiTransform.height * 0.5;\n\n        let x = -halfScreenWidth + halfScreenWidth * 0.1, y = halfScreenHeight - halfScreenHeight * 0.1;\n        const width = 200, height = 20;\n\n        // new nodes\n        const miscNode = this.node.getChildByName('MiscMode');\n        const buttonNode = instantiate(miscNode);\n        buttonNode.parent = this.node;\n        buttonNode.name = 'Buttons';\n        const titleNode = instantiate(miscNode);\n        titleNode.parent = this.node;\n        titleNode.name = 'Titles';\n\n        // title\n        for (let i = 0; i < 2; i++) {\n            const newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));\n            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);\n            newLabel.setScale(0.75, 0.75, 0.75);\n            newLabel.parent = titleNode;\n            const labelComponent = newLabel.getComponent(Label);\n            labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';\n            labelComponent.color = Color.WHITE;\n            labelComponent.overflow = 0;\n            this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        }\n\n        y -= height;\n        // single\n        let currentRow = 0;\n        for (let i = 0; i < this.strSingle.length; i++, currentRow++) {\n            if (i === this.strSingle.length >> 1) {\n                x += width;\n                currentRow = 0;\n            }\n            const newNode = i ? instantiate(this.singleModeToggle) : this.singleModeToggle;\n            newNode.setPosition(x, y - height * currentRow, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.singleModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strSingle[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);\n\n            this.singleModeToggleList[i] = newNode;\n        }\n\n        x += width;\n        // buttons\n        this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);\n        this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);\n        this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);\n        this.EnableAllCompositeModeButton.parent = buttonNode;\n        let labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const changeColorButton = instantiate(this.EnableAllCompositeModeButton);\n        changeColorButton.setPosition(x + 90, y, 0.0);\n        changeColorButton.setScale(0.5, 0.5, 0.5);\n        changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);\n        changeColorButton.parent = buttonNode;\n        labelComponent = changeColorButton.getComponentInChildren(Label);\n        labelComponent.string = 'TextColor';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n\n        const HideButton = instantiate(this.EnableAllCompositeModeButton);\n        HideButton.setPosition(x + 200, y, 0.0);\n        HideButton.setScale(0.5, 0.5, 0.5);\n        HideButton.on(Button.EventType.CLICK, this.hideUI, this);\n        HideButton.parent = this.node.parent;\n        labelComponent = HideButton.getComponentInChildren(Label);\n        labelComponent.string = 'Hide UI';\n        this.labelComponentList[this.labelComponentList.length] = labelComponent;\n        this.hideButtonLabel = labelComponent;\n\n        // misc\n        y -= 40;\n        for (let i = 0; i < this.strMisc.length; i++) {\n            const newNode = instantiate(this.compositeModeToggle);\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = miscNode;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strMisc[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            const toggleComponent = newNode.getComponent(Toggle);\n            toggleComponent.isChecked = i ? true : false;\n            newNode.on(Toggle.EventType.TOGGLE, i ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);\n            this.miscModeToggleList[i] = newNode;\n        }\n\n        // composite\n        y -= 150;\n        for (let i = 0; i < this.strComposite.length; i++) {\n            const newNode = i ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;\n            newNode.setPosition(x, y - height * i, 0.0);\n            newNode.setScale(0.5, 0.5, 0.5);\n            newNode.parent = this.compositeModeToggle.parent;\n\n            const textComponent = newNode.getComponentInChildren(RichText);\n            textComponent.string = this.strComposite[i];\n            this.textComponentList[this.textComponentList.length] = textComponent;\n            this.textContentList[this.textContentList.length] = textComponent.string;\n\n            newNode.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);\n\n            this.compositeModeToggleList[i] = newNode;\n        }\n    }\n\n    isTextMatched(textUI, textDescription) : boolean {\n        let tempText = new String(textUI);\n        const findIndex = tempText.search('>');\n        if (findIndex === -1) {\n            return textUI === textDescription;\n        } else {\n            tempText = tempText.substr(findIndex + 1);\n            tempText = tempText.substr(0, tempText.search('<'));\n            return tempText === textDescription;\n        }\n    }\n    toggleSingleMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strSingle.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {\n                debugView.singleMode = i;\n            }\n        }\n    }\n    toggleCompositeMode(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        const textComponent = toggle.getComponentInChildren(RichText);\n        for (let i = 0; i < this.strComposite.length; i++) {\n            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {\n                debugView.enableCompositeMode(i, toggle.isChecked);\n            }\n        }\n    }\n    toggleLightingWithAlbedo(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.lightingWithAlbedo = toggle.isChecked;\n    }\n    toggleCSMColoration(toggle: Toggle) {\n        const debugView = director.root!.debugView;\n        debugView.csmLayerColoration = toggle.isChecked;\n    }\n    enableAllCompositeMode(button: Button) {\n        const debugView = director.root!.debugView;\n        debugView.enableAllCompositeMode(true);\n        for (let i = 0; i < this.compositeModeToggleList.length; i++) {\n            const toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);\n            toggleComponent.isChecked = true;\n        }\n\n        let toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);\n        toggleComponent.isChecked = false;\n        debugView.csmLayerColoration = false;\n        toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);\n        toggleComponent.isChecked = true;\n        debugView.lightingWithAlbedo = true;\n    }\n    hideUI(button: Button) {\n        const titleNode = this.node.getChildByName('Titles');\n        const activeValue = !titleNode.active;\n        this.singleModeToggleList[0].parent.active = activeValue;\n        this.miscModeToggleList[0].parent.active = activeValue;\n        this.compositeModeToggleList[0].parent.active = activeValue;\n        this.EnableAllCompositeModeButton.parent.active = activeValue;\n        titleNode.active = activeValue;\n        this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';\n    }\n\n    private _currentColorIndex = 0;\n    private strColor: string[] = [\n        '<color=#ffffff>',\n        '<color=#000000>',\n        '<color=#ff0000>',\n        '<color=#00ff00>',\n        '<color=#0000ff>',\n    ];\n    private color: Color[] = [\n        Color.WHITE,\n        Color.BLACK,\n        Color.RED,\n        Color.GREEN,\n        Color.BLUE,\n    ];\n    changeTextColor(button: Button) {\n        this._currentColorIndex++;\n        if (this._currentColorIndex >= this.strColor.length) {\n            this._currentColorIndex = 0;\n        }\n        for (let i = 0; i < this.textComponentList.length; i++) {\n            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';\n        }\n        for (let i = 0; i < this.labelComponentList.length; i++) {\n            this.labelComponentList[i].color = this.color[this._currentColorIndex];\n        }\n    }\n\n    onLoad() {\n    }\n    update(deltaTime: number) {\n    }\n}\n","import { _decorator, Component, Label, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FriendItem')\nexport class FriendItem extends Component {\n\n    @property(Label)\n    friendNameLabel: Label | null = null;\n\n    init(friendName: string){\n        this.friendNameLabel.string = friendName;\n    }\n}\n\n","import { _decorator, CCInteger, Component, instantiate, Node, Prefab } from 'cc';\nimport { FriendItem } from './FriendItem';\nimport { UserDataManager } from './UserDataManager';\nimport { ServerCommunicator } from './ServerCommunicator';\nconst { ccclass, property } = _decorator;\n\n@ccclass('FriendsScrollViewer')\nexport class FriendsScrollViewer extends Component {\n    @property(Prefab)\n    friendItemPrefab: Prefab = null;\n\n    @property(Node)\n    contentNode: Node = null;\n\n    start() {\n        this.init();\n    }\n\n    async init() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const userId = UserDataManager.instance.getUserId();\n\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_referrals_names?user_id=' + userId);\n            \n            const referralNames: string[] = response;\n\n            if (Array.isArray(referralNames) && referralNames.every(name => typeof name === 'string')) {\n                if (referralNames.length > 0) {\n                    this.updateReferralList(referralNames);\n                } else {\n                    this.showNoReferralsMessage();\n                }\n            } else {\n                console.error('ERROR IN GETTING FRIENDS FORMAT.');\n            }\n        } catch (error) {\n            console.error('ERROR IN GETTING FRIENDS:', error);\n        }   \n    }\n\n    updateReferralList(referralNames: string[]){\n        if(this.contentNode.children.length < referralNames.length){\n            if (this.contentNode.children.length > 0) {\n                this.contentNode.removeAllChildren();\n            }\n        }\n\n        if(this.friendItemPrefab && this.contentNode){\n            for (let i = 0; i < referralNames.length; i++) {\n                const newFriendItemPrefab = instantiate(this.friendItemPrefab);\n                this.contentNode.addChild(newFriendItemPrefab);\n                newFriendItemPrefab.getComponent(FriendItem).init(referralNames[i]);\n            }\n        }\n    }\n\n    showNoReferralsMessage(){\n        console.log('NO FRIENDS :C');\n    }\n}\n\n","import { _decorator, color, Color, Component, EventHandler, Mask, Node, Sprite, tween } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingHider')\nexport class LoadingHider extends Component {\n\n    @property(Node)\n    myNode: Node = null;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    disactivateOnHide: boolean = false;\n\n    @property({ type: Color })\n    shownColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    hidenColor: Color = new Color(255, 255, 255, 0);\n\n    @property(Mask)\n    maskToUse: Mask = null;\n    \n\n    show() {\n        if(this.myNode){\n            this.myNode!.active = true;\n            const sprite = this.myNode.getComponent(Sprite);\n            if (!sprite) return;\n\n            if(this.maskToUse){\n                this.maskToUse.enabled = true;\n            }\n\n            sprite.color = this.shownColor;\n        }\n    }\n\n    hide(){\n        if(this.myNode){\n            const sprite = this.myNode.getComponent(Sprite);\n            if (!sprite) return;\n\n            if(this.maskToUse){\n                this.maskToUse.enabled = false;\n            }\n\n            const initialColor = sprite.color.clone();\n            const targetColor = this.hidenColor;\n\n            tween(sprite)\n                .to(this.hideDuration, { color: targetColor }, {\n                    onUpdate: () => {\n                        sprite.color = new Color(initialColor.r, initialColor.g, initialColor.b, sprite.color.a);\n                    }\n                })\n                .call(() => {\n                    if(this.disactivateOnHide){\n                        this.myNode!.active = false;\n                    }\n                })\n                .start();\n        }\n    }\n}\n\n","import { _decorator, Component, director, Label, ProgressBar } from \"cc\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass\nexport default class LoadingScreen extends Component {\n    @property(ProgressBar)\n    progressBar: ProgressBar = null;\n\n    @property(Label)\n    progressLabel: Label = null;\n\n    @property(Label)\n    onMobileLabel: Label = null;\n\n    isMobileDevice(): boolean {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    onLoad() {\n        if(this.isMobileDevice()){\n            this.loadMainScene();\n        }else{\n            this.onMobileLabel.string = \"Sorry, it only works on mobile devices!\"\n        }\n    }\n\n    loadMainScene() {\n        director.preloadScene(\"MainScene\", this.onProgress.bind(this), this.onComplete.bind(this));\n    }\n\n    onProgress(completedCount: number, totalCount: number, item: any) {\n        const progress = completedCount / totalCount;\n        this.progressBar.progress = progress;\n        this.progressLabel.string = Math.floor(progress * 100) + \"%\";\n    }\n\n    onComplete() {\n        director.loadScene(\"MainScene\");\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { SlidePopup } from './SlidePopup';\nimport VibrationManager from './VibrationManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('LoadingScreenHider')\nexport class LoadingScreenHider extends Component {\n\n    @property(SlidePopup)\n    slidePopup: SlidePopup = null;\n\n    start() {\n        this.waitForHide();\n    }\n\n    async waitForHide(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        this.hide();\n    }\n\n    hide(){\n        if(this.slidePopup){\n            this.slidePopup.hide();\n            VibrationManager.medium();\n        }\n    }\n}\n\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MainMiningLabels')\nexport class MainMiningLabels extends Component {\n    @property(Label)\n    balanceLabel: Label = null;\n\n    @property\n    balancePrefix: string = 'Balance ($SEM): ';\n\n    @property(Label)\n    currentMinedLabel: Label = null;\n\n    isMiningActive: boolean = false;\n    \n    endDate: Date = null;\n\n    timeDifference: number = 0;\n\n    protected start(): void {\n        this.updateBalanceLabel();\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateBalanceLabel, this);\n    }\n\n    protected update(dt: number): void {\n        if(UserDataManager.instance.isInited){\n            this.updateCurrentMinedLabel();\n        } \n    }\n\n    onDestroy() {\n        UserDataManager.eventTarget.off('userDataUpdated', this.updateBalanceLabel, this);\n    }\n\n    updateCurrentMinedLabel() {\n        const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n\n        if(!startDateStr || startDateStr == \"null\"){\n            this.currentMinedLabel.string = \"00.00\";\n            return;\n        }\n        const startDate = new Date(startDateStr.replace(/-/g, \"/\"));\n\n        if(!startDate){\n            this.currentMinedLabel.string = \"00.00\";\n            return;\n        }\n        const DurationMs = UserDataManager.instance.getUserCurrentDuration() * 60 * 60 * 1000;\n    \n        this.timeDifference = UserDataManager.instance.getTimeDifference();\n        if (!this.timeDifference) {\n            console.error(\"can't get sync time from userDataManager\");\n            return;\n        }\n    \n        this.endDate = new Date(startDate.getTime() + DurationMs);\n    \n        const currentTime = new Date(new Date().getTime() + this.timeDifference);\n        const timeLeft = this.endDate.getTime() - currentTime.getTime();\n\n        if (timeLeft <= 0) {\n            this.currentMinedLabel.string = (\n                UserDataManager.instance.getUserCurrentSpeed() * \n                UserDataManager.instance.getUserCurrentDuration()\n            ).toFixed(4);\n            this.isMiningActive = false;\n        } else {\n            const timePassedMs = currentTime.getTime() - startDate.getTime();\n            const timePassedHours = timePassedMs / (1000 * 60 * 60);\n            const minedAmount = timePassedHours * UserDataManager.instance.getUserCurrentSpeed();\n    \n            this.currentMinedLabel.string = minedAmount.toFixed(4);\n            this.isMiningActive = true;\n        }\n    }\n\n    async updateBalanceLabel() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        this.balanceLabel.string = this.balancePrefix + UserDataManager.instance.getUserBalance().toFixed(2);\n    }\n}\n\n","import { _decorator, Button, Color, Component, Label, Node, Sprite } from 'cc';\nimport { TimerLabel } from './TimerLabel';\nimport { UserDataManager } from './UserDataManager';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { ButtonFeedbacks } from './ButtonFeedbacks';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MiningCollectController')\nexport class MiningCollectController extends Component {\n    @property(TimerLabel)\n    miningTimer: TimerLabel\n\n    @property(Label)\n    miningSpeedLabel: Label = null;\n\n    @property(Node)\n    collectMiningNode: Node = null;\n\n    @property\n    miningSpeedPostfix: String = ' sem/h'\n\n    @property({ type: Color })\n    readyForCollectNodeColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    notReadyForCollectNodeColor: Color = new Color(255, 255, 255);\n\n    onDestroy() {\n        UserDataManager.eventTarget.off('userDataUpdated', this.updateMe, this);\n    }\n    start() {\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        this.init();\n    }\n\n    protected update(dt: number): void {\n        if(UserDataManager.instance.isInited){\n            this.updateCollectNode();\n        }\n    }\n\n    async init(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        if(this.miningSpeedLabel){\n            this.miningSpeedLabel.string = UserDataManager.instance.getUserCurrentSpeed().toString() + this.miningSpeedPostfix;\n        }\n\n        if(this.miningTimer){\n            const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n            if(startDateStr && startDateStr != \"null\"){\n                const duration = UserDataManager.instance.getUserCurrentDuration();\n\n                this.miningTimer.init(startDateStr, duration);\n            }  \n        }\n\n        if(this.collectMiningNode){\n            this.collectMiningNode.on(Node.EventType.TOUCH_END, this.onClickCollectMiningNode, this);\n        }\n        \n    }\n\n    onClickCollectMiningNode(){\n        if(!this.miningTimer.isTimerActive){\n            this.tryCollectMinedToServer();\n        }\n    }\n\n    async tryCollectMinedToServer(){\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('collect_mining?user_id='+userId);\n\n        const isCollected: boolean = response;\n\n        if(isCollected){\n            UserDataManager.instance.forceUpdateUserInfo();\n        }\n        else{\n            console.log('cant collect mined sem!')\n        }\n    }\n\n    async updateMe() {\n        console.log(\"TRYING UPDATE ME!\");\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        if(this.miningSpeedLabel){\n            this.miningSpeedLabel.string = UserDataManager.instance.getUserCurrentSpeed().toString() + this.miningSpeedPostfix;\n        }\n\n        if(this.miningTimer){\n            const startDateStr = UserDataManager.instance.getUserMiningStartDate();\n            if(startDateStr && startDateStr != \"null\"){\n                const duration = UserDataManager.instance.getUserCurrentDuration();\n\n                this.miningTimer.init(startDateStr, duration);\n            }  \n        }\n    }\n\n    updateCollectNode() {\n        if(this.collectMiningNode){\n            if(this.miningTimer.isTimerActive){\n                this.collectMiningNode.getComponent(Sprite).color = this.notReadyForCollectNodeColor;\n                this.collectMiningNode.getComponent(ButtonFeedbacks).useClickTween = false;\n            }else{\n                this.collectMiningNode.getComponent(Sprite).color = this.readyForCollectNodeColor;\n                this.collectMiningNode.getComponent(ButtonFeedbacks).useClickTween = true;\n            }\n        }\n    }\n}\n\n","import { _decorator, Component, Node, UITransform } from 'cc';\nimport { SlidePopup } from './SlidePopup';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PopupManager')\nexport class PopupManager extends Component {\n    private static instance: PopupManager;\n\n    @property([Node])\n    popups: Node[] = [];\n\n    onLoad() {\n        if (PopupManager.instance) {\n            this.destroy();\n            return;\n        }\n        PopupManager.instance = this;\n        this.node.addComponent(UITransform);\n    }\n\n    public static getInstance(): PopupManager {\n        return PopupManager.instance;\n    }\n\n    showPopup(index: number) {\n        if (index < 0 || index >= this.popups.length) {\n            console.warn('Popup index out of bounds');\n            return;\n        }\n\n        const popupComponent = this.popups[index].getComponent(SlidePopup);\n        if (popupComponent) {\n            popupComponent.show();\n        } else {\n            console.warn('SlidePopup component not found on node:', this.popups[index].name);\n        }\n    }\n\n    hidePopup(index: number) {\n        if (index < 0 || index >= this.popups.length) {\n            console.warn('Popup index out of bounds');\n            return;\n        }\n\n        const popupComponent = this.popups[index].getComponent(SlidePopup);\n        if (popupComponent) {\n            popupComponent.hide();\n        } else {\n            console.warn('SlidePopup component not found on node:', this.popups[index].name);\n        }\n    }\n\n    switchPopup(currentIndex: number, nextIndex: number) {\n        this.hidePopup(currentIndex);\n        this.showPopup(nextIndex);\n    }\n}\n","import { _decorator, Component, Enum, UITransform, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum RotationDirection {\n    CLOCKWISE = 1,\n    COUNTERCLOCKWISE = -1\n}\n\n@ccclass('RotateUITransform')\nexport class RotatableUITransform extends Component {\n\n    @property({ type: Enum(RotationDirection), tooltip: \"Pick side for rotating\" })\n    direction: RotationDirection = RotationDirection.CLOCKWISE;\n\n    @property({ tooltip: \"Speed of rotating\" })\n    rotationSpeed: number = 100;\n\n    private _uiTransform: UITransform | null = null;\n\n    start() {\n        this._uiTransform = this.node.getComponent(UITransform);\n    }\n\n    update(deltaTime: number) {\n        if (this._uiTransform) {\n            const angle = this.rotationSpeed * deltaTime * this.direction;\n            const currentRotation = this.node.eulerAngles;\n            const newRotation = new Vec3(currentRotation.x, currentRotation.y, currentRotation.z + angle);\n            this.node.eulerAngles = newRotation;\n        }\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ServerCommunicator')\nexport class ServerCommunicator extends Component {\n    private static _instance: ServerCommunicator;\n\n    public static get instance(): ServerCommunicator {\n        if (!this._instance) {\n            console.error(\"ServerCommunicator instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    onLoad() {\n        if (ServerCommunicator._instance) {\n            console.warn(\"ServerCommunicator instance already exists!\");\n            this.destroy();\n            return;\n        }\n        ServerCommunicator._instance = this;\n    }\n\n    public async sendGetRequest(endpoint: string): Promise<any> {\n        const url = `https://hmshtlser.online/${endpoint}`;\n\n        const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n\n    public async sendPostRequest(endpoint: string): Promise<any> {\n        const url = `https://hmshtlser.online/${endpoint}`;\n    \n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    }\n}\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('ShareInviteLink')\nexport class ShareInviteLink extends Component {\n\n    @property(String)\n    public baseLinkToShare: String = 'https://t.me/hamsmining_bot/start?startapp=';\n\n    start() {\n        this.node.on(Node.EventType.TOUCH_END, this.onClick, this);\n    }\n\n    async onClick() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        const user = tgWebApp.getTelegramUser();\n        const urlForShare = this.baseLinkToShare + user.id.toString();\n\n        tgWebApp.share(urlForShare, 'Hi! \\nJoin me in the Hamster Hotel Mining game! \\nPack your bags and accumulate a $SEM token for your future hotel!');\n    }\n}\n\n","import { _decorator, Component, Node, Vec3, tween, UITransform, Enum } from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum PopupState {\n    None,\n    Hidden,\n    Showing,\n    Shown,\n    Hiding,\n}\n\nenum SlideDirection {\n    Left,\n    Right,\n    Top,\n    Bottom,\n}\n\n@ccclass('SlidePopup')\nexport class SlidePopup extends Component {\n    @property({ type: Enum(SlideDirection) })\n    showDirection: SlideDirection = SlideDirection.Left;\n\n    @property({ type: Enum(SlideDirection) })\n    hideDirection: SlideDirection = SlideDirection.Right;\n\n    @property\n    showDuration: number = 0.5;\n\n    @property\n    hideDuration: number = 0.5;\n\n    @property\n    isOpenAtStart: boolean = false;\n\n    private state: PopupState = PopupState.None;\n\n    start() {\n        this.initPosition();\n    }\n\n    initPosition() {\n        if (this.isOpenAtStart) {\n            this.node.setPosition(new Vec3(0, 0, 0));\n            this.state = PopupState.Shown;\n        } else {\n            const startPos = this.getStartPosition(this.hideDirection);\n            this.node.setPosition(startPos);\n            this.state = PopupState.Hidden;\n        }\n    }\n\n    getStartPosition(direction: SlideDirection): Vec3 {\n        const canvasSize = this.node.parent!.getComponent(UITransform)!.contentSize;\n\n        switch (direction) {\n            case SlideDirection.Left:\n                return new Vec3(-canvasSize.width, 0, 0);\n            case SlideDirection.Right:\n                return new Vec3(canvasSize.width, 0, 0);\n            case SlideDirection.Top:\n                return new Vec3(0, canvasSize.height, 0);\n            case SlideDirection.Bottom:\n                return new Vec3(0, -canvasSize.height, 0);\n            default:\n                return new Vec3(0, 0, 0);\n        }\n    }\n\n    show() {\n        if (this.state !== PopupState.Hidden && this.state !== PopupState.Hiding && this.state !== PopupState.None) {\n            return;\n        }\n        this.state = PopupState.Showing;\n\n        const startPos = this.getStartPosition(this.showDirection);\n        this.node.setPosition(startPos);\n\n        tween(this.node)\n            .to(this.showDuration, { position: new Vec3(0, 0, 0) }, { easing: 'sineOut' })\n            .call(() => {\n                this.state = PopupState.Shown;\n            })\n            .start();\n    }\n\n    hide() {\n        if (this.state !== PopupState.Shown && this.state !== PopupState.Showing) {\n            return;\n        }\n        this.state = PopupState.Hiding;\n\n        const endPos = this.getStartPosition(this.hideDirection);\n\n        tween(this.node)\n            .to(this.hideDuration, { position: endPos }, { easing: 'sineIn' })\n            .call(() => {\n                this.state = PopupState.Hidden;\n            })\n            .start();\n    }\n}\n","import { _decorator, Component, Label, } from 'cc';\nimport { SuitcasesDataManager } from './SuitcasesDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SuitcaseCounter')\nexport class SuitcaseCounter extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n\n    start() {\n        this.initWithSuitcaseCount();\n    }\n\n    async initWithSuitcaseCount(){\n            while (!SuitcasesDataManager.instance.isInited) {\n                await new Promise(resolve => setTimeout(resolve, 100));\n            }\n\n            SuitcasesDataManager.eventTarget.on('currentSuitcasesUpdated', this.updateMe, this);\n        \n            if(this.myLabel){\n                this.myLabel.string = \"x\"+(await SuitcasesDataManager.instance.getCurrentSuitcaseFilledCount()).toString();\n            }\n        \n    }\n    \n    async updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = \"x\"+(await SuitcasesDataManager.instance.getCurrentSuitcaseFilledCount()).toString();\n        }\n    }\n}\n\n","import { _decorator, color, Color, Component, Label, Node, NodeEventType, Sprite, SpriteFrame, tween, UITransform, Vec3, EventTarget } from 'cc';\nimport { TimerLabel } from './TimerLabel';\nimport { LoadingHider } from './LoadingHider';\nimport { UserDataManager } from './UserDataManager';\nimport { SuitcasesDataManager, UserSuitcaseItemInfo, SuitcaseItemInfo, UserMiningSuitcaseItemInfo } from './SuitcasesDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('SuitcaseItemData')\nclass SuitcaseItemData {\n    @property\n    itemName: string = '';\n\n    @property(Sprite)\n    itemSprite: Sprite = null;\n}\n\n@ccclass('SuitcaseItems')\nclass SuitcaseItems {\n    @property([SuitcaseItemData])\n    itemDatas: SuitcaseItemData[] = [];\n}\n\n@ccclass('SuitcaseData')\nclass SuitcaseData {\n    @property\n    suitcaseId: number = 0;\n\n    @property(Node)\n    suitcaseNode: Node = null;\n\n    @property(SuitcaseItems)\n    items: SuitcaseItems = new SuitcaseItems();\n}\n\n@ccclass('Suitcases')\nclass Suitcases {\n    @property([SuitcaseData])\n    suitcasesDatas: SuitcaseData[] = [];\n}\n\n@ccclass('SuitcaseItemsController')\nexport class SuitcaseItemsController extends Component {\n    @property(Suitcases)\n    suitcases: Suitcases = new Suitcases();\n\n    @property({ type: Color })\n    notCollectedColor: Color = new Color(255, 255, 255);\n\n    @property({ type: Color })\n    collectedColor: Color = new Color(0, 255, 0);\n\n    @property(Sprite)\n    currentMiningItemSprite: Sprite = null;\n\n    @property(TimerLabel)\n    miningItemTimerLabel: TimerLabel = null;\n\n    @property(LoadingHider)\n    loadingHiderSuitcase: LoadingHider = null;\n\n    @property(LoadingHider)\n    loadingHiderCurrentItem: LoadingHider = null;\n\n    @property(Node)\n    allSuitcasesPackedNode: Node = null;\n\n    _currentMiningItem: SuitcaseItemInfo;\n    _currentUserMiningSuitcaseItemInfo: UserMiningSuitcaseItemInfo;\n\n    public eventTarget: EventTarget = new EventTarget();\n\n    protected start(): void {\n        this.init();\n    }\n\n    async init() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        while (!SuitcasesDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        await this.setCurrentSuitcase();\n        await this.setItemsColors();\n\n        this.currentMiningItemSprite.node.on(Node.EventType.TOUCH_END, this.onClickCurrentMiningItemSprite, this);\n    }\n\n    async onClickCurrentMiningItemSprite() {\n        if (!this._currentMiningItem && !this._currentUserMiningSuitcaseItemInfo) {\n            console.log('Nothing In Mining');\n            return;\n        }\n\n        if (!this.miningItemTimerLabel.isTimerActive) {\n            this.tryCollectCurrentMiningItem();\n        }\n    }\n\n    async tryCollectCurrentMiningItem() {\n        await SuitcasesDataManager.instance.collectMinedItem();\n        await this.setCurrentSuitcase(true);\n        await this.setItemsColors(true);\n    }\n\n    async setCurrentSuitcase(withForceUpdate: boolean = false) {\n        if (this.loadingHiderSuitcase) {\n            this.loadingHiderSuitcase.show();\n        }\n\n        if (this.loadingHiderCurrentItem) {\n            this.loadingHiderCurrentItem.show();\n        }\n\n        if (this.suitcases && this.suitcases.suitcasesDatas.length > 0) {\n            this.suitcases.suitcasesDatas.forEach(function (value) {\n                if (value.suitcaseNode) {\n                    value.suitcaseNode.active = false;\n                } else {\n                    console.error(\"suitcaseNode not inited with ID: \" + value.suitcaseId);\n                }\n            });\n        } else {\n            console.error(\"Array suitcasesDatas empty.\");\n        }\n\n        const currentSuitcaseIndex = await SuitcasesDataManager.instance.getCurrentSuitcaseIndex(withForceUpdate);\n\n        if (currentSuitcaseIndex === null || currentSuitcaseIndex === undefined || !Number.isInteger(currentSuitcaseIndex)) {\n            console.log(\"ALL SUITCASES FILLED!\")\n            if (this.allSuitcasesPackedNode) {\n                this.allSuitcasesPackedNode.active = true;\n            }\n            if (this.loadingHiderCurrentItem) {\n                this.loadingHiderCurrentItem.node.active = false;\n            }\n            return;\n        }\n\n        if (currentSuitcaseIndex !== null && currentSuitcaseIndex >= 0 && this.suitcases.suitcasesDatas[currentSuitcaseIndex]) {\n            if (this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseNode) {\n                this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseNode.active = true;\n                console.log('Suitcase inited');\n            } else {\n                console.error(\"suitcaseNode not inited with ID: \" + this.suitcases.suitcasesDatas[currentSuitcaseIndex].suitcaseId);\n            }\n        } else {\n            console.log('Not founded');\n        }\n    }\n\n    async setItemsColors(withForceUpdate: boolean = false) {\n        const currentSuitcaseIndex = await SuitcasesDataManager.instance.getCurrentSuitcaseIndex(withForceUpdate);\n\n        if (currentSuitcaseIndex === null || currentSuitcaseIndex === undefined || !Number.isInteger(currentSuitcaseIndex)) {\n            console.log(\"ALL SUITCASES FILLED!\")\n            if (this.allSuitcasesPackedNode) {\n                this.allSuitcasesPackedNode.active = true;\n            }\n            if (this.loadingHiderCurrentItem) {\n                this.loadingHiderCurrentItem.node.active = false;\n            }\n            return;\n        }\n\n        if (currentSuitcaseIndex !== null && currentSuitcaseIndex >= 0) {\n            this.suitcases.suitcasesDatas[currentSuitcaseIndex].items.itemDatas.forEach((value) => {\n                if (value.itemSprite) {\n                    value.itemSprite.color = this.notCollectedColor;\n                } else {\n                    console.error(\"itemSprite not inited for: \" + value.itemName);\n                }\n            });\n        } else {\n            console.log(\"Not founded\");\n        }\n\n        const allItems = await SuitcasesDataManager.instance.getAllItems(withForceUpdate);\n        const currentUserSuitcaseItems = await SuitcasesDataManager.instance.getCurrentUserSuitcaseItems(withForceUpdate);\n        const currentMiningUserItems = await SuitcasesDataManager.instance.getCurrentMiningUserSuitcaseItems(withForceUpdate);\n\n        for (const value of this.suitcases.suitcasesDatas[currentSuitcaseIndex].items.itemDatas) {\n            const suitcaseItemDataName = value.itemName;\n            if (!suitcaseItemDataName) {\n                console.error('Not founded suitcaseItemDataName');\n                return;\n            }\n            if (allItems.length === 0) return;\n\n            const suitcaseItemInfo = allItems.find(item => item.name === suitcaseItemDataName);\n            if (!suitcaseItemInfo) {\n                console.warn('Not founded suitcaseItemInfo');\n                continue;\n            }\n\n            if (currentUserSuitcaseItems.length === 0) return;\n\n            const suitcaseUserItemInfo = currentUserSuitcaseItems.find(item => item.itemId === suitcaseItemInfo.id);\n            if (!suitcaseUserItemInfo) {\n                console.error('Not founded suitcaseUserItemInfo');\n                return;\n            }\n\n            if (currentMiningUserItems.length === 0) return;\n\n            const currentUserMiningItem = currentMiningUserItems.find(item => item.itemId === suitcaseItemInfo.id);\n            if (!currentUserMiningItem) {\n                console.log('Not founded currentUserMiningItem');\n                continue;\n            }\n\n            if (suitcaseUserItemInfo.status == 'collected') {\n                value.itemSprite.color = this.collectedColor;\n            } else if (suitcaseUserItemInfo.status == 'mining') {\n                this.updateCurrentMiningItem(value.itemSprite.spriteFrame, suitcaseItemInfo, currentUserMiningItem);\n                this._currentUserMiningSuitcaseItemInfo = currentUserMiningItem;\n                this._currentMiningItem = suitcaseItemInfo;\n            }\n\n            if (this.loadingHiderSuitcase) {\n                this.loadingHiderSuitcase.hide();\n            }\n        }\n    }\n\n    updateCurrentMiningItem(spriteFrame: SpriteFrame, suitcaseItemInfo: SuitcaseItemInfo, userMiningItem: UserMiningSuitcaseItemInfo) {\n        if (!spriteFrame || !suitcaseItemInfo || !userMiningItem) {\n            console.error('Not found spriteFrame or suitcaseItemInfo or userMiningItem');\n            return;\n        }\n\n        if (this.currentMiningItemSprite) {\n            this.currentMiningItemSprite.spriteFrame = spriteFrame;\n\n            const node = this.currentMiningItemSprite.node;\n            const sprite = this.currentMiningItemSprite;\n\n            sprite.sizeMode = Sprite.SizeMode.RAW;\n\n            const originalWidth = spriteFrame.width;\n            const originalHeight = spriteFrame.height;\n\n            const nodeTransform = node.getComponent(UITransform);\n            const parentTransform = node.parent.getComponent(UITransform);\n\n            const maxWidth = parentTransform.width;\n            const maxHeight = parentTransform.height;\n\n            const scaleX = maxWidth / originalWidth;\n            const scaleY = maxHeight / originalHeight;\n            const scale = Math.min(scaleX, scaleY);\n\n            nodeTransform.width = originalWidth * scale;\n            nodeTransform.height = originalHeight * scale;\n        }\n\n        if (this.miningItemTimerLabel) {\n            this.miningItemTimerLabel.init(userMiningItem.dataStartMiningItem, suitcaseItemInfo.collectionDuration);\n        }\n\n        if (this.loadingHiderCurrentItem) {\n            this.loadingHiderCurrentItem.hide();\n        }\n    }\n}\n","import { _decorator, Component, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass } = _decorator;\n\nexport interface UserSuitcaseItemInfo {\n    id: number;\n    userId: string;\n    suitcaseId: number;\n    itemId: number;\n    status: string;\n}\n\nexport interface SuitcaseItemInfo {\n    id: number;\n    name: string;\n    collectionDuration: number;\n    price: number;\n    chance: number;\n    suitcaseTypeId: number;\n}\n\nexport interface UserSuitcaseInfo {\n    id: number;\n    userId: string;\n    suitcaseTypeId: number;\n    isComplete: number;\n}\n\nexport interface UserMiningSuitcaseItemInfo {\n    id: number;\n    dataStartMiningItem: string;\n    userId: string;\n    itemId: number;\n    isFinished: number;\n}\n\n@ccclass('SuitcasesDataManager')\nexport class SuitcasesDataManager extends Component {\n    private static _instance: SuitcasesDataManager;\n\n    public static get instance(): SuitcasesDataManager {\n        if (!this._instance) {\n            console.error(\"SuitcasesDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    currentAllItems: SuitcaseItemInfo[] = [];\n    currentItems: UserSuitcaseItemInfo[] = [];\n    currentMiningItems: UserMiningSuitcaseItemInfo[] = [];\n    currentSuitcases: UserSuitcaseInfo[] = [];\n\n    onLoad() {\n        if (SuitcasesDataManager._instance) {\n            console.warn(\"SuitcasesDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        SuitcasesDataManager._instance = this;\n\n        this.forceUpdateData();\n    }\n\n    public get isInited(): boolean {\n        return this.currentAllItems.length > 0 && this.currentMiningItems.length > 0 && this.currentSuitcases.length > 0;\n    }\n\n    public async forceUpdateData() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n        \n        this.setAllItemsFromServer();\n        this.setCurrentUserSuitcaseItemsFromServer();\n        this.setCurrentMiningUserSuitcaseItemsFromServer();\n        this.setCurrentSuitcasesFromServer();\n    }\n\n    async setAllItemsFromServer() {\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_items');\n            const allItems: any[][] = response;\n\n            this.currentAllItems = allItems.map((item: any) => ({\n                id: item[0],\n                name: item[1],\n                collectionDuration: item[2],\n                price: item[3],\n                chance: item[4],\n                suitcaseTypeId: item[5]\n            }));\n\n            SuitcasesDataManager.eventTarget.emit('allItemsUpdated');\n        } catch (error) {\n            console.error('Error fetching items:', error);\n        }\n    }\n\n    async setCurrentUserSuitcaseItemsFromServer() {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            const response = await ServerCommunicator.instance.sendGetRequest('get_user_suitcase_items?user_id=' + userId);\n\n            const items: any[][] = response;\n\n            if(!Array.isArray(items)){\n                return;\n            }\n\n            this.currentItems = items.map((item: any) => ({\n                id: item[0],\n                userId: item[1],\n                suitcaseId: item[2],\n                itemId: item[3],\n                status: item[4]\n            }));\n\n            SuitcasesDataManager.eventTarget.emit('currentUserSuitcaseItemsUpdated');\n        } catch (error) {\n            console.error('Error fetching user suitcase items:', error);\n        }\n    }\n\n    async setCurrentMiningUserSuitcaseItemsFromServer() {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_user_mining_items?user_id=' + userId);\n            const miningItems: any[][] = response;\n\n            this.currentMiningItems = miningItems.map((item: any) => ({\n                id: item[0],\n                dataStartMiningItem: item[1],\n                userId: item[2],\n                itemId: item[3],\n                isFinished: item[4]\n            }));\n\n            SuitcasesDataManager.eventTarget.emit('currentMiningUserSuitcaseItemsUpdated');\n        } catch (error) {\n            console.error('Error fetching mining items:', error);\n        }\n    }\n\n    async setCurrentSuitcasesFromServer() {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_user_suitcases?user_id=' + userId);\n            const userSuitcases: any[][] = response;\n\n            this.currentSuitcases = userSuitcases.map((item: any) => ({\n                id: item[0],\n                userId: item[1],\n                suitcaseTypeId: item[2],\n                isComplete: item[3]\n            }));\n\n            SuitcasesDataManager.eventTarget.emit('currentSuitcasesUpdated');\n        } catch (error) {\n            console.error('Error fetching user suitcases:', error);\n        }\n    }\n\n    public async getAllItems(forceUpdate: boolean = false): Promise<SuitcaseItemInfo[]> {\n        if (this.currentAllItems.length <= 0 || forceUpdate) {\n            await this.setAllItemsFromServer();\n        }\n        return this.currentAllItems;\n    }\n\n    public async getCurrentUserSuitcaseItems(forceUpdate: boolean = false): Promise<UserSuitcaseItemInfo[]> {\n        if (this.currentItems.length <= 0 || forceUpdate) {\n            await this.setCurrentUserSuitcaseItemsFromServer();\n        }\n        return this.currentItems;\n    }\n\n    public async getCurrentMiningUserSuitcaseItems(forceUpdate: boolean = false): Promise<UserMiningSuitcaseItemInfo[]> {\n        if (this.currentMiningItems.length <= 0 || forceUpdate) {\n            await this.setCurrentMiningUserSuitcaseItemsFromServer();\n        }\n        return this.currentMiningItems;\n    }\n\n    public async getCurrentSuitcaseIndex(forceUpdate: boolean = false): Promise<number> {\n        if (this.currentSuitcases.length <= 0 || forceUpdate) {\n            await this.setCurrentSuitcasesFromServer();\n        }\n        const incompleteSuitcase = this.currentSuitcases.find(suitcase => suitcase.isComplete === 0);\n        return incompleteSuitcase ? incompleteSuitcase.suitcaseTypeId - 1 : null;\n    }\n\n    public async getCurrentSuitcaseFilledCount(forceUpdate: boolean = false): Promise<number> {\n        if (this.currentSuitcases.length <= 0 || forceUpdate) {\n            await this.setCurrentSuitcasesFromServer();\n        }\n        const filledSuitcases = this.currentSuitcases.filter(suitcase => suitcase.isComplete === 1);\n        return filledSuitcases.length;\n    }    \n\n    public async collectMinedItem(): Promise<boolean> {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            await ServerCommunicator.instance.sendGetRequest('collect_mined_item?user_id=' + userId);\n            return true;\n        } catch (error) {\n            console.error('Error collecting mined item:', error);\n            return false;\n        }\n    }\n}\n","import { _decorator, Button, Component, Details, Enum, Label, Node, Sprite, SpriteFrame } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nimport { ButtonFeedbacks } from './ButtonFeedbacks';\nimport { PopupManager } from './PopupManager';\nimport { TaskData, TasksDataManager, TaskType } from './TasksDataManager';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('TaskItem')\nexport class TaskItem extends Component {\n\n    @property(Label)\n    nameLabel: Label | null = null;\n\n    @property(Label)\n    rewardLabel: Label | null = null;\n\n    @property(Button)\n    goButton: Button | null = null;\n\n    @property(Sprite)\n    buttonIconSprite: Sprite | null = null;\n\n    @property(SpriteFrame)\n    isCompletedIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    isNotCompletedIcon: SpriteFrame | null = null;\n\n    @property(Sprite)\n    iconSprite: Sprite | null = null;\n\n    @property(SpriteFrame)\n    subscribeIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    moneyIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    friendsIcon: SpriteFrame | null = null;\n\n    @property(SpriteFrame)\n    otherIcon: SpriteFrame | null = null;\n\n    myTaskData: TaskData;\n\n    init(task: TaskData){\n        this.myTaskData = task;\n        this.updateMe();\n    }\n \n    updateMe(){\n        if (this.nameLabel) {\n            this.nameLabel.string = this.myTaskData.taskInfo.name;\n        }\n        if (this.rewardLabel) {\n            this.rewardLabel.string = \"+\" + this.myTaskData.taskInfo.reward.toString();\n        }\n        if (this.iconSprite && this.otherIcon && this.subscribeIcon && this.moneyIcon && this.friendsIcon) {\n            switch (this.myTaskData.taskInfo.taskType) {\n                case TaskType.GoTo:\n                case TaskType.Other:\n                    this.iconSprite.spriteFrame = this.otherIcon;\n                    break;\n                case TaskType.Subscribe:\n                    this.iconSprite.spriteFrame = this.subscribeIcon;\n                    break;\n                case TaskType.MoneyCount:\n                    this.iconSprite.spriteFrame = this.moneyIcon;\n                    break;\n                case TaskType.FriendsCount:\n                    this.iconSprite.spriteFrame = this.friendsIcon;\n                    break;\n                default:\n                    console.log(\"Unknown task type\");\n                    break;\n            }\n        }\n\n        console.log(\"UPDATED TASK WITH TYPE: \" + this.myTaskData.taskInfo.taskType);\n\n        if (this.goButton && this.buttonIconSprite) {\n            if (this.myTaskData.userTaskInfo.status === \"completed\") {\n                if (this.isCompletedIcon) {\n                    this.buttonIconSprite.spriteFrame = this.isCompletedIcon;\n                }\n                if(this.goButton.getComponent(ButtonFeedbacks)) {\n                    this.goButton.getComponent(ButtonFeedbacks).enabled = false;\n                }\n                this.goButton.interactable = false;\n            } else {\n                if (this.isNotCompletedIcon) {\n                    this.buttonIconSprite.spriteFrame = this.isNotCompletedIcon;\n                }\n                if(this.goButton.getComponent(ButtonFeedbacks)) {\n                    this.goButton.getComponent(ButtonFeedbacks).enabled = true;\n                }\n                this.goButton.interactable = true;\n            }\n\n            this.goButton.node.off('click');\n            this.goButton.node.on('click', this.onTaskButtonClicked, this);\n        }\n    }\n\n    async onTaskButtonClicked() {\n        if (this.myTaskData.userTaskInfo.status === \"completed\") return;\n\n        const isNowCompleted = await TasksDataManager.instance.checkTaskCompleted(this.myTaskData.userTaskInfo.taskId);\n\n        console.log(\"Clicked task status: \" + isNowCompleted);\n\n        if (isNowCompleted) {\n            TasksDataManager.instance.forceUpdateData();\n            UserDataManager.instance.forceUpdateUserInfo();\n        } else {\n            this.goToCompleteTask();\n        }\n    }\n\n    async goToCompleteTask() {\n        switch (this.myTaskData.taskInfo.taskType) {\n            case TaskType.GoTo:\n            case TaskType.Other:\n                await this.goOtherComplete();\n                break;\n            case TaskType.Subscribe:\n                await this.goSubscribeComplete();\n                break;\n            case TaskType.MoneyCount:\n                this.goMoneyComplete();\n                break;\n            case TaskType.FriendsCount:\n                this.goFriendsComplete();\n                break;\n            default:\n                console.log(\"Unknown task type\");\n                break;\n        }\n    }\n\n    async goOtherComplete() {\n        // const tgWebApp = TelegramWebApp.Instance;\n        // await tgWebApp.init();\n        // tgWebApp.openLink(this.myTaskData.taskInfo.details);\n    }\n\n    async goSubscribeComplete() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        let forUrlSliced = this.myTaskData.taskInfo.details.slice(1);\n\n        const link = \"https://t.me/\" + forUrlSliced;\n\n        tgWebApp.openTelegramLink(link);\n    }\n\n    goMoneyComplete() {\n        PopupManager.getInstance().hidePopup(0);\n    }\n\n    goFriendsComplete() {\n        PopupManager.getInstance().switchPopup(0, 3);\n    }\n}\n\n","import { _decorator, Component, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass } = _decorator;\n\nexport enum TaskType {\n    Other = \"Other\",\n    GoTo = \"GoTo\",\n    Subscribe = \"Subscribe\",\n    MoneyCount = \"MoneyCount\",\n    FriendsCount = \"FriendsCount\",\n}\n\nexport interface UserTaskInfo {\n    id: number;\n    userId: string;\n    taskId: number;\n    status: string;\n}\n\nexport interface TaskInfo {\n    id: number;\n    name: string;\n    reward: number;\n    taskType: TaskType;\n    details: string;\n}\n\nexport interface TaskData{\n    taskInfo: TaskInfo;\n    userTaskInfo: UserTaskInfo;\n}\n\n@ccclass('TasksDataManager')\nexport class TasksDataManager extends Component {\n    private static _instance: TasksDataManager;\n\n    public static get instance(): TasksDataManager {\n        if (!this._instance) {\n            console.error(\"TasksDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    currentTasks: TaskInfo[] = [];\n    currentUserTasks: UserTaskInfo[] = [];\n\n    onLoad() {\n        if (TasksDataManager._instance) {\n            console.warn(\"TasksDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        TasksDataManager._instance = this;\n\n        this.forceUpdateData();\n    }\n\n    public get isInited(): boolean {\n        return this.currentTasks.length > 0 && this.currentUserTasks.length > 0;\n    }\n\n    public async forceUpdateData() {\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        await this.setAllTasksFromServer();\n        await this.setCurrentUserTasksFromServer();\n    }\n\n    async setAllTasksFromServer() {\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_tasks');\n            const allTasks: any[][] = response;\n\n            this.currentTasks = allTasks.map((item: any) => ({\n                id: item[0],\n                name: item[1],\n                reward: item[2],\n                taskType: this.mapTaskType(item[3]),\n                details: item[4]\n            }));\n\n            TasksDataManager.eventTarget.emit('allTasksUpdated');\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    }\n\n    async setCurrentUserTasksFromServer() {\n        try {\n            const userId = UserDataManager.instance.getUserId();\n            const response = await ServerCommunicator.instance.sendGetRequest('get_user_tasks?user_id=' + userId);\n\n            const userTasks: any[][] = response;\n\n            if (!Array.isArray(userTasks)) {\n                return;\n            }\n\n            this.currentUserTasks = userTasks.map((item: any) => ({\n                id: item[0],\n                userId: item[1],\n                taskId: item[2],\n                status: item[3]\n            }));\n\n            TasksDataManager.eventTarget.emit('currentUserTasksUpdated');\n        } catch (error) {\n            console.error('Error fetching user tasks:', error);\n        }\n    }\n\n    async checkTaskCompleted(taskId: number){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const userId = UserDataManager.instance.getUserId();\n        const response = await ServerCommunicator.instance.sendGetRequest('check_task_completion?user_id='+userId+\"&task_id=\"+taskId);\n\n        const taskCompleted: boolean = response[0]\n\n        return taskCompleted;\n    }\n\n    public async getAllTasks(forceUpdate: boolean = false): Promise<TaskInfo[]> {\n        if (this.currentTasks.length <= 0 || forceUpdate) {\n            await this.setAllTasksFromServer();\n        }\n        return this.currentTasks;\n    }\n\n    public async getUserTasks(forceUpdate: boolean = false): Promise<UserTaskInfo[]> {\n        if (this.currentUserTasks.length <= 0 || forceUpdate) {\n            await this.setCurrentUserTasksFromServer();\n        }\n        return this.currentUserTasks;\n    }\n\n    private mapTaskType(taskTypeString: string): TaskType {\n        switch (taskTypeString) {\n            case \"GoTo\":\n                return TaskType.GoTo;\n            case \"Subscribe\":\n                return TaskType.Subscribe;\n            case \"MoneyCount\":\n                return TaskType.MoneyCount;\n            case \"FriendsCount\":\n                return TaskType.FriendsCount;\n            case \"Other\":\n            default:\n                return TaskType.Other;\n        }\n    }\n}\n","import { _decorator, Component, instantiate, Node, Prefab } from 'cc';\nimport { UserDataManager } from './UserDataManager';\nimport { TaskData, TaskInfo, TasksDataManager } from './TasksDataManager';\nimport { TaskItem } from './TaskItem';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TasksScrollViewer')\nexport class TasksScrollViewer extends Component {\n    @property(Prefab)\n    taskItemPrefab: Prefab = null;\n\n    @property(Node)\n    contentNode: Node = null;\n\n    start() {\n        this.init();\n    }\n\n    async init(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        while (!TasksDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        TasksDataManager.eventTarget.on('currentUserTasksUpdated', this.updateMe, this);\n\n        this.updateMe();\n    }\n\n    async updateMe() {\n        while (!TasksDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n    \n        const userTasksInfos = await TasksDataManager.instance.getUserTasks();\n        const allTasksInfos = await TasksDataManager.instance.getAllTasks();\n    \n        const taskInfoMap = new Map<number, TaskInfo>();\n        allTasksInfos.forEach(taskInfo => {\n            taskInfoMap.set(taskInfo.id, taskInfo);\n        });\n    \n        const taskDataArray: TaskData[] = userTasksInfos.map(userTaskInfo => {\n            const taskInfo = taskInfoMap.get(userTaskInfo.taskId);\n            return {\n                taskInfo: taskInfo!,\n                userTaskInfo: userTaskInfo\n            };\n        });\n        \n        this.updateTasksList(taskDataArray);\n        console.log(\"TASK DATA ARRAY:\" + taskDataArray);\n    }\n    \n\n    updateTasksList(tasks: TaskData[]){\n        if (this.contentNode.children.length > 0) {\n            this.contentNode.removeAllChildren();\n        }\n\n        if(this.taskItemPrefab && this.contentNode){\n            for (let i = 0; i < tasks.length; i++) {\n                const newFriendItemPrefab = instantiate(this.taskItemPrefab);\n                this.contentNode.addChild(newFriendItemPrefab);\n                newFriendItemPrefab.getComponent(TaskItem).init(tasks[i]);\n            }\n        }\n    }\n}\n\n","import { _decorator, sys } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\nconst tgLoadPromise = new Promise<any>((resolve, reject) => {\n    if (sys.platform === sys.Platform.MOBILE_BROWSER || sys.platform === sys.Platform.DESKTOP_BROWSER) {\n        const script = document.createElement(\"script\");\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\n        script.async = true;\n        script.onload = () => {\n            const intervalId = setInterval(() => {\n                if ((window as any).Telegram && (window as any).Telegram.WebApp) {\n                    resolve((window as any).Telegram.WebApp);\n                    clearInterval(intervalId);\n                }\n            }, 100);\n        };\n        script.onerror = () => reject(new Error(\"Unable to load TelegramWebApp SDK, please check logs.\"));\n        document.head.appendChild(script);\n    }\n});\n\nexport interface WebAppUser {\n    id: number;\n    is_bot: boolean;\n    first_name: string;\n    last_name?: string;\n    username?: string;\n    language_code?: string;\n    is_premium?: boolean;\n    added_to_attachment_menu?: boolean;\n    allows_write_to_pm?: boolean;\n    photo_url?: string;\n}\nexport interface WebAppChat {\n    id: number;\n    type: 'private' | 'group' | 'supergroup' | 'channel';\n    title: string;\n    username?: string;\n    photo_url?: string;\n}\nexport interface WebAppInitData {\n    query_id?: string;\n    user?: WebAppUser;\n    receiver?: WebAppUser;\n    chat?: WebAppChat;\n    chat_type?: 'private' | 'group' | 'supergroup' | 'channel';\n    chat_instance?: string;\n    start_param?: string;\n    can_send_after?: number;\n    auth_data: number;\n    hash: string;\n}\n\n@ccclass('TelegramWebApp')\nexport class TelegramWebApp {\n    private static _instance: TelegramWebApp;\n    private constructor() {\n\n    }\n    public static get Instance(): TelegramWebApp {\n        if (!TelegramWebApp._instance) {\n            TelegramWebApp._instance = new TelegramWebApp();\n        }\n        return TelegramWebApp._instance;\n    }\n\n    private _tgWebAppJS: any = null;\n    public async init(): Promise<{ success: boolean }> {\n        this._tgWebAppJS = await tgLoadPromise;\n\n        if (this._tgWebAppJS) {\n            this.expand();\n            return Promise.resolve({ success: true });\n        } else {\n            return Promise.resolve({ success: false });\n        }\n    }\n\n    public openLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openLink(url);\n    }\n\n    public openTelegramLink(url: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        this._tgWebAppJS.openTelegramLink(url);\n    }\n\n    public share(url: string, text?: string) {\n        const shareUrl = 'https://t.me/share/url?url=' + url + '&' + new URLSearchParams({ text: text || '' }).toString();\n        this.openTelegramLink(shareUrl);\n    }\n\n    public shareToStory(media_url: string, shareText?: string, widget_link_url?: string, widget_link_name?: string) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return;\n        }\n        const widget_link = {\n            text: shareText,\n            widget_link: {\n                url: widget_link_url,\n                name: widget_link_name,\n            },\n        };\n        this._tgWebAppJS.shareToStory(media_url, widget_link);\n    }\n\n    public expand() {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n\n        if(!this._tgWebAppJS.isExpanded){\n            this._tgWebAppJS.expand();\n        }\n    }\n\n    public getTelegramWebApp() {\n        return this._tgWebAppJS;\n    }\n\n    public getTelegramWebAppInitData(): WebAppInitData {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe;\n    }\n\n    public getTelegramUser(): WebAppUser {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initDataUnsafe.user;\n    }\n\n    public getTelegramInitData(): string {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.initData;\n    }\n\n    public doHapticImpact(style: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.impactOccurred(style);\n    }\n\n    public doHapticNotification(type: string){\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        return this._tgWebAppJS.HapticFeedback.notificationOccurred(type);\n    }\n\n    public openInvoice(url: string, callback: any) {\n        if (!this._tgWebAppJS) {\n            console.error(\"telegram web app is not inited!\");\n            return null;\n        }\n        this._tgWebAppJS.openInvoice(url, callback);\n    }\n\n    public alert(message: string) {\n        this._tgWebAppJS.showAlert(message);\n    }\n}\n\n\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { ServerCommunicator } from \"./ServerCommunicator\";\nconst { ccclass, property } = _decorator;\n\nexport interface SuitcaseItemInfo {\n    id: number;\n    name: string;\n    collectionDuration: number;\n    price: number;\n    chance: number;\n    suitcaseTypeId: number;\n}\n\n@ccclass('TestGetLabel')\nexport class TestGetLabel extends Component {\n    @property(ServerCommunicator)\n    serverCommunicator: ServerCommunicator=null;\n    @property(Label)\n    label: Label = null;\n\n    currentAllItems: SuitcaseItemInfo[] = [];\n\n    protected start(): void {\n        this.getMetod();\n    }\n\n    async getMetod(){\n        try {\n            const response = await this.serverCommunicator.sendGetRequest('get_all_items');\n\n            const allItems: any[][] = response;\n\n            this.currentAllItems = allItems.map((item: any) => ({\n                id: item[0],\n                name: item[1],\n                collectionDuration: item[2],\n                price: item[3],\n                chance: item[4],\n                suitcaseTypeId: item[5]\n            }));\n        } catch (error) {\n            console.error('Error fetching items:', error);\n        }\n\n        \n        this.label.string = this.currentAllItems[1].name;\n    }\n}\n\n","import { _decorator, Component, Label } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('TimerLabel')\nexport class TimerLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    private endDate: Date = null;\n    public isTimerActive: boolean = false;\n\n    private timeDifference: number = 0;\n\n    protected start(): void {\n        this.myLabel.string = '00:00:00:00';\n    }\n\n    async init(dateString: string, duration: number): Promise<void> {\n\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        const startDate = new Date(dateString.replace(/-/g, \"/\"));\n        const DurationMs = duration * 60 * 60 * 1000;\n\n        this.timeDifference = UserDataManager.instance.getTimeDifference();\n        if(!this.timeDifference){\n            console.error(\"cant get sync time from userDataManager\");\n            return;\n        }\n\n        this.endDate = new Date(startDate.getTime() + DurationMs);\n        this.isTimerActive = true;\n\n        this.updateLabel();\n    }\n\n    protected update(dt: number): void {\n        if (this.isTimerActive && this.endDate) {\n            this.updateLabel();\n        }\n    }\n\n    private updateLabel(): void {\n        const currentTime = new Date(new Date().getTime() + this.timeDifference);\n        const timeLeft = this.endDate.getTime() - currentTime.getTime();\n\n        if (timeLeft <= 0) {\n            this.myLabel.string = \"00:00:00:00\";\n            this.isTimerActive = false;\n        } else {\n            this.myLabel.string = this.formatTimeLeft(timeLeft);\n        }\n    }\n\n    formatTimeLeft(timeLeft: number): string {\n        const seconds = Math.floor((timeLeft / 1000) % 60);\n        const minutes = Math.floor((timeLeft / (1000 * 60)) % 60);\n        const hours = Math.floor((timeLeft / (1000 * 60 * 60)) % 24);\n        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));\n\n        function padZero(num: number): string {\n            return (num < 10 ? '0' : '') + num;\n        }\n\n        return padZero(days) + ':' + padZero(hours) + ':' + padZero(minutes) + ':' + padZero(seconds);\n    }\n}\n","import { _decorator, Component, Node, EventTarget } from 'cc';\nimport { ServerCommunicator } from './ServerCommunicator';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\nexport interface UserInfo {\n    id: string;\n    name: string;\n    photoUrl: string;\n    balance: number;\n    dateStartMining?: string;\n    speedId: number;\n    durationId: number;\n    invitedBy?: string;\n}\n\nexport interface SpeedInfo {\n    id: number;\n    speed: number;\n    price: number;\n}\n\nexport interface DurationInfo {\n    id: number;\n    duration: number;\n    price: number;\n}\n\n@ccclass('UserDataManager')\nexport class UserDataManager extends Component {\n    @property\n    isDebug: boolean = false;\n\n    @property\n    debugId: string = \"5793743593\";\n\n    @property\n    debugName: string = \"gerb\";\n\n    @property\n    debugStartParams: string = \"\";\n    \n    private static _instance: UserDataManager;\n\n    currentUserInfo: UserInfo = null;\n    speedInfos: SpeedInfo[] = [];\n    durationInfos: DurationInfo[] = [];\n\n    isTimeSyncWithServer: boolean = false;\n\n    timeDifference: number = null;\n\n    firstname: string = \"undefined\";\n\n    username: string = \"undefined\";\n\n    defaultName: string = \"Anonymous\";\n\n    public static eventTarget: EventTarget = new EventTarget();\n\n    public static get instance(): UserDataManager {\n        if (!this._instance) {\n            console.error(\"UserDataManager instance is not initialized!\");\n        }\n        return this._instance;\n    }\n\n    public get isInited(): boolean {\n        if(this.currentUserInfo && this.speedInfos.length > 0 && this.durationInfos.length > 0 && this.isTimeSyncWithServer){\n            return true;\n        }\n        return false;\n    }\n    onLoad() {\n        if (UserDataManager._instance) {\n            console.warn(\"UserDataManager instance already exists!\");\n            this.destroy();\n            return;\n        }\n        UserDataManager._instance = this;\n        this.syncTimeWithServer();\n        \n        this.setSpeedInfosFromServer();\n        this.setDurationInfosFromServer();\n\n        this.forceUpdateUserInfo();\n    }\n\n    public getUserId(): string {\n        if (this.currentUserInfo) {\n            return this.currentUserInfo.id;\n        } else {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n    }\n\n    public getUserName(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.name;\n    }\n\n    public getUserPhotoUrl(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.photoUrl;\n    }\n\n    public getUserBalance(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.balance;\n    }\n\n    public getUserMiningStartDate(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.dateStartMining;\n    }\n\n    public getUserSpeedId(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.speedId;\n    }\n\n    public getUserDurationId(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.durationId;\n    }\n\n    public getUserInvitedBy(): string {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.currentUserInfo.invitedBy;\n    }\n\n    public getUserCurrentSpeed(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === this.getUserSpeedId());\n        return speedInfo ? speedInfo.speed : null;\n    }\n\n    public getSpeedPriceById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === id);\n        return speedInfo ? speedInfo.price : null;\n    }\n\n    public getMiningSpeedById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const speedInfo = this.speedInfos.find(info => info.id === id);\n        return speedInfo ? speedInfo.speed : null;\n    }\n\n    public getSpeedInfosCount(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.speedInfos.length;\n    }\n\n    public getUserCurrentDuration(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === this.getUserDurationId());\n        return durationInfo ? durationInfo.duration : null;\n    }\n\n    public getDurationPriceById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === id);\n        return durationInfo ? durationInfo.price : null;\n    }\n\n    public getMiningDurationById(id: number): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        const durationInfo = this.durationInfos.find(info => info.id === id);\n        return durationInfo ? durationInfo.duration : null;\n    }\n\n    public getDurationInfosCount(): number {\n        if (!this.currentUserInfo) {\n            console.error(\"Error: user information is missing\");\n            return null;\n        }\n        return this.durationInfos.length;\n    }\n\n    async syncTimeWithServer(): Promise<void> {\n        if (this.isTimeSyncWithServer) return;\n\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_server_time');\n            const serverTimeString: string = response;\n\n            const serverTime = new Date(serverTimeString.replace(/-/g, \"/\"));\n\n            this.timeDifference = serverTime.getTime() - new Date().getTime();\n            \n            this.isTimeSyncWithServer = true;\n        } catch (error) {\n            console.error('Error fetching server time:', error);\n        }\n    }\n\n    public getTimeDifference(): number{\n        if(!this.isTimeSyncWithServer){\n            return null;\n        }\n        \n        return this.timeDifference;\n    }\n\n    getGoodUserName(){\n        if(this.isDebug){\n            return \"Debug A\"\n        }\n\n        if(this.firstname === \"undefined\"){\n            if(this.username === \"undefined\"){\n                return this.defaultName;\n            }\n            return this.username;\n        }\n        return this.firstname;\n    }\n\n    public forceUpdateUserInfo(){\n        this.setUserInfoFromServer();\n    }\n\n    async setUserInfoFromServer(){\n        try{\n            if(this.isDebug){\n                const response = await ServerCommunicator.instance.sendGetRequest('get_user?id=' + this.debugId + '&name=' + this.debugName + '&referal=' + this.debugStartParams);\n    \n                const userInfoItems: any = response;\n    \n                console.log(userInfoItems);\n    \n                this.currentUserInfo = {\n                    id: userInfoItems.id,\n                    name: userInfoItems.username, \n                    photoUrl: userInfoItems.photo_url, \n                    balance: userInfoItems.balance,\n                    dateStartMining: userInfoItems.date_start_mining,\n                    speedId: userInfoItems.speed_id,\n                    durationId: userInfoItems.duration_id,\n                    invitedBy: userInfoItems.invited_by\n                };\n\n                UserDataManager.eventTarget.emit('userDataUpdated');\n            } else {\n                const tgWebApp = TelegramWebApp.Instance;\n                await tgWebApp.init();\n        \n                const user = tgWebApp.getTelegramUser();\n                const initData = tgWebApp.getTelegramWebAppInitData();\n\n                this.firstname = user.first_name;\n\n                this.username = user.username;\n        \n                const response = await ServerCommunicator.instance.sendGetRequest('get_user?id=' + user.id + '&name=' + user.username + '&referal=' + initData.start_param);\n\n                const userInfoItems: any = response;\n    \n                console.log(userInfoItems);\n    \n                this.currentUserInfo = {\n                    id: userInfoItems.id,\n                    name: userInfoItems.username,\n                    photoUrl: userInfoItems.photo_url,\n                    balance: userInfoItems.balance,\n                    dateStartMining: userInfoItems.date_start_mining,\n                    speedId: userInfoItems.speed_id,\n                    durationId: userInfoItems.duration_id,\n                    invitedBy: userInfoItems.invited_by\n                };\n\n                UserDataManager.eventTarget.emit('userDataUpdated');\n            }\n\n            // if(!this.isInited){\n            //     await new Promise(resolve => setTimeout(resolve, 500));\n            //     this.forceUpdateUserInfo();\n            // }\n        } catch (error) {\n            console.error('Error setting user:', error);\n        }\n    }\n    \n\n    async setSpeedInfosFromServer(){\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_speeds');\n            \n            const allSpeeds: any[][] = response;\n\n            this.speedInfos = [];\n\n            this.speedInfos = allSpeeds.map((item: any) => ({\n                id: item[0],\n                speed: item[1],\n                price: item[2]\n            }));\n        } catch (error) {\n            console.error('Error fetching speeds:', error);\n        }\n    }\n\n    async setDurationInfosFromServer(){\n        try {\n            const response = await ServerCommunicator.instance.sendGetRequest('get_all_durations');\n            \n            const allDurations: any[][] = response;\n\n            this.durationInfos = [];\n\n            this.durationInfos = allDurations.map((item: any) => ({\n                id: item[0],\n                duration: item[1],\n                price: item[2]\n            }));\n        } catch (error) {\n            console.error('Error fetching durations:', error);\n        }\n    }\n}\n","import { _decorator, Component, Label, Sprite, ImageAsset, Texture2D, SpriteFrame } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('UserInfoDisplay')\nexport class UserInfoDisplay extends Component {\n    @property(Label)\n    public userInfoLabel: Label | null = null;\n\n    @property(Label)\n    public avatarUrlLabel: Label | null = null;\n\n    @property(Sprite)\n    public userAvatar: Sprite | null = null;\n\n    start() {\n        this.updateUserInfo();\n    }\n\n    private async updateUserInfo() {\n        const tgWebApp = TelegramWebApp.Instance;\n        await tgWebApp.init();\n\n        const user = tgWebApp.getTelegramUser();\n        if (user) {\n            if (this.userInfoLabel) {\n                this.userInfoLabel.string = `ID: ${user.id}\\nUsername: ${user.username}`;\n            }\n\n            if (this.avatarUrlLabel) {\n                this.avatarUrlLabel.string = `${user.photo_url}`;\n            }\n\n            if (user.photo_url && this.userAvatar) {\n                this.loadAvatar(user.photo_url);\n            }\n        } else {\n            console.error(\"User data is not available.\");\n        }\n    }\n\n    private loadAvatar(url: string) {\n        if (!this.userAvatar) return;\n\n        const imgAsset = new ImageAsset();\n\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = url;\n\n        img.onload = () => {\n            imgAsset.reset(img);\n\n            const texture = new Texture2D();\n            texture.image = imgAsset;\n\n            texture.setFilters(Texture2D.Filter.LINEAR, Texture2D.Filter.LINEAR);\n\n            const spriteFrame = new SpriteFrame();\n            spriteFrame.texture = texture;\n\n            this.userAvatar.type = Sprite.Type.SIMPLE;\n            this.userAvatar.sizeMode = Sprite.SizeMode.RAW;\n            this.userAvatar.spriteFrame = spriteFrame;\n        };\n\n        img.onerror = () => {\n            console.error(\"Failed to load avatar image.\");\n        };\n    }\n}\n","import { _decorator, Component, Label, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nimport { UserDataManager } from './UserDataManager';\nconst { ccclass, property } = _decorator;\n\n@ccclass('UsernameLabel')\nexport class UsernameLabel extends Component {\n    @property(Label)\n    myLabel: Label = null;\n\n    start() {\n        this.initWithUserData();\n    }\n\n    async initWithUserData(){\n        while (!UserDataManager.instance.isInited) {\n            await new Promise(resolve => setTimeout(resolve, 100));\n        }\n\n        UserDataManager.eventTarget.on('userDataUpdated', this.updateMe, this);\n        \n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getGoodUserName();\n        }\n    }\n    \n    updateMe(){\n        if(this.myLabel){\n            this.myLabel.string = UserDataManager.instance.getGoodUserName();\n        }\n    }\n}\n\n","import { _decorator, Component, Node } from 'cc';\nimport { TelegramWebApp } from './telegram-web';\nconst { ccclass, property } = _decorator;\n\n@ccclass('VibrationManager')\nexport default class VibrationManager {\n    private static isVibrationSupported(): boolean {\n        return TelegramWebApp.Instance != null;\n    }\n\n    public static light(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"light\");\n        }\n    }\n\n    public static medium(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"medium\");\n        }\n    }\n\n    public static heavy(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"heavy\");\n        }\n    }\n\n    public static rigid(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"rigid\");\n        }\n    }\n\n    public static soft(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticImpact(\"soft\");\n        }\n    }\n\n    public static error(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"error\");\n        }\n    }\n\n    public static success(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"success\");\n        }\n    }\n\n    public static warning(): void {\n        if (this.isVibrationSupported()) {\n            TelegramWebApp.Instance.doHapticNotification(\"warning\");\n        }\n    }\n}\n"]}